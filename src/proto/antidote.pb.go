// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: antidote.proto

package proto

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CRDTType int32

const (
	CRDTType_COUNTER     CRDTType = 3
	CRDTType_ORSET       CRDTType = 4
	CRDTType_LWWREG      CRDTType = 5
	CRDTType_MVREG       CRDTType = 6
	CRDTType_GMAP        CRDTType = 8
	CRDTType_RWSET       CRDTType = 10
	CRDTType_RRMAP       CRDTType = 11
	CRDTType_FATCOUNTER  CRDTType = 12
	CRDTType_FLAG_EW     CRDTType = 13
	CRDTType_FLAG_DW     CRDTType = 14
	CRDTType_TOPK        CRDTType = 1
	CRDTType_TOPK_RMV    CRDTType = 2
	CRDTType_AVG         CRDTType = 7
	CRDTType_LEADERBOARD CRDTType = 9
	CRDTType_MAXMIN      CRDTType = 0
	CRDTType_ORMAP       CRDTType = 15
)

// Enum value maps for CRDTType.
var (
	CRDTType_name = map[int32]string{
		3:  "COUNTER",
		4:  "ORSET",
		5:  "LWWREG",
		6:  "MVREG",
		8:  "GMAP",
		10: "RWSET",
		11: "RRMAP",
		12: "FATCOUNTER",
		13: "FLAG_EW",
		14: "FLAG_DW",
		1:  "TOPK",
		2:  "TOPK_RMV",
		7:  "AVG",
		9:  "LEADERBOARD",
		0:  "MAXMIN",
		15: "ORMAP",
	}
	CRDTType_value = map[string]int32{
		"COUNTER":     3,
		"ORSET":       4,
		"LWWREG":      5,
		"MVREG":       6,
		"GMAP":        8,
		"RWSET":       10,
		"RRMAP":       11,
		"FATCOUNTER":  12,
		"FLAG_EW":     13,
		"FLAG_DW":     14,
		"TOPK":        1,
		"TOPK_RMV":    2,
		"AVG":         7,
		"LEADERBOARD": 9,
		"MAXMIN":      0,
		"ORMAP":       15,
	}
)

func (x CRDTType) Enum() *CRDTType {
	p := new(CRDTType)
	*p = x
	return p
}

func (x CRDTType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CRDTType) Descriptor() protoreflect.EnumDescriptor {
	return file_antidote_proto_enumTypes[0].Descriptor()
}

func (CRDTType) Type() protoreflect.EnumType {
	return &file_antidote_proto_enumTypes[0]
}

func (x CRDTType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CRDTType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CRDTType(num)
	return nil
}

// Deprecated: Use CRDTType.Descriptor instead.
func (CRDTType) EnumDescriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{0}
}

type READType int32

const (
	READType_FULL READType = 0
	//Set
	READType_LOOKUP READType = 1
	//Maps
	READType_GET_VALUE  READType = 2
	READType_HAS_KEY    READType = 3
	READType_GET_KEYS   READType = 4
	READType_GET_VALUES READType = 5 //Return value for a given set of keys
	//TopK
	READType_GET_N           READType = 6
	READType_GET_ABOVE_VALUE READType = 7 //TODO: Both this and GET_N still need to be implemented in the topK.
	READType_GET_FULL_AVG    READType = 8
)

// Enum value maps for READType.
var (
	READType_name = map[int32]string{
		0: "FULL",
		1: "LOOKUP",
		2: "GET_VALUE",
		3: "HAS_KEY",
		4: "GET_KEYS",
		5: "GET_VALUES",
		6: "GET_N",
		7: "GET_ABOVE_VALUE",
		8: "GET_FULL_AVG",
	}
	READType_value = map[string]int32{
		"FULL":            0,
		"LOOKUP":          1,
		"GET_VALUE":       2,
		"HAS_KEY":         3,
		"GET_KEYS":        4,
		"GET_VALUES":      5,
		"GET_N":           6,
		"GET_ABOVE_VALUE": 7,
		"GET_FULL_AVG":    8,
	}
)

func (x READType) Enum() *READType {
	p := new(READType)
	*p = x
	return p
}

func (x READType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (READType) Descriptor() protoreflect.EnumDescriptor {
	return file_antidote_proto_enumTypes[1].Descriptor()
}

func (READType) Type() protoreflect.EnumType {
	return &file_antidote_proto_enumTypes[1]
}

func (x READType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *READType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = READType(num)
	return nil
}

// Deprecated: Use READType.Descriptor instead.
func (READType) EnumDescriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{1}
}

type ApbSetUpdate_SetOpType int32

const (
	ApbSetUpdate_ADD    ApbSetUpdate_SetOpType = 1
	ApbSetUpdate_REMOVE ApbSetUpdate_SetOpType = 2
)

// Enum value maps for ApbSetUpdate_SetOpType.
var (
	ApbSetUpdate_SetOpType_name = map[int32]string{
		1: "ADD",
		2: "REMOVE",
	}
	ApbSetUpdate_SetOpType_value = map[string]int32{
		"ADD":    1,
		"REMOVE": 2,
	}
)

func (x ApbSetUpdate_SetOpType) Enum() *ApbSetUpdate_SetOpType {
	p := new(ApbSetUpdate_SetOpType)
	*p = x
	return p
}

func (x ApbSetUpdate_SetOpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApbSetUpdate_SetOpType) Descriptor() protoreflect.EnumDescriptor {
	return file_antidote_proto_enumTypes[2].Descriptor()
}

func (ApbSetUpdate_SetOpType) Type() protoreflect.EnumType {
	return &file_antidote_proto_enumTypes[2]
}

func (x ApbSetUpdate_SetOpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ApbSetUpdate_SetOpType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ApbSetUpdate_SetOpType(num)
	return nil
}

// Deprecated: Use ApbSetUpdate_SetOpType.Descriptor instead.
func (ApbSetUpdate_SetOpType) EnumDescriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{3, 0}
}

// Riak Error response
type ApbErrorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errmsg  []byte  `protobuf:"bytes,1,req,name=errmsg" json:"errmsg,omitempty"`
	Errcode *uint32 `protobuf:"varint,2,req,name=errcode" json:"errcode,omitempty"`
}

func (x *ApbErrorResp) Reset() {
	*x = ApbErrorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbErrorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbErrorResp) ProtoMessage() {}

func (x *ApbErrorResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbErrorResp.ProtoReflect.Descriptor instead.
func (*ApbErrorResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{0}
}

func (x *ApbErrorResp) GetErrmsg() []byte {
	if x != nil {
		return x.Errmsg
	}
	return nil
}

func (x *ApbErrorResp) GetErrcode() uint32 {
	if x != nil && x.Errcode != nil {
		return *x.Errcode
	}
	return 0
}

// Counter increment request
type ApbCounterUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// inc indicates the value to be incremented. To decrement, use a negative value. If no value is given, it will be considered as an increment by 1
	Inc *int64 `protobuf:"zigzag64,1,opt,name=inc" json:"inc,omitempty"`
}

func (x *ApbCounterUpdate) Reset() {
	*x = ApbCounterUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbCounterUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbCounterUpdate) ProtoMessage() {}

func (x *ApbCounterUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbCounterUpdate.ProtoReflect.Descriptor instead.
func (*ApbCounterUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{1}
}

func (x *ApbCounterUpdate) GetInc() int64 {
	if x != nil && x.Inc != nil {
		return *x.Inc
	}
	return 0
}

// Response operation
type ApbGetCounterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *int32 `protobuf:"zigzag32,1,req,name=value" json:"value,omitempty"`
}

func (x *ApbGetCounterResp) Reset() {
	*x = ApbGetCounterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbGetCounterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbGetCounterResp) ProtoMessage() {}

func (x *ApbGetCounterResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbGetCounterResp.ProtoReflect.Descriptor instead.
func (*ApbGetCounterResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{2}
}

func (x *ApbGetCounterResp) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// Set updates request
type ApbSetUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Optype *ApbSetUpdate_SetOpType `protobuf:"varint,1,req,name=optype,enum=ApbSetUpdate_SetOpType" json:"optype,omitempty"`
	Adds   [][]byte                `protobuf:"bytes,2,rep,name=adds" json:"adds,omitempty"`
	Rems   [][]byte                `protobuf:"bytes,3,rep,name=rems" json:"rems,omitempty"`
}

func (x *ApbSetUpdate) Reset() {
	*x = ApbSetUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbSetUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbSetUpdate) ProtoMessage() {}

func (x *ApbSetUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbSetUpdate.ProtoReflect.Descriptor instead.
func (*ApbSetUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{3}
}

func (x *ApbSetUpdate) GetOptype() ApbSetUpdate_SetOpType {
	if x != nil && x.Optype != nil {
		return *x.Optype
	}
	return ApbSetUpdate_ADD
}

func (x *ApbSetUpdate) GetAdds() [][]byte {
	if x != nil {
		return x.Adds
	}
	return nil
}

func (x *ApbSetUpdate) GetRems() [][]byte {
	if x != nil {
		return x.Rems
	}
	return nil
}

// Get set request
type ApbGetSetResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value [][]byte `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (x *ApbGetSetResp) Reset() {
	*x = ApbGetSetResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbGetSetResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbGetSetResp) ProtoMessage() {}

func (x *ApbGetSetResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbGetSetResp.ProtoReflect.Descriptor instead.
func (*ApbGetSetResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{4}
}

func (x *ApbGetSetResp) GetValue() [][]byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Register update
type ApbRegUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
}

func (x *ApbRegUpdate) Reset() {
	*x = ApbRegUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbRegUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbRegUpdate) ProtoMessage() {}

func (x *ApbRegUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbRegUpdate.ProtoReflect.Descriptor instead.
func (*ApbRegUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{5}
}

func (x *ApbRegUpdate) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Response operation
type ApbGetRegResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
}

func (x *ApbGetRegResp) Reset() {
	*x = ApbGetRegResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbGetRegResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbGetRegResp) ProtoMessage() {}

func (x *ApbGetRegResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbGetRegResp.ProtoReflect.Descriptor instead.
func (*ApbGetRegResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{6}
}

func (x *ApbGetRegResp) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// response:
type ApbGetMVRegResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (x *ApbGetMVRegResp) Reset() {
	*x = ApbGetMVRegResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbGetMVRegResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbGetMVRegResp) ProtoMessage() {}

func (x *ApbGetMVRegResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbGetMVRegResp.ProtoReflect.Descriptor instead.
func (*ApbGetMVRegResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{7}
}

func (x *ApbGetMVRegResp) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type ApbMapKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  []byte    `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Type *CRDTType `protobuf:"varint,2,req,name=type,enum=CRDTType" json:"type,omitempty"`
}

func (x *ApbMapKey) Reset() {
	*x = ApbMapKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapKey) ProtoMessage() {}

func (x *ApbMapKey) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapKey.ProtoReflect.Descriptor instead.
func (*ApbMapKey) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{8}
}

func (x *ApbMapKey) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ApbMapKey) GetType() CRDTType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return CRDTType_COUNTER
}

type ApbMapUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates     []*ApbMapNestedUpdate `protobuf:"bytes,1,rep,name=updates" json:"updates,omitempty"`
	RemovedKeys []*ApbMapKey          `protobuf:"bytes,2,rep,name=removedKeys" json:"removedKeys,omitempty"`
}

func (x *ApbMapUpdate) Reset() {
	*x = ApbMapUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapUpdate) ProtoMessage() {}

func (x *ApbMapUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapUpdate.ProtoReflect.Descriptor instead.
func (*ApbMapUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{9}
}

func (x *ApbMapUpdate) GetUpdates() []*ApbMapNestedUpdate {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *ApbMapUpdate) GetRemovedKeys() []*ApbMapKey {
	if x != nil {
		return x.RemovedKeys
	}
	return nil
}

type ApbMapNestedUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    *ApbMapKey          `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Update *ApbUpdateOperation `protobuf:"bytes,2,req,name=update" json:"update,omitempty"`
}

func (x *ApbMapNestedUpdate) Reset() {
	*x = ApbMapNestedUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapNestedUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapNestedUpdate) ProtoMessage() {}

func (x *ApbMapNestedUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapNestedUpdate.ProtoReflect.Descriptor instead.
func (*ApbMapNestedUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{10}
}

func (x *ApbMapNestedUpdate) GetKey() *ApbMapKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ApbMapNestedUpdate) GetUpdate() *ApbUpdateOperation {
	if x != nil {
		return x.Update
	}
	return nil
}

type ApbGetMapResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ApbMapEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *ApbGetMapResp) Reset() {
	*x = ApbGetMapResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbGetMapResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbGetMapResp) ProtoMessage() {}

func (x *ApbGetMapResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbGetMapResp.ProtoReflect.Descriptor instead.
func (*ApbGetMapResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{11}
}

func (x *ApbGetMapResp) GetEntries() []*ApbMapEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ApbMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *ApbMapKey         `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value *ApbReadObjectResp `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *ApbMapEntry) Reset() {
	*x = ApbMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapEntry) ProtoMessage() {}

func (x *ApbMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapEntry.ProtoReflect.Descriptor instead.
func (*ApbMapEntry) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{12}
}

func (x *ApbMapEntry) GetKey() *ApbMapKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ApbMapEntry) GetValue() *ApbReadObjectResp {
	if x != nil {
		return x.Value
	}
	return nil
}

type ApbFlagUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *bool `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *ApbFlagUpdate) Reset() {
	*x = ApbFlagUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbFlagUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbFlagUpdate) ProtoMessage() {}

func (x *ApbFlagUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbFlagUpdate.ProtoReflect.Descriptor instead.
func (*ApbFlagUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{13}
}

func (x *ApbFlagUpdate) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

type ApbGetFlagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *bool `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *ApbGetFlagResp) Reset() {
	*x = ApbGetFlagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbGetFlagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbGetFlagResp) ProtoMessage() {}

func (x *ApbGetFlagResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbGetFlagResp.ProtoReflect.Descriptor instead.
func (*ApbGetFlagResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{14}
}

func (x *ApbGetFlagResp) GetValue() bool {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return false
}

// General reset operation
type ApbCrdtReset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApbCrdtReset) Reset() {
	*x = ApbCrdtReset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbCrdtReset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbCrdtReset) ProtoMessage() {}

func (x *ApbCrdtReset) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbCrdtReset.ProtoReflect.Descriptor instead.
func (*ApbCrdtReset) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{15}
}

// Response operation
type ApbOperationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Errorcode *uint32 `protobuf:"varint,2,opt,name=errorcode" json:"errorcode,omitempty"`
}

func (x *ApbOperationResp) Reset() {
	*x = ApbOperationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbOperationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbOperationResp) ProtoMessage() {}

func (x *ApbOperationResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbOperationResp.ProtoReflect.Descriptor instead.
func (*ApbOperationResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{16}
}

func (x *ApbOperationResp) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ApbOperationResp) GetErrorcode() uint32 {
	if x != nil && x.Errorcode != nil {
		return *x.Errorcode
	}
	return 0
}

// Topk-rmv updates request
type ApbTopkRmvUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adds []*ApbIntPair `protobuf:"bytes,1,rep,name=adds" json:"adds,omitempty"`
	Rems []int32       `protobuf:"zigzag32,2,rep,name=rems" json:"rems,omitempty"`
}

func (x *ApbTopkRmvUpdate) Reset() {
	*x = ApbTopkRmvUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbTopkRmvUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbTopkRmvUpdate) ProtoMessage() {}

func (x *ApbTopkRmvUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbTopkRmvUpdate.ProtoReflect.Descriptor instead.
func (*ApbTopkRmvUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{17}
}

func (x *ApbTopkRmvUpdate) GetAdds() []*ApbIntPair {
	if x != nil {
		return x.Adds
	}
	return nil
}

func (x *ApbTopkRmvUpdate) GetRems() []int32 {
	if x != nil {
		return x.Rems
	}
	return nil
}

//Topk updates request
type ApbTopkUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int64 `protobuf:"zigzag64,1,req,name=playerId" json:"playerId,omitempty"`
	Score    *int64 `protobuf:"zigzag64,2,req,name=score" json:"score,omitempty"`
}

func (x *ApbTopkUpdate) Reset() {
	*x = ApbTopkUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbTopkUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbTopkUpdate) ProtoMessage() {}

func (x *ApbTopkUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbTopkUpdate.ProtoReflect.Descriptor instead.
func (*ApbTopkUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{18}
}

func (x *ApbTopkUpdate) GetPlayerId() int64 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *ApbTopkUpdate) GetScore() int64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

//
//message ApbGetTopkResp {
//repeated sint32 values = 1;
//}
type ApbGetTopkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []*ApbIntPair `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
}

func (x *ApbGetTopkResp) Reset() {
	*x = ApbGetTopkResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbGetTopkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbGetTopkResp) ProtoMessage() {}

func (x *ApbGetTopkResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbGetTopkResp.ProtoReflect.Descriptor instead.
func (*ApbGetTopkResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{19}
}

func (x *ApbGetTopkResp) GetValues() []*ApbIntPair {
	if x != nil {
		return x.Values
	}
	return nil
}

//Holds a (playerId, score, data) triple
type ApbIntPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *int32 `protobuf:"zigzag32,1,req,name=playerId" json:"playerId,omitempty"`
	Score    *int32 `protobuf:"zigzag32,2,req,name=score" json:"score,omitempty"`
	Data     []byte `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (x *ApbIntPair) Reset() {
	*x = ApbIntPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbIntPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbIntPair) ProtoMessage() {}

func (x *ApbIntPair) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbIntPair.ProtoReflect.Descriptor instead.
func (*ApbIntPair) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{20}
}

func (x *ApbIntPair) GetPlayerId() int32 {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return 0
}

func (x *ApbIntPair) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *ApbIntPair) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApbLeaderboardUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adds []*ApbIntPair `protobuf:"bytes,1,rep,name=adds" json:"adds,omitempty"`
	Rems []int32       `protobuf:"varint,2,rep,name=rems" json:"rems,omitempty"`
}

func (x *ApbLeaderboardUpdate) Reset() {
	*x = ApbLeaderboardUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbLeaderboardUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbLeaderboardUpdate) ProtoMessage() {}

func (x *ApbLeaderboardUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbLeaderboardUpdate.ProtoReflect.Descriptor instead.
func (*ApbLeaderboardUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{21}
}

func (x *ApbLeaderboardUpdate) GetAdds() []*ApbIntPair {
	if x != nil {
		return x.Adds
	}
	return nil
}

func (x *ApbLeaderboardUpdate) GetRems() []int32 {
	if x != nil {
		return x.Rems
	}
	return nil
}

type ApbGetLeaderboardResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []int32 `protobuf:"varint,1,rep,name=values" json:"values,omitempty"`
}

func (x *ApbGetLeaderboardResp) Reset() {
	*x = ApbGetLeaderboardResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbGetLeaderboardResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbGetLeaderboardResp) ProtoMessage() {}

func (x *ApbGetLeaderboardResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbGetLeaderboardResp.ProtoReflect.Descriptor instead.
func (*ApbGetLeaderboardResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{22}
}

func (x *ApbGetLeaderboardResp) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type ApbAverageUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   *int64 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
	NValues *int64 `protobuf:"varint,2,opt,name=nValues" json:"nValues,omitempty"`
}

func (x *ApbAverageUpdate) Reset() {
	*x = ApbAverageUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbAverageUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbAverageUpdate) ProtoMessage() {}

func (x *ApbAverageUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbAverageUpdate.ProtoReflect.Descriptor instead.
func (*ApbAverageUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{23}
}

func (x *ApbAverageUpdate) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ApbAverageUpdate) GetNValues() int64 {
	if x != nil && x.NValues != nil {
		return *x.NValues
	}
	return 0
}

type ApbGetAverageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avg *float64 `protobuf:"fixed64,1,req,name=avg" json:"avg,omitempty"`
}

func (x *ApbGetAverageResp) Reset() {
	*x = ApbGetAverageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbGetAverageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbGetAverageResp) ProtoMessage() {}

func (x *ApbGetAverageResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbGetAverageResp.ProtoReflect.Descriptor instead.
func (*ApbGetAverageResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{24}
}

func (x *ApbGetAverageResp) GetAvg() float64 {
	if x != nil && x.Avg != nil {
		return *x.Avg
	}
	return 0
}

type ApbMaxMinUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *int64 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
	IsMax *bool  `protobuf:"varint,2,req,name=isMax" json:"isMax,omitempty"`
}

func (x *ApbMaxMinUpdate) Reset() {
	*x = ApbMaxMinUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMaxMinUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMaxMinUpdate) ProtoMessage() {}

func (x *ApbMaxMinUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMaxMinUpdate.ProtoReflect.Descriptor instead.
func (*ApbMaxMinUpdate) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{25}
}

func (x *ApbMaxMinUpdate) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ApbMaxMinUpdate) GetIsMax() bool {
	if x != nil && x.IsMax != nil {
		return *x.IsMax
	}
	return false
}

type ApbGetMaxMinResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *int64 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *ApbGetMaxMinResp) Reset() {
	*x = ApbGetMaxMinResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbGetMaxMinResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbGetMaxMinResp) ProtoMessage() {}

func (x *ApbGetMaxMinResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbGetMaxMinResp.ProtoReflect.Descriptor instead.
func (*ApbGetMaxMinResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{26}
}

func (x *ApbGetMaxMinResp) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// Properties parameters of a transaction
type ApbTxnProperties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadWrite *uint32 `protobuf:"varint,1,opt,name=read_write,json=readWrite" json:"read_write,omitempty"` //default = 0 = read_write, 1 = read_only, 2 = write_only
	RedBlue   *uint32 `protobuf:"varint,2,opt,name=red_blue,json=redBlue" json:"red_blue,omitempty"`       // default = 0 = blue, 1 = red
}

func (x *ApbTxnProperties) Reset() {
	*x = ApbTxnProperties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbTxnProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbTxnProperties) ProtoMessage() {}

func (x *ApbTxnProperties) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbTxnProperties.ProtoReflect.Descriptor instead.
func (*ApbTxnProperties) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{27}
}

func (x *ApbTxnProperties) GetReadWrite() uint32 {
	if x != nil && x.ReadWrite != nil {
		return *x.ReadWrite
	}
	return 0
}

func (x *ApbTxnProperties) GetRedBlue() uint32 {
	if x != nil && x.RedBlue != nil {
		return *x.RedBlue
	}
	return 0
}

// Object (Key) representation
type ApbBoundObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    []byte    `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Type   *CRDTType `protobuf:"varint,2,req,name=type,enum=CRDTType" json:"type,omitempty"`
	Bucket []byte    `protobuf:"bytes,3,req,name=bucket" json:"bucket,omitempty"`
}

func (x *ApbBoundObject) Reset() {
	*x = ApbBoundObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbBoundObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbBoundObject) ProtoMessage() {}

func (x *ApbBoundObject) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbBoundObject.ProtoReflect.Descriptor instead.
func (*ApbBoundObject) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{28}
}

func (x *ApbBoundObject) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ApbBoundObject) GetType() CRDTType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return CRDTType_COUNTER
}

func (x *ApbBoundObject) GetBucket() []byte {
	if x != nil {
		return x.Bucket
	}
	return nil
}

// Objects to be read
type ApbReadObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boundobjects          []*ApbBoundObject `protobuf:"bytes,1,rep,name=boundobjects" json:"boundobjects,omitempty"`
	TransactionDescriptor []byte            `protobuf:"bytes,2,req,name=transaction_descriptor,json=transactionDescriptor" json:"transaction_descriptor,omitempty"`
}

func (x *ApbReadObjects) Reset() {
	*x = ApbReadObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbReadObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbReadObjects) ProtoMessage() {}

func (x *ApbReadObjects) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbReadObjects.ProtoReflect.Descriptor instead.
func (*ApbReadObjects) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{29}
}

func (x *ApbReadObjects) GetBoundobjects() []*ApbBoundObject {
	if x != nil {
		return x.Boundobjects
	}
	return nil
}

func (x *ApbReadObjects) GetTransactionDescriptor() []byte {
	if x != nil {
		return x.TransactionDescriptor
	}
	return nil
}

// An Object to be updated with specified operation
type ApbUpdateOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boundobject *ApbBoundObject     `protobuf:"bytes,1,req,name=boundobject" json:"boundobject,omitempty"`
	Operation   *ApbUpdateOperation `protobuf:"bytes,2,req,name=operation" json:"operation,omitempty"`
}

func (x *ApbUpdateOp) Reset() {
	*x = ApbUpdateOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbUpdateOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbUpdateOp) ProtoMessage() {}

func (x *ApbUpdateOp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbUpdateOp.ProtoReflect.Descriptor instead.
func (*ApbUpdateOp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{30}
}

func (x *ApbUpdateOp) GetBoundobject() *ApbBoundObject {
	if x != nil {
		return x.Boundobject
	}
	return nil
}

func (x *ApbUpdateOp) GetOperation() *ApbUpdateOperation {
	if x != nil {
		return x.Operation
	}
	return nil
}

type ApbUpdateOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counterop     *ApbCounterUpdate     `protobuf:"bytes,1,opt,name=counterop" json:"counterop,omitempty"`
	Setop         *ApbSetUpdate         `protobuf:"bytes,2,opt,name=setop" json:"setop,omitempty"`
	Regop         *ApbRegUpdate         `protobuf:"bytes,3,opt,name=regop" json:"regop,omitempty"`
	Mapop         *ApbMapUpdate         `protobuf:"bytes,5,opt,name=mapop" json:"mapop,omitempty"`
	Resetop       *ApbCrdtReset         `protobuf:"bytes,6,opt,name=resetop" json:"resetop,omitempty"`
	Flagop        *ApbFlagUpdate        `protobuf:"bytes,7,opt,name=flagop" json:"flagop,omitempty"`
	Maxminop      *ApbMaxMinUpdate      `protobuf:"bytes,11,opt,name=maxminop" json:"maxminop,omitempty"`
	Topkrmvop     *ApbTopkRmvUpdate     `protobuf:"bytes,12,opt,name=topkrmvop" json:"topkrmvop,omitempty"`
	Topkop        *ApbTopkUpdate        `protobuf:"bytes,13,opt,name=topkop" json:"topkop,omitempty"`
	Leaderboardop *ApbLeaderboardUpdate `protobuf:"bytes,14,opt,name=leaderboardop" json:"leaderboardop,omitempty"`
	Avgop         *ApbAverageUpdate     `protobuf:"bytes,15,opt,name=avgop" json:"avgop,omitempty"`
}

func (x *ApbUpdateOperation) Reset() {
	*x = ApbUpdateOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbUpdateOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbUpdateOperation) ProtoMessage() {}

func (x *ApbUpdateOperation) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbUpdateOperation.ProtoReflect.Descriptor instead.
func (*ApbUpdateOperation) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{31}
}

func (x *ApbUpdateOperation) GetCounterop() *ApbCounterUpdate {
	if x != nil {
		return x.Counterop
	}
	return nil
}

func (x *ApbUpdateOperation) GetSetop() *ApbSetUpdate {
	if x != nil {
		return x.Setop
	}
	return nil
}

func (x *ApbUpdateOperation) GetRegop() *ApbRegUpdate {
	if x != nil {
		return x.Regop
	}
	return nil
}

func (x *ApbUpdateOperation) GetMapop() *ApbMapUpdate {
	if x != nil {
		return x.Mapop
	}
	return nil
}

func (x *ApbUpdateOperation) GetResetop() *ApbCrdtReset {
	if x != nil {
		return x.Resetop
	}
	return nil
}

func (x *ApbUpdateOperation) GetFlagop() *ApbFlagUpdate {
	if x != nil {
		return x.Flagop
	}
	return nil
}

func (x *ApbUpdateOperation) GetMaxminop() *ApbMaxMinUpdate {
	if x != nil {
		return x.Maxminop
	}
	return nil
}

func (x *ApbUpdateOperation) GetTopkrmvop() *ApbTopkRmvUpdate {
	if x != nil {
		return x.Topkrmvop
	}
	return nil
}

func (x *ApbUpdateOperation) GetTopkop() *ApbTopkUpdate {
	if x != nil {
		return x.Topkop
	}
	return nil
}

func (x *ApbUpdateOperation) GetLeaderboardop() *ApbLeaderboardUpdate {
	if x != nil {
		return x.Leaderboardop
	}
	return nil
}

func (x *ApbUpdateOperation) GetAvgop() *ApbAverageUpdate {
	if x != nil {
		return x.Avgop
	}
	return nil
}

// Objects to be updated
type ApbUpdateObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Updates               []*ApbUpdateOp `protobuf:"bytes,1,rep,name=updates" json:"updates,omitempty"`
	TransactionDescriptor []byte         `protobuf:"bytes,2,req,name=transaction_descriptor,json=transactionDescriptor" json:"transaction_descriptor,omitempty"`
}

func (x *ApbUpdateObjects) Reset() {
	*x = ApbUpdateObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbUpdateObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbUpdateObjects) ProtoMessage() {}

func (x *ApbUpdateObjects) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbUpdateObjects.ProtoReflect.Descriptor instead.
func (*ApbUpdateObjects) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{32}
}

func (x *ApbUpdateObjects) GetUpdates() []*ApbUpdateOp {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *ApbUpdateObjects) GetTransactionDescriptor() []byte {
	if x != nil {
		return x.TransactionDescriptor
	}
	return nil
}

// Start Transaction
type ApbStartTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  []byte            `protobuf:"bytes,1,opt,name=timestamp" json:"timestamp,omitempty"`
	Properties *ApbTxnProperties `protobuf:"bytes,2,opt,name=properties" json:"properties,omitempty"`
}

func (x *ApbStartTransaction) Reset() {
	*x = ApbStartTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbStartTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbStartTransaction) ProtoMessage() {}

func (x *ApbStartTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbStartTransaction.ProtoReflect.Descriptor instead.
func (*ApbStartTransaction) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{33}
}

func (x *ApbStartTransaction) GetTimestamp() []byte {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ApbStartTransaction) GetProperties() *ApbTxnProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Abort Transaction
type ApbAbortTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionDescriptor []byte `protobuf:"bytes,1,req,name=transaction_descriptor,json=transactionDescriptor" json:"transaction_descriptor,omitempty"`
}

func (x *ApbAbortTransaction) Reset() {
	*x = ApbAbortTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbAbortTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbAbortTransaction) ProtoMessage() {}

func (x *ApbAbortTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbAbortTransaction.ProtoReflect.Descriptor instead.
func (*ApbAbortTransaction) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{34}
}

func (x *ApbAbortTransaction) GetTransactionDescriptor() []byte {
	if x != nil {
		return x.TransactionDescriptor
	}
	return nil
}

// Commit Transaction
type ApbCommitTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionDescriptor []byte `protobuf:"bytes,1,req,name=transaction_descriptor,json=transactionDescriptor" json:"transaction_descriptor,omitempty"`
}

func (x *ApbCommitTransaction) Reset() {
	*x = ApbCommitTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbCommitTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbCommitTransaction) ProtoMessage() {}

func (x *ApbCommitTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbCommitTransaction.ProtoReflect.Descriptor instead.
func (*ApbCommitTransaction) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{35}
}

func (x *ApbCommitTransaction) GetTransactionDescriptor() []byte {
	if x != nil {
		return x.TransactionDescriptor
	}
	return nil
}

type ApbStaticUpdateObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *ApbStartTransaction `protobuf:"bytes,1,req,name=transaction" json:"transaction,omitempty"`
	Updates     []*ApbUpdateOp       `protobuf:"bytes,2,rep,name=updates" json:"updates,omitempty"`
}

func (x *ApbStaticUpdateObjects) Reset() {
	*x = ApbStaticUpdateObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbStaticUpdateObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbStaticUpdateObjects) ProtoMessage() {}

func (x *ApbStaticUpdateObjects) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbStaticUpdateObjects.ProtoReflect.Descriptor instead.
func (*ApbStaticUpdateObjects) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{36}
}

func (x *ApbStaticUpdateObjects) GetTransaction() *ApbStartTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *ApbStaticUpdateObjects) GetUpdates() []*ApbUpdateOp {
	if x != nil {
		return x.Updates
	}
	return nil
}

type ApbStaticReadObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction *ApbStartTransaction `protobuf:"bytes,1,req,name=transaction" json:"transaction,omitempty"`
	Objects     []*ApbBoundObject    `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
}

func (x *ApbStaticReadObjects) Reset() {
	*x = ApbStaticReadObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbStaticReadObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbStaticReadObjects) ProtoMessage() {}

func (x *ApbStaticReadObjects) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbStaticReadObjects.ProtoReflect.Descriptor instead.
func (*ApbStaticReadObjects) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{37}
}

func (x *ApbStaticReadObjects) GetTransaction() *ApbStartTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *ApbStaticReadObjects) GetObjects() []*ApbBoundObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

//Start transaction response
type ApbStartTransactionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success               *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	TransactionDescriptor []byte  `protobuf:"bytes,2,opt,name=transaction_descriptor,json=transactionDescriptor" json:"transaction_descriptor,omitempty"`
	Errorcode             *uint32 `protobuf:"varint,3,opt,name=errorcode" json:"errorcode,omitempty"`
}

func (x *ApbStartTransactionResp) Reset() {
	*x = ApbStartTransactionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbStartTransactionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbStartTransactionResp) ProtoMessage() {}

func (x *ApbStartTransactionResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbStartTransactionResp.ProtoReflect.Descriptor instead.
func (*ApbStartTransactionResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{38}
}

func (x *ApbStartTransactionResp) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ApbStartTransactionResp) GetTransactionDescriptor() []byte {
	if x != nil {
		return x.TransactionDescriptor
	}
	return nil
}

func (x *ApbStartTransactionResp) GetErrorcode() uint32 {
	if x != nil && x.Errorcode != nil {
		return *x.Errorcode
	}
	return 0
}

//Read Objects Response
type ApbReadObjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// one of the following:
	Counter  *ApbGetCounterResp     `protobuf:"bytes,1,opt,name=counter" json:"counter,omitempty"`
	Set      *ApbGetSetResp         `protobuf:"bytes,2,opt,name=set" json:"set,omitempty"`
	Reg      *ApbGetRegResp         `protobuf:"bytes,3,opt,name=reg" json:"reg,omitempty"`
	Mvreg    *ApbGetMVRegResp       `protobuf:"bytes,4,opt,name=mvreg" json:"mvreg,omitempty"`
	Map      *ApbGetMapResp         `protobuf:"bytes,6,opt,name=map" json:"map,omitempty"`
	Flag     *ApbGetFlagResp        `protobuf:"bytes,7,opt,name=flag" json:"flag,omitempty"`
	Maxmin   *ApbGetMaxMinResp      `protobuf:"bytes,12,opt,name=maxmin" json:"maxmin,omitempty"`
	Topk     *ApbGetTopkResp        `protobuf:"bytes,13,opt,name=topk" json:"topk,omitempty"`
	Leadb    *ApbGetLeaderboardResp `protobuf:"bytes,14,opt,name=leadb" json:"leadb,omitempty"`
	Avg      *ApbGetAverageResp     `protobuf:"bytes,15,opt,name=avg" json:"avg,omitempty"`
	Partread *ApbPartialReadResp    `protobuf:"bytes,8,opt,name=partread" json:"partread,omitempty"` //Generic for non-full state reads from any CRDT
}

func (x *ApbReadObjectResp) Reset() {
	*x = ApbReadObjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbReadObjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbReadObjectResp) ProtoMessage() {}

func (x *ApbReadObjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbReadObjectResp.ProtoReflect.Descriptor instead.
func (*ApbReadObjectResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{39}
}

func (x *ApbReadObjectResp) GetCounter() *ApbGetCounterResp {
	if x != nil {
		return x.Counter
	}
	return nil
}

func (x *ApbReadObjectResp) GetSet() *ApbGetSetResp {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *ApbReadObjectResp) GetReg() *ApbGetRegResp {
	if x != nil {
		return x.Reg
	}
	return nil
}

func (x *ApbReadObjectResp) GetMvreg() *ApbGetMVRegResp {
	if x != nil {
		return x.Mvreg
	}
	return nil
}

func (x *ApbReadObjectResp) GetMap() *ApbGetMapResp {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *ApbReadObjectResp) GetFlag() *ApbGetFlagResp {
	if x != nil {
		return x.Flag
	}
	return nil
}

func (x *ApbReadObjectResp) GetMaxmin() *ApbGetMaxMinResp {
	if x != nil {
		return x.Maxmin
	}
	return nil
}

func (x *ApbReadObjectResp) GetTopk() *ApbGetTopkResp {
	if x != nil {
		return x.Topk
	}
	return nil
}

func (x *ApbReadObjectResp) GetLeadb() *ApbGetLeaderboardResp {
	if x != nil {
		return x.Leadb
	}
	return nil
}

func (x *ApbReadObjectResp) GetAvg() *ApbGetAverageResp {
	if x != nil {
		return x.Avg
	}
	return nil
}

func (x *ApbReadObjectResp) GetPartread() *ApbPartialReadResp {
	if x != nil {
		return x.Partread
	}
	return nil
}

type ApbReadObjectsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success   *bool                `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	Objects   []*ApbReadObjectResp `protobuf:"bytes,2,rep,name=objects" json:"objects,omitempty"`
	Errorcode *uint32              `protobuf:"varint,3,opt,name=errorcode" json:"errorcode,omitempty"`
}

func (x *ApbReadObjectsResp) Reset() {
	*x = ApbReadObjectsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbReadObjectsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbReadObjectsResp) ProtoMessage() {}

func (x *ApbReadObjectsResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbReadObjectsResp.ProtoReflect.Descriptor instead.
func (*ApbReadObjectsResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{40}
}

func (x *ApbReadObjectsResp) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ApbReadObjectsResp) GetObjects() []*ApbReadObjectResp {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *ApbReadObjectsResp) GetErrorcode() uint32 {
	if x != nil && x.Errorcode != nil {
		return *x.Errorcode
	}
	return 0
}

// Commit Response
type ApbCommitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success    *bool   `protobuf:"varint,1,req,name=success" json:"success,omitempty"`
	CommitTime []byte  `protobuf:"bytes,2,opt,name=commit_time,json=commitTime" json:"commit_time,omitempty"`
	Errorcode  *uint32 `protobuf:"varint,3,opt,name=errorcode" json:"errorcode,omitempty"`
}

func (x *ApbCommitResp) Reset() {
	*x = ApbCommitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbCommitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbCommitResp) ProtoMessage() {}

func (x *ApbCommitResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbCommitResp.ProtoReflect.Descriptor instead.
func (*ApbCommitResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{41}
}

func (x *ApbCommitResp) GetSuccess() bool {
	if x != nil && x.Success != nil {
		return *x.Success
	}
	return false
}

func (x *ApbCommitResp) GetCommitTime() []byte {
	if x != nil {
		return x.CommitTime
	}
	return nil
}

func (x *ApbCommitResp) GetErrorcode() uint32 {
	if x != nil && x.Errorcode != nil {
		return *x.Errorcode
	}
	return 0
}

type ApbStaticReadObjectsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects    *ApbReadObjectsResp `protobuf:"bytes,1,req,name=objects" json:"objects,omitempty"`
	Committime *ApbCommitResp      `protobuf:"bytes,2,req,name=committime" json:"committime,omitempty"`
}

func (x *ApbStaticReadObjectsResp) Reset() {
	*x = ApbStaticReadObjectsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbStaticReadObjectsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbStaticReadObjectsResp) ProtoMessage() {}

func (x *ApbStaticReadObjectsResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbStaticReadObjectsResp.ProtoReflect.Descriptor instead.
func (*ApbStaticReadObjectsResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{42}
}

func (x *ApbStaticReadObjectsResp) GetObjects() *ApbReadObjectsResp {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *ApbStaticReadObjectsResp) GetCommittime() *ApbCommitResp {
	if x != nil {
		return x.Committime
	}
	return nil
}

//Replica connection
type ApbConnectReplica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *int64 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
}

func (x *ApbConnectReplica) Reset() {
	*x = ApbConnectReplica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbConnectReplica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbConnectReplica) ProtoMessage() {}

func (x *ApbConnectReplica) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbConnectReplica.ProtoReflect.Descriptor instead.
func (*ApbConnectReplica) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{43}
}

func (x *ApbConnectReplica) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type ApbConnectReplicaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KnownIDs []int64 `protobuf:"varint,1,rep,name=knownIDs" json:"knownIDs,omitempty"`
}

func (x *ApbConnectReplicaResp) Reset() {
	*x = ApbConnectReplicaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbConnectReplicaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbConnectReplicaResp) ProtoMessage() {}

func (x *ApbConnectReplicaResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbConnectReplicaResp.ProtoReflect.Descriptor instead.
func (*ApbConnectReplicaResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{44}
}

func (x *ApbConnectReplicaResp) GetKnownIDs() []int64 {
	if x != nil {
		return x.KnownIDs
	}
	return nil
}

//Others
type ApbResetServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApbResetServer) Reset() {
	*x = ApbResetServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbResetServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbResetServer) ProtoMessage() {}

func (x *ApbResetServer) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbResetServer.ProtoReflect.Descriptor instead.
func (*ApbResetServer) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{45}
}

type ApbResetServerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApbResetServerResp) Reset() {
	*x = ApbResetServerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbResetServerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbResetServerResp) ProtoMessage() {}

func (x *ApbResetServerResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbResetServerResp.ProtoReflect.Descriptor instead.
func (*ApbResetServerResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{46}
}

//Allows both "full state reads" (ApbReadObjects) and "partial reads"
type ApbRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullreads             []*ApbBoundObject `protobuf:"bytes,1,rep,name=fullreads" json:"fullreads,omitempty"`
	Partialreads          []*ApbPartialRead `protobuf:"bytes,2,rep,name=partialreads" json:"partialreads,omitempty"`
	TransactionDescriptor []byte            `protobuf:"bytes,3,req,name=transaction_descriptor,json=transactionDescriptor" json:"transaction_descriptor,omitempty"`
}

func (x *ApbRead) Reset() {
	*x = ApbRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbRead) ProtoMessage() {}

func (x *ApbRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbRead.ProtoReflect.Descriptor instead.
func (*ApbRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{47}
}

func (x *ApbRead) GetFullreads() []*ApbBoundObject {
	if x != nil {
		return x.Fullreads
	}
	return nil
}

func (x *ApbRead) GetPartialreads() []*ApbPartialRead {
	if x != nil {
		return x.Partialreads
	}
	return nil
}

func (x *ApbRead) GetTransactionDescriptor() []byte {
	if x != nil {
		return x.TransactionDescriptor
	}
	return nil
}

type ApbStaticRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fullreads    []*ApbBoundObject    `protobuf:"bytes,1,rep,name=fullreads" json:"fullreads,omitempty"`
	Partialreads []*ApbPartialRead    `protobuf:"bytes,2,rep,name=partialreads" json:"partialreads,omitempty"`
	Transaction  *ApbStartTransaction `protobuf:"bytes,3,req,name=transaction" json:"transaction,omitempty"`
}

func (x *ApbStaticRead) Reset() {
	*x = ApbStaticRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbStaticRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbStaticRead) ProtoMessage() {}

func (x *ApbStaticRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbStaticRead.ProtoReflect.Descriptor instead.
func (*ApbStaticRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{48}
}

func (x *ApbStaticRead) GetFullreads() []*ApbBoundObject {
	if x != nil {
		return x.Fullreads
	}
	return nil
}

func (x *ApbStaticRead) GetPartialreads() []*ApbPartialRead {
	if x != nil {
		return x.Partialreads
	}
	return nil
}

func (x *ApbStaticRead) GetTransaction() *ApbStartTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

type ApbPartialRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object   *ApbBoundObject     `protobuf:"bytes,1,req,name=object" json:"object,omitempty"`
	Readtype *READType           `protobuf:"varint,2,req,name=readtype,enum=READType" json:"readtype,omitempty"`
	Args     *ApbPartialReadArgs `protobuf:"bytes,3,req,name=args" json:"args,omitempty"`
}

func (x *ApbPartialRead) Reset() {
	*x = ApbPartialRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbPartialRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbPartialRead) ProtoMessage() {}

func (x *ApbPartialRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbPartialRead.ProtoReflect.Descriptor instead.
func (*ApbPartialRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{49}
}

func (x *ApbPartialRead) GetObject() *ApbBoundObject {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *ApbPartialRead) GetReadtype() READType {
	if x != nil && x.Readtype != nil {
		return *x.Readtype
	}
	return READType_FULL
}

func (x *ApbPartialRead) GetArgs() *ApbPartialReadArgs {
	if x != nil {
		return x.Args
	}
	return nil
}

type ApbPartialReadArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Set  *ApbSetPartialRead  `protobuf:"bytes,1,opt,name=set" json:"set,omitempty"`
	Map  *ApbMapPartialRead  `protobuf:"bytes,2,opt,name=map" json:"map,omitempty"`
	Topk *ApbTopkPartialRead `protobuf:"bytes,3,opt,name=topk" json:"topk,omitempty"`
	Avg  *ApbAvgPartialRead  `protobuf:"bytes,4,opt,name=avg" json:"avg,omitempty"`
}

func (x *ApbPartialReadArgs) Reset() {
	*x = ApbPartialReadArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbPartialReadArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbPartialReadArgs) ProtoMessage() {}

func (x *ApbPartialReadArgs) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbPartialReadArgs.ProtoReflect.Descriptor instead.
func (*ApbPartialReadArgs) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{50}
}

func (x *ApbPartialReadArgs) GetSet() *ApbSetPartialRead {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *ApbPartialReadArgs) GetMap() *ApbMapPartialRead {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *ApbPartialReadArgs) GetTopk() *ApbTopkPartialRead {
	if x != nil {
		return x.Topk
	}
	return nil
}

func (x *ApbPartialReadArgs) GetAvg() *ApbAvgPartialRead {
	if x != nil {
		return x.Avg
	}
	return nil
}

type ApbSetPartialRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lookup *ApbSetLookupRead `protobuf:"bytes,1,opt,name=lookup" json:"lookup,omitempty"`
}

func (x *ApbSetPartialRead) Reset() {
	*x = ApbSetPartialRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbSetPartialRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbSetPartialRead) ProtoMessage() {}

func (x *ApbSetPartialRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbSetPartialRead.ProtoReflect.Descriptor instead.
func (*ApbSetPartialRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{51}
}

func (x *ApbSetPartialRead) GetLookup() *ApbSetLookupRead {
	if x != nil {
		return x.Lookup
	}
	return nil
}

type ApbMapPartialRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Getvalue  *ApbMapGetValueRead  `protobuf:"bytes,1,opt,name=getvalue" json:"getvalue,omitempty"`
	Haskey    *ApbMapHasKeyRead    `protobuf:"bytes,2,opt,name=haskey" json:"haskey,omitempty"`
	Getkeys   *ApbMapGetKeysRead   `protobuf:"bytes,3,opt,name=getkeys" json:"getkeys,omitempty"`
	Getvalues *ApbMapGetValuesRead `protobuf:"bytes,4,opt,name=getvalues" json:"getvalues,omitempty"`
}

func (x *ApbMapPartialRead) Reset() {
	*x = ApbMapPartialRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapPartialRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapPartialRead) ProtoMessage() {}

func (x *ApbMapPartialRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapPartialRead.ProtoReflect.Descriptor instead.
func (*ApbMapPartialRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{52}
}

func (x *ApbMapPartialRead) GetGetvalue() *ApbMapGetValueRead {
	if x != nil {
		return x.Getvalue
	}
	return nil
}

func (x *ApbMapPartialRead) GetHaskey() *ApbMapHasKeyRead {
	if x != nil {
		return x.Haskey
	}
	return nil
}

func (x *ApbMapPartialRead) GetGetkeys() *ApbMapGetKeysRead {
	if x != nil {
		return x.Getkeys
	}
	return nil
}

func (x *ApbMapPartialRead) GetGetvalues() *ApbMapGetValuesRead {
	if x != nil {
		return x.Getvalues
	}
	return nil
}

type ApbTopkPartialRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Getn          *ApbTopkGetNRead       `protobuf:"bytes,1,opt,name=getn" json:"getn,omitempty"`
	Getabovevalue *ApbTopkAboveValueRead `protobuf:"bytes,2,opt,name=getabovevalue" json:"getabovevalue,omitempty"`
}

func (x *ApbTopkPartialRead) Reset() {
	*x = ApbTopkPartialRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbTopkPartialRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbTopkPartialRead) ProtoMessage() {}

func (x *ApbTopkPartialRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbTopkPartialRead.ProtoReflect.Descriptor instead.
func (*ApbTopkPartialRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{53}
}

func (x *ApbTopkPartialRead) GetGetn() *ApbTopkGetNRead {
	if x != nil {
		return x.Getn
	}
	return nil
}

func (x *ApbTopkPartialRead) GetGetabovevalue() *ApbTopkAboveValueRead {
	if x != nil {
		return x.Getabovevalue
	}
	return nil
}

type ApbAvgPartialRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Getfull *ApbAvgFullRead `protobuf:"bytes,1,opt,name=getfull" json:"getfull,omitempty"`
}

func (x *ApbAvgPartialRead) Reset() {
	*x = ApbAvgPartialRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbAvgPartialRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbAvgPartialRead) ProtoMessage() {}

func (x *ApbAvgPartialRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbAvgPartialRead.ProtoReflect.Descriptor instead.
func (*ApbAvgPartialRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{54}
}

func (x *ApbAvgPartialRead) GetGetfull() *ApbAvgFullRead {
	if x != nil {
		return x.Getfull
	}
	return nil
}

//SET
type ApbSetLookupRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Element []byte `protobuf:"bytes,1,req,name=element" json:"element,omitempty"`
}

func (x *ApbSetLookupRead) Reset() {
	*x = ApbSetLookupRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbSetLookupRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbSetLookupRead) ProtoMessage() {}

func (x *ApbSetLookupRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbSetLookupRead.ProtoReflect.Descriptor instead.
func (*ApbSetLookupRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{55}
}

func (x *ApbSetLookupRead) GetElement() []byte {
	if x != nil {
		return x.Element
	}
	return nil
}

//MAP
type ApbMapGetValueRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  []byte                `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Args *ApbMapEmbPartialArgs `protobuf:"bytes,2,opt,name=args" json:"args,omitempty"`
}

func (x *ApbMapGetValueRead) Reset() {
	*x = ApbMapGetValueRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapGetValueRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapGetValueRead) ProtoMessage() {}

func (x *ApbMapGetValueRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapGetValueRead.ProtoReflect.Descriptor instead.
func (*ApbMapGetValueRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{56}
}

func (x *ApbMapGetValueRead) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ApbMapGetValueRead) GetArgs() *ApbMapEmbPartialArgs {
	if x != nil {
		return x.Args
	}
	return nil
}

type ApbMapHasKeyRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
}

func (x *ApbMapHasKeyRead) Reset() {
	*x = ApbMapHasKeyRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapHasKeyRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapHasKeyRead) ProtoMessage() {}

func (x *ApbMapHasKeyRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapHasKeyRead.ProtoReflect.Descriptor instead.
func (*ApbMapHasKeyRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{57}
}

func (x *ApbMapHasKeyRead) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type ApbMapGetKeysRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApbMapGetKeysRead) Reset() {
	*x = ApbMapGetKeysRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapGetKeysRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapGetKeysRead) ProtoMessage() {}

func (x *ApbMapGetKeysRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapGetKeysRead.ProtoReflect.Descriptor instead.
func (*ApbMapGetKeysRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{58}
}

//Note: The 2nd argument is optional.
//However, if it's present, then its len must be equal to keys'
type ApbMapGetValuesRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys [][]byte                `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
	Args []*ApbMapEmbPartialArgs `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
}

func (x *ApbMapGetValuesRead) Reset() {
	*x = ApbMapGetValuesRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapGetValuesRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapGetValuesRead) ProtoMessage() {}

func (x *ApbMapGetValuesRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapGetValuesRead.ProtoReflect.Descriptor instead.
func (*ApbMapGetValuesRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{59}
}

func (x *ApbMapGetValuesRead) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ApbMapGetValuesRead) GetArgs() []*ApbMapEmbPartialArgs {
	if x != nil {
		return x.Args
	}
	return nil
}

//Helper for identifying a partial read of an embedded CRDT
type ApbMapEmbPartialArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *CRDTType           `protobuf:"varint,1,opt,name=type,enum=CRDTType" json:"type,omitempty"`
	Readtype *READType           `protobuf:"varint,2,req,name=readtype,enum=READType" json:"readtype,omitempty"`
	Args     *ApbPartialReadArgs `protobuf:"bytes,3,opt,name=args" json:"args,omitempty"` //If not present, then it's a full read
}

func (x *ApbMapEmbPartialArgs) Reset() {
	*x = ApbMapEmbPartialArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapEmbPartialArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapEmbPartialArgs) ProtoMessage() {}

func (x *ApbMapEmbPartialArgs) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapEmbPartialArgs.ProtoReflect.Descriptor instead.
func (*ApbMapEmbPartialArgs) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{60}
}

func (x *ApbMapEmbPartialArgs) GetType() CRDTType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return CRDTType_COUNTER
}

func (x *ApbMapEmbPartialArgs) GetReadtype() READType {
	if x != nil && x.Readtype != nil {
		return *x.Readtype
	}
	return READType_FULL
}

func (x *ApbMapEmbPartialArgs) GetArgs() *ApbPartialReadArgs {
	if x != nil {
		return x.Args
	}
	return nil
}

//TOPK
type ApbTopkGetNRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount *int32 `protobuf:"varint,1,req,name=amount" json:"amount,omitempty"`
}

func (x *ApbTopkGetNRead) Reset() {
	*x = ApbTopkGetNRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbTopkGetNRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbTopkGetNRead) ProtoMessage() {}

func (x *ApbTopkGetNRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbTopkGetNRead.ProtoReflect.Descriptor instead.
func (*ApbTopkGetNRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{61}
}

func (x *ApbTopkGetNRead) GetAmount() int32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

type ApbTopkAboveValueRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinValue *int32 `protobuf:"varint,1,req,name=minValue" json:"minValue,omitempty"`
}

func (x *ApbTopkAboveValueRead) Reset() {
	*x = ApbTopkAboveValueRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbTopkAboveValueRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbTopkAboveValueRead) ProtoMessage() {}

func (x *ApbTopkAboveValueRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbTopkAboveValueRead.ProtoReflect.Descriptor instead.
func (*ApbTopkAboveValueRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{62}
}

func (x *ApbTopkAboveValueRead) GetMinValue() int32 {
	if x != nil && x.MinValue != nil {
		return *x.MinValue
	}
	return 0
}

//AVG
type ApbAvgFullRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApbAvgFullRead) Reset() {
	*x = ApbAvgFullRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbAvgFullRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbAvgFullRead) ProtoMessage() {}

func (x *ApbAvgFullRead) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbAvgFullRead.ProtoReflect.Descriptor instead.
func (*ApbAvgFullRead) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{63}
}

//RESP
type ApbPartialReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Set  *ApbSetPartialReadResp  `protobuf:"bytes,1,opt,name=set" json:"set,omitempty"`
	Map  *ApbMapPartialReadResp  `protobuf:"bytes,2,opt,name=map" json:"map,omitempty"`
	Topk *ApbTopkPartialReadResp `protobuf:"bytes,3,opt,name=topk" json:"topk,omitempty"`
	Avg  *ApbAvgPartialReadResp  `protobuf:"bytes,4,opt,name=avg" json:"avg,omitempty"`
}

func (x *ApbPartialReadResp) Reset() {
	*x = ApbPartialReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbPartialReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbPartialReadResp) ProtoMessage() {}

func (x *ApbPartialReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbPartialReadResp.ProtoReflect.Descriptor instead.
func (*ApbPartialReadResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{64}
}

func (x *ApbPartialReadResp) GetSet() *ApbSetPartialReadResp {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *ApbPartialReadResp) GetMap() *ApbMapPartialReadResp {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *ApbPartialReadResp) GetTopk() *ApbTopkPartialReadResp {
	if x != nil {
		return x.Topk
	}
	return nil
}

func (x *ApbPartialReadResp) GetAvg() *ApbAvgPartialReadResp {
	if x != nil {
		return x.Avg
	}
	return nil
}

type ApbSetPartialReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lookup *ApbSetLookupReadResp `protobuf:"bytes,1,opt,name=lookup" json:"lookup,omitempty"`
}

func (x *ApbSetPartialReadResp) Reset() {
	*x = ApbSetPartialReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbSetPartialReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbSetPartialReadResp) ProtoMessage() {}

func (x *ApbSetPartialReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbSetPartialReadResp.ProtoReflect.Descriptor instead.
func (*ApbSetPartialReadResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{65}
}

func (x *ApbSetPartialReadResp) GetLookup() *ApbSetLookupReadResp {
	if x != nil {
		return x.Lookup
	}
	return nil
}

type ApbMapPartialReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Getvalue  *ApbMapGetValueResp    `protobuf:"bytes,1,opt,name=getvalue" json:"getvalue,omitempty"` //Used for both mapGetValue and mapGetPartial
	Haskey    *ApbMapHasKeyReadResp  `protobuf:"bytes,2,opt,name=haskey" json:"haskey,omitempty"`
	Getkeys   *ApbMapGetKeysReadResp `protobuf:"bytes,3,opt,name=getkeys" json:"getkeys,omitempty"`
	Getvalues *ApbMapGetValuesResp   `protobuf:"bytes,4,opt,name=getvalues" json:"getvalues,omitempty"`
}

func (x *ApbMapPartialReadResp) Reset() {
	*x = ApbMapPartialReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapPartialReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapPartialReadResp) ProtoMessage() {}

func (x *ApbMapPartialReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapPartialReadResp.ProtoReflect.Descriptor instead.
func (*ApbMapPartialReadResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{66}
}

func (x *ApbMapPartialReadResp) GetGetvalue() *ApbMapGetValueResp {
	if x != nil {
		return x.Getvalue
	}
	return nil
}

func (x *ApbMapPartialReadResp) GetHaskey() *ApbMapHasKeyReadResp {
	if x != nil {
		return x.Haskey
	}
	return nil
}

func (x *ApbMapPartialReadResp) GetGetkeys() *ApbMapGetKeysReadResp {
	if x != nil {
		return x.Getkeys
	}
	return nil
}

func (x *ApbMapPartialReadResp) GetGetvalues() *ApbMapGetValuesResp {
	if x != nil {
		return x.Getvalues
	}
	return nil
}

type ApbAvgPartialReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Getfull *ApbAvgGetFullReadResp `protobuf:"bytes,1,opt,name=getfull" json:"getfull,omitempty"`
}

func (x *ApbAvgPartialReadResp) Reset() {
	*x = ApbAvgPartialReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbAvgPartialReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbAvgPartialReadResp) ProtoMessage() {}

func (x *ApbAvgPartialReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbAvgPartialReadResp.ProtoReflect.Descriptor instead.
func (*ApbAvgPartialReadResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{67}
}

func (x *ApbAvgPartialReadResp) GetGetfull() *ApbAvgGetFullReadResp {
	if x != nil {
		return x.Getfull
	}
	return nil
}

type ApbTopkPartialReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pairs *ApbGetTopkResp `protobuf:"bytes,1,req,name=pairs" json:"pairs,omitempty"`
}

func (x *ApbTopkPartialReadResp) Reset() {
	*x = ApbTopkPartialReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbTopkPartialReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbTopkPartialReadResp) ProtoMessage() {}

func (x *ApbTopkPartialReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbTopkPartialReadResp.ProtoReflect.Descriptor instead.
func (*ApbTopkPartialReadResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{68}
}

func (x *ApbTopkPartialReadResp) GetPairs() *ApbGetTopkResp {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type ApbSetLookupReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Has *bool `protobuf:"varint,1,req,name=has" json:"has,omitempty"`
}

func (x *ApbSetLookupReadResp) Reset() {
	*x = ApbSetLookupReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbSetLookupReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbSetLookupReadResp) ProtoMessage() {}

func (x *ApbSetLookupReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbSetLookupReadResp.ProtoReflect.Descriptor instead.
func (*ApbSetLookupReadResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{69}
}

func (x *ApbSetLookupReadResp) GetHas() bool {
	if x != nil && x.Has != nil {
		return *x.Has
	}
	return false
}

type ApbMapGetValueResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value    *ApbReadObjectResp `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
	Crdttype *CRDTType          `protobuf:"varint,2,opt,name=crdttype,enum=CRDTType" json:"crdttype,omitempty"`
	Parttype *READType          `protobuf:"varint,3,opt,name=parttype,enum=READType" json:"parttype,omitempty"`
}

func (x *ApbMapGetValueResp) Reset() {
	*x = ApbMapGetValueResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapGetValueResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapGetValueResp) ProtoMessage() {}

func (x *ApbMapGetValueResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapGetValueResp.ProtoReflect.Descriptor instead.
func (*ApbMapGetValueResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{70}
}

func (x *ApbMapGetValueResp) GetValue() *ApbReadObjectResp {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ApbMapGetValueResp) GetCrdttype() CRDTType {
	if x != nil && x.Crdttype != nil {
		return *x.Crdttype
	}
	return CRDTType_COUNTER
}

func (x *ApbMapGetValueResp) GetParttype() READType {
	if x != nil && x.Parttype != nil {
		return *x.Parttype
	}
	return READType_FULL
}

type ApbMapHasKeyReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Has *bool `protobuf:"varint,1,req,name=has" json:"has,omitempty"`
}

func (x *ApbMapHasKeyReadResp) Reset() {
	*x = ApbMapHasKeyReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapHasKeyReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapHasKeyReadResp) ProtoMessage() {}

func (x *ApbMapHasKeyReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapHasKeyReadResp.ProtoReflect.Descriptor instead.
func (*ApbMapHasKeyReadResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{71}
}

func (x *ApbMapHasKeyReadResp) GetHas() bool {
	if x != nil && x.Has != nil {
		return *x.Has
	}
	return false
}

type ApbMapGetKeysReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (x *ApbMapGetKeysReadResp) Reset() {
	*x = ApbMapGetKeysReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapGetKeysReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapGetKeysReadResp) ProtoMessage() {}

func (x *ApbMapGetKeysReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapGetKeysReadResp.ProtoReflect.Descriptor instead.
func (*ApbMapGetKeysReadResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{72}
}

func (x *ApbMapGetKeysReadResp) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type ApbMapGetValuesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys   [][]byte              `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
	Values []*ApbMapGetValueResp `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (x *ApbMapGetValuesResp) Reset() {
	*x = ApbMapGetValuesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbMapGetValuesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbMapGetValuesResp) ProtoMessage() {}

func (x *ApbMapGetValuesResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbMapGetValuesResp.ProtoReflect.Descriptor instead.
func (*ApbMapGetValuesResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{73}
}

func (x *ApbMapGetValuesResp) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ApbMapGetValuesResp) GetValues() []*ApbMapGetValueResp {
	if x != nil {
		return x.Values
	}
	return nil
}

type ApbAvgGetFullReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sum   *int64 `protobuf:"varint,1,req,name=sum" json:"sum,omitempty"`
	NAdds *int64 `protobuf:"varint,2,req,name=nAdds" json:"nAdds,omitempty"`
}

func (x *ApbAvgGetFullReadResp) Reset() {
	*x = ApbAvgGetFullReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_antidote_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbAvgGetFullReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbAvgGetFullReadResp) ProtoMessage() {}

func (x *ApbAvgGetFullReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_antidote_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbAvgGetFullReadResp.ProtoReflect.Descriptor instead.
func (*ApbAvgGetFullReadResp) Descriptor() ([]byte, []int) {
	return file_antidote_proto_rawDescGZIP(), []int{74}
}

func (x *ApbAvgGetFullReadResp) GetSum() int64 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

func (x *ApbAvgGetFullReadResp) GetNAdds() int64 {
	if x != nil && x.NAdds != nil {
		return *x.NAdds
	}
	return 0
}

var File_antidote_proto protoreflect.FileDescriptor

var file_antidote_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x40, 0x0a, 0x0c, 0x41, 0x70, 0x62, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x65, 0x72, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x24, 0x0a, 0x10, 0x41, 0x70, 0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x03, 0x69, 0x6e, 0x63, 0x22, 0x29, 0x0a, 0x11, 0x41, 0x70, 0x62, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x11, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0c, 0x41, 0x70, 0x62, 0x53, 0x65, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x41, 0x70, 0x62, 0x53, 0x65, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x6f,
	0x70, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x04, 0x61, 0x64, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x72, 0x65, 0x6d, 0x73, 0x22, 0x20, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x44,
	0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x02, 0x22,
	0x25, 0x0a, 0x0d, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x24, 0x0a, 0x0c, 0x41, 0x70, 0x62, 0x52, 0x65, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0d,
	0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x4d, 0x56, 0x52,
	0x65, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3d,
	0x0a, 0x09, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x43, 0x52,
	0x44, 0x54, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6b, 0x0a,
	0x0c, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a,
	0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0b,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x0b, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x5f, 0x0a, 0x12, 0x41, 0x70,
	0x62, 0x4d, 0x61, 0x70, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b,
	0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x41, 0x70, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x41,
	0x70, 0x62, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x0b, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x41, 0x70, 0x62, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x0d, 0x41,
	0x70, 0x62, 0x46, 0x6c, 0x61, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x41, 0x70,
	0x62, 0x43, 0x72, 0x64, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x22, 0x4a, 0x0a, 0x10, 0x41, 0x70,
	0x62, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x47, 0x0a, 0x10, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70,
	0x6b, 0x52, 0x6d, 0x76, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x61, 0x64,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x70, 0x62, 0x49, 0x6e,
	0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x61, 0x64, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x11, 0x52, 0x04, 0x72, 0x65, 0x6d, 0x73, 0x22,
	0x41, 0x0a, 0x0d, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x12, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x12, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x35, 0x0a, 0x0e, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x70, 0x62, 0x49, 0x6e, 0x74, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x0a, 0x41, 0x70, 0x62,
	0x49, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x11, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x11, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a,
	0x14, 0x41, 0x70, 0x62, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x41, 0x70, 0x62, 0x49, 0x6e, 0x74, 0x50, 0x61, 0x69, 0x72,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x72, 0x65, 0x6d, 0x73, 0x22, 0x2f, 0x0a, 0x15, 0x41, 0x70,
	0x62, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x42, 0x0a, 0x10, 0x41,
	0x70, 0x62, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22,
	0x25, 0x0a, 0x11, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x01, 0x52, 0x03, 0x61, 0x76, 0x67, 0x22, 0x3d, 0x0a, 0x0f, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x78,
	0x4d, 0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x73, 0x4d, 0x61, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x4d, 0x61, 0x78, 0x22, 0x28, 0x0a, 0x10, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x78, 0x4d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x4c, 0x0a, 0x10, 0x41, 0x70, 0x62, 0x54, 0x78, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x64, 0x42, 0x6c, 0x75, 0x65, 0x22, 0x5a, 0x0a,
	0x0e, 0x41, 0x70, 0x62, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32,
	0x0a, 0x2e, 0x43, 0x52, 0x44, 0x54, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x7c, 0x0a, 0x0e, 0x41, 0x70, 0x62,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x0c, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x35, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x73, 0x0a, 0x0b, 0x41, 0x70, 0x62, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x12, 0x31, 0x0a, 0x0b, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70,
	0x62, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41,
	0x70, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf2, 0x03, 0x0a,
	0x12, 0x41, 0x70, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x6f, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x70, 0x62, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x6f, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x65, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x70, 0x62, 0x53, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x65, 0x74, 0x6f, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x72, 0x65, 0x67,
	0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x70, 0x62, 0x52, 0x65,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x05, 0x72, 0x65, 0x67, 0x6f, 0x70, 0x12, 0x23,
	0x0a, 0x05, 0x6d, 0x61, 0x70, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x05, 0x6d, 0x61,
	0x70, 0x6f, 0x70, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x74, 0x6f, 0x70, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x41, 0x70, 0x62, 0x43, 0x72, 0x64, 0x74, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x74, 0x6f, 0x70, 0x12, 0x26, 0x0a, 0x06,
	0x66, 0x6c, 0x61, 0x67, 0x6f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41,
	0x70, 0x62, 0x46, 0x6c, 0x61, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x06, 0x66, 0x6c,
	0x61, 0x67, 0x6f, 0x70, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x6d, 0x69, 0x6e, 0x6f, 0x70,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x78, 0x4d,
	0x69, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x6d, 0x69, 0x6e,
	0x6f, 0x70, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x6b, 0x72, 0x6d, 0x76, 0x6f, 0x70, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70, 0x6b, 0x52,
	0x6d, 0x76, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x6b, 0x72, 0x6d,
	0x76, 0x6f, 0x70, 0x12, 0x26, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x6b, 0x6f, 0x70, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70, 0x6b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x6b, 0x6f, 0x70, 0x12, 0x3b, 0x0a, 0x0d, 0x6c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x6f, 0x70, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x70, 0x62, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x6f, 0x70, 0x12, 0x27, 0x0a, 0x05, 0x61, 0x76, 0x67, 0x6f,
	0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x70, 0x62, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x05, 0x61, 0x76, 0x67, 0x6f,
	0x70, 0x22, 0x71, 0x0a, 0x10, 0x41, 0x70, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x70, 0x62, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a,
	0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x15, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x13, 0x41, 0x70, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x41, 0x70, 0x62, 0x54, 0x78, 0x6e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x13,
	0x41, 0x70, 0x62, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x4d, 0x0a, 0x14, 0x41, 0x70,
	0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0c, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x78, 0x0a, 0x16, 0x41, 0x70, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x70, 0x62, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41,
	0x70, 0x62, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x22, 0x79, 0x0a, 0x14, 0x41, 0x70, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x41, 0x70, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x88,
	0x01, 0x0a, 0x17, 0x41, 0x70, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xc9, 0x03, 0x0a, 0x11, 0x41, 0x70,
	0x62, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x03, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x70, 0x62,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12,
	0x20, 0x0a, 0x03, 0x72, 0x65, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41,
	0x70, 0x62, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x72, 0x65,
	0x67, 0x12, 0x26, 0x0a, 0x05, 0x6d, 0x76, 0x72, 0x65, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x4d, 0x56, 0x52, 0x65, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x05, 0x6d, 0x76, 0x72, 0x65, 0x67, 0x12, 0x20, 0x0a, 0x03, 0x6d, 0x61, 0x70,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x47,
	0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x12, 0x29, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x6d, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x6d, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x74,
	0x6f, 0x70, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x6b,
	0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x64, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x52, 0x05, 0x6c, 0x65, 0x61, 0x64, 0x62, 0x12, 0x24,
	0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x70,
	0x62, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x03, 0x61, 0x76, 0x67, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x72, 0x65, 0x61, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70, 0x62, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x74, 0x72, 0x65, 0x61, 0x64, 0x22, 0x7a, 0x0a, 0x12, 0x41, 0x70, 0x62, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x70, 0x62, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x68, 0x0a, 0x0d, 0x41, 0x70, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x79, 0x0a, 0x18, 0x41,
	0x70, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70, 0x62, 0x52, 0x65,
	0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x70, 0x62,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x41, 0x70, 0x62, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x15, 0x41,
	0x70, 0x62, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x44, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x49, 0x44, 0x73,
	0x22, 0x10, 0x0a, 0x0e, 0x41, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x70, 0x62, 0x52, 0x65, 0x73, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0xa4, 0x01, 0x0a, 0x07, 0x41, 0x70, 0x62,
	0x52, 0x65, 0x61, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22,
	0xab, 0x01, 0x0a, 0x0d, 0x41, 0x70, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x2d, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x12, 0x33, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x70, 0x62,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8a, 0x01,
	0x0a, 0x0e, 0x41, 0x70, 0x62, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x27, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x26, 0x0a, 0x08, 0x72, 0x65, 0x61,
	0x64, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x52, 0x45,
	0x41, 0x44, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x41, 0x70, 0x62, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x12, 0x41,
	0x70, 0x62, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x24, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x41, 0x70, 0x62, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x27, 0x0a,
	0x04, 0x74, 0x6f, 0x70, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70,
	0x62, 0x54, 0x6f, 0x70, 0x6b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x12, 0x24, 0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x70, 0x62, 0x41, 0x76, 0x67, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x03, 0x61, 0x76, 0x67, 0x22, 0x3e, 0x0a, 0x11,
	0x41, 0x70, 0x62, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61,
	0x64, 0x12, 0x29, 0x0a, 0x06, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x41, 0x70, 0x62, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x06, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x22, 0xd1, 0x01, 0x0a,
	0x11, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x08, 0x67, 0x65, 0x74, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x68, 0x61, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x48, 0x61, 0x73, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x61, 0x64, 0x52, 0x06, 0x68, 0x61, 0x73, 0x6b, 0x65, 0x79, 0x12, 0x2c,
	0x0a, 0x07, 0x67, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x07, 0x67, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x32, 0x0a, 0x09,
	0x67, 0x65, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x09, 0x67, 0x65, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x78, 0x0a, 0x12, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70, 0x6b, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x67, 0x65, 0x74, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70, 0x6b, 0x47, 0x65,
	0x74, 0x4e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x04, 0x67, 0x65, 0x74, 0x6e, 0x12, 0x3c, 0x0a, 0x0d,
	0x67, 0x65, 0x74, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70, 0x6b, 0x41, 0x62, 0x6f,
	0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52, 0x0d, 0x67, 0x65, 0x74,
	0x61, 0x62, 0x6f, 0x76, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a, 0x11, 0x41, 0x70,
	0x62, 0x41, 0x76, 0x67, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x29, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x41, 0x76, 0x67, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x07, 0x67, 0x65, 0x74, 0x66, 0x75, 0x6c, 0x6c, 0x22, 0x2c, 0x0a, 0x10, 0x41, 0x70,
	0x62, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x61, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52,
	0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x41, 0x70, 0x62, 0x4d,
	0x61, 0x70, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x29, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x45, 0x6d, 0x62, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x24, 0x0a, 0x10, 0x41,
	0x70, 0x62, 0x4d, 0x61, 0x70, 0x48, 0x61, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x61, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x65, 0x61, 0x64, 0x22, 0x54, 0x0a, 0x13, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70,
	0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x45, 0x6d, 0x62, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x87, 0x01, 0x0a,
	0x14, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x45, 0x6d, 0x62, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x43, 0x52, 0x44, 0x54, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70,
	0x62, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x41, 0x72, 0x67, 0x73,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70,
	0x6b, 0x47, 0x65, 0x74, 0x4e, 0x52, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x33, 0x0a, 0x15, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70, 0x6b, 0x41, 0x62, 0x6f, 0x76,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x70, 0x62, 0x41, 0x76, 0x67,
	0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x12, 0x41, 0x70, 0x62,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x28, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x41,
	0x70, 0x62, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x03, 0x6d, 0x61, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03,
	0x6d, 0x61, 0x70, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70, 0x6b, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x6b,
	0x12, 0x28, 0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x41, 0x70, 0x62, 0x41, 0x76, 0x67, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x61, 0x76, 0x67, 0x22, 0x46, 0x0a, 0x15, 0x41, 0x70,
	0x62, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x06, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x70, 0x62, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x6c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x22, 0xdd, 0x01, 0x0a, 0x15, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x08,
	0x67, 0x65, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x08, 0x67, 0x65, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2d, 0x0a,
	0x06, 0x68, 0x61, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x48, 0x61, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x06, 0x68, 0x61, 0x73, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x07,
	0x67, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x67, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x32,
	0x0a, 0x09, 0x67, 0x65, 0x74, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x52, 0x09, 0x67, 0x65, 0x74, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x49, 0x0a, 0x15, 0x41, 0x70, 0x62, 0x41, 0x76, 0x67, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x07, 0x67,
	0x65, 0x74, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x41,
	0x70, 0x62, 0x41, 0x76, 0x67, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x07, 0x67, 0x65, 0x74, 0x66, 0x75, 0x6c, 0x6c, 0x22, 0x3f, 0x0a,
	0x16, 0x41, 0x70, 0x62, 0x54, 0x6f, 0x70, 0x6b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x22, 0x28,
	0x0a, 0x14, 0x41, 0x70, 0x62, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x61, 0x73, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x03, 0x68, 0x61, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x41, 0x70, 0x62,
	0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x41, 0x70, 0x62, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x63, 0x72, 0x64,
	0x74, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x43, 0x52,
	0x44, 0x54, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x72, 0x64, 0x74, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x26, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x74, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x14, 0x41, 0x70, 0x62,
	0x4d, 0x61, 0x70, 0x48, 0x61, 0x73, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x61, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x03,
	0x68, 0x61, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x22, 0x56, 0x0a, 0x13, 0x41, 0x70, 0x62, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x41, 0x70,
	0x62, 0x4d, 0x61, 0x70, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x3f, 0x0a, 0x15, 0x41, 0x70, 0x62, 0x41,
	0x76, 0x67, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x03,
	0x73, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x41, 0x64, 0x64, 0x73, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x05, 0x6e, 0x41, 0x64, 0x64, 0x73, 0x2a, 0xcd, 0x01, 0x0a, 0x09, 0x43, 0x52,
	0x44, 0x54, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x45, 0x52, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x52, 0x53, 0x45, 0x54, 0x10, 0x04, 0x12,
	0x0a, 0x0a, 0x06, 0x4c, 0x57, 0x57, 0x52, 0x45, 0x47, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x4d,
	0x56, 0x52, 0x45, 0x47, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x4d, 0x41, 0x50, 0x10, 0x08,
	0x12, 0x09, 0x0a, 0x05, 0x52, 0x57, 0x53, 0x45, 0x54, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x52,
	0x52, 0x4d, 0x41, 0x50, 0x10, 0x0b, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x41, 0x54, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x45, 0x52, 0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x45,
	0x57, 0x10, 0x0d, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x44, 0x57, 0x10, 0x0e,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x4f, 0x50, 0x4b, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x4f,
	0x50, 0x4b, 0x5f, 0x52, 0x4d, 0x56, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x56, 0x47, 0x10,
	0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x42, 0x4f, 0x41, 0x52, 0x44,
	0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x58, 0x4d, 0x49, 0x4e, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x4f, 0x52, 0x4d, 0x41, 0x50, 0x10, 0x0f, 0x2a, 0x8d, 0x01, 0x0a, 0x09, 0x52, 0x45,
	0x41, 0x44, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x4f, 0x4b, 0x55, 0x50, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x47, 0x45, 0x54, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x48, 0x41, 0x53, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x45, 0x54,
	0x5f, 0x4b, 0x45, 0x59, 0x53, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x45, 0x54, 0x5f, 0x56,
	0x41, 0x4c, 0x55, 0x45, 0x53, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x45, 0x54, 0x5f, 0x4e,
	0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x42, 0x4f, 0x56, 0x45, 0x5f,
	0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x45, 0x54, 0x5f, 0x46,
	0x55, 0x4c, 0x4c, 0x5f, 0x41, 0x56, 0x47, 0x10, 0x08, 0x42, 0x39, 0x0a, 0x17, 0x63, 0x6f, 0x6d,
	0x2e, 0x62, 0x61, 0x73, 0x68, 0x6f, 0x2e, 0x72, 0x69, 0x61, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x42, 0x0a, 0x41, 0x6e, 0x74, 0x69, 0x64, 0x6f, 0x74, 0x65, 0x50, 0x42,
	0x5a, 0x12, 0x70, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x42, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_antidote_proto_rawDescOnce sync.Once
	file_antidote_proto_rawDescData = file_antidote_proto_rawDesc
)

func file_antidote_proto_rawDescGZIP() []byte {
	file_antidote_proto_rawDescOnce.Do(func() {
		file_antidote_proto_rawDescData = protoimpl.X.CompressGZIP(file_antidote_proto_rawDescData)
	})
	return file_antidote_proto_rawDescData
}

var file_antidote_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_antidote_proto_msgTypes = make([]protoimpl.MessageInfo, 75)
var file_antidote_proto_goTypes = []interface{}{
	(CRDTType)(0),                    // 0: CRDT_type
	(READType)(0),                    // 1: READ_type
	(ApbSetUpdate_SetOpType)(0),      // 2: ApbSetUpdate.SetOpType
	(*ApbErrorResp)(nil),             // 3: ApbErrorResp
	(*ApbCounterUpdate)(nil),         // 4: ApbCounterUpdate
	(*ApbGetCounterResp)(nil),        // 5: ApbGetCounterResp
	(*ApbSetUpdate)(nil),             // 6: ApbSetUpdate
	(*ApbGetSetResp)(nil),            // 7: ApbGetSetResp
	(*ApbRegUpdate)(nil),             // 8: ApbRegUpdate
	(*ApbGetRegResp)(nil),            // 9: ApbGetRegResp
	(*ApbGetMVRegResp)(nil),          // 10: ApbGetMVRegResp
	(*ApbMapKey)(nil),                // 11: ApbMapKey
	(*ApbMapUpdate)(nil),             // 12: ApbMapUpdate
	(*ApbMapNestedUpdate)(nil),       // 13: ApbMapNestedUpdate
	(*ApbGetMapResp)(nil),            // 14: ApbGetMapResp
	(*ApbMapEntry)(nil),              // 15: ApbMapEntry
	(*ApbFlagUpdate)(nil),            // 16: ApbFlagUpdate
	(*ApbGetFlagResp)(nil),           // 17: ApbGetFlagResp
	(*ApbCrdtReset)(nil),             // 18: ApbCrdtReset
	(*ApbOperationResp)(nil),         // 19: ApbOperationResp
	(*ApbTopkRmvUpdate)(nil),         // 20: ApbTopkRmvUpdate
	(*ApbTopkUpdate)(nil),            // 21: ApbTopkUpdate
	(*ApbGetTopkResp)(nil),           // 22: ApbGetTopkResp
	(*ApbIntPair)(nil),               // 23: ApbIntPair
	(*ApbLeaderboardUpdate)(nil),     // 24: ApbLeaderboardUpdate
	(*ApbGetLeaderboardResp)(nil),    // 25: ApbGetLeaderboardResp
	(*ApbAverageUpdate)(nil),         // 26: ApbAverageUpdate
	(*ApbGetAverageResp)(nil),        // 27: ApbGetAverageResp
	(*ApbMaxMinUpdate)(nil),          // 28: ApbMaxMinUpdate
	(*ApbGetMaxMinResp)(nil),         // 29: ApbGetMaxMinResp
	(*ApbTxnProperties)(nil),         // 30: ApbTxnProperties
	(*ApbBoundObject)(nil),           // 31: ApbBoundObject
	(*ApbReadObjects)(nil),           // 32: ApbReadObjects
	(*ApbUpdateOp)(nil),              // 33: ApbUpdateOp
	(*ApbUpdateOperation)(nil),       // 34: ApbUpdateOperation
	(*ApbUpdateObjects)(nil),         // 35: ApbUpdateObjects
	(*ApbStartTransaction)(nil),      // 36: ApbStartTransaction
	(*ApbAbortTransaction)(nil),      // 37: ApbAbortTransaction
	(*ApbCommitTransaction)(nil),     // 38: ApbCommitTransaction
	(*ApbStaticUpdateObjects)(nil),   // 39: ApbStaticUpdateObjects
	(*ApbStaticReadObjects)(nil),     // 40: ApbStaticReadObjects
	(*ApbStartTransactionResp)(nil),  // 41: ApbStartTransactionResp
	(*ApbReadObjectResp)(nil),        // 42: ApbReadObjectResp
	(*ApbReadObjectsResp)(nil),       // 43: ApbReadObjectsResp
	(*ApbCommitResp)(nil),            // 44: ApbCommitResp
	(*ApbStaticReadObjectsResp)(nil), // 45: ApbStaticReadObjectsResp
	(*ApbConnectReplica)(nil),        // 46: ApbConnectReplica
	(*ApbConnectReplicaResp)(nil),    // 47: ApbConnectReplicaResp
	(*ApbResetServer)(nil),           // 48: ApbResetServer
	(*ApbResetServerResp)(nil),       // 49: ApbResetServerResp
	(*ApbRead)(nil),                  // 50: ApbRead
	(*ApbStaticRead)(nil),            // 51: ApbStaticRead
	(*ApbPartialRead)(nil),           // 52: ApbPartialRead
	(*ApbPartialReadArgs)(nil),       // 53: ApbPartialReadArgs
	(*ApbSetPartialRead)(nil),        // 54: ApbSetPartialRead
	(*ApbMapPartialRead)(nil),        // 55: ApbMapPartialRead
	(*ApbTopkPartialRead)(nil),       // 56: ApbTopkPartialRead
	(*ApbAvgPartialRead)(nil),        // 57: ApbAvgPartialRead
	(*ApbSetLookupRead)(nil),         // 58: ApbSetLookupRead
	(*ApbMapGetValueRead)(nil),       // 59: ApbMapGetValueRead
	(*ApbMapHasKeyRead)(nil),         // 60: ApbMapHasKeyRead
	(*ApbMapGetKeysRead)(nil),        // 61: ApbMapGetKeysRead
	(*ApbMapGetValuesRead)(nil),      // 62: ApbMapGetValuesRead
	(*ApbMapEmbPartialArgs)(nil),     // 63: ApbMapEmbPartialArgs
	(*ApbTopkGetNRead)(nil),          // 64: ApbTopkGetNRead
	(*ApbTopkAboveValueRead)(nil),    // 65: ApbTopkAboveValueRead
	(*ApbAvgFullRead)(nil),           // 66: ApbAvgFullRead
	(*ApbPartialReadResp)(nil),       // 67: ApbPartialReadResp
	(*ApbSetPartialReadResp)(nil),    // 68: ApbSetPartialReadResp
	(*ApbMapPartialReadResp)(nil),    // 69: ApbMapPartialReadResp
	(*ApbAvgPartialReadResp)(nil),    // 70: ApbAvgPartialReadResp
	(*ApbTopkPartialReadResp)(nil),   // 71: ApbTopkPartialReadResp
	(*ApbSetLookupReadResp)(nil),     // 72: ApbSetLookupReadResp
	(*ApbMapGetValueResp)(nil),       // 73: ApbMapGetValueResp
	(*ApbMapHasKeyReadResp)(nil),     // 74: ApbMapHasKeyReadResp
	(*ApbMapGetKeysReadResp)(nil),    // 75: ApbMapGetKeysReadResp
	(*ApbMapGetValuesResp)(nil),      // 76: ApbMapGetValuesResp
	(*ApbAvgGetFullReadResp)(nil),    // 77: ApbAvgGetFullReadResp
}
var file_antidote_proto_depIdxs = []int32{
	2,  // 0: ApbSetUpdate.optype:type_name -> ApbSetUpdate.SetOpType
	0,  // 1: ApbMapKey.type:type_name -> CRDT_type
	13, // 2: ApbMapUpdate.updates:type_name -> ApbMapNestedUpdate
	11, // 3: ApbMapUpdate.removedKeys:type_name -> ApbMapKey
	11, // 4: ApbMapNestedUpdate.key:type_name -> ApbMapKey
	34, // 5: ApbMapNestedUpdate.update:type_name -> ApbUpdateOperation
	15, // 6: ApbGetMapResp.entries:type_name -> ApbMapEntry
	11, // 7: ApbMapEntry.key:type_name -> ApbMapKey
	42, // 8: ApbMapEntry.value:type_name -> ApbReadObjectResp
	23, // 9: ApbTopkRmvUpdate.adds:type_name -> ApbIntPair
	23, // 10: ApbGetTopkResp.values:type_name -> ApbIntPair
	23, // 11: ApbLeaderboardUpdate.adds:type_name -> ApbIntPair
	0,  // 12: ApbBoundObject.type:type_name -> CRDT_type
	31, // 13: ApbReadObjects.boundobjects:type_name -> ApbBoundObject
	31, // 14: ApbUpdateOp.boundobject:type_name -> ApbBoundObject
	34, // 15: ApbUpdateOp.operation:type_name -> ApbUpdateOperation
	4,  // 16: ApbUpdateOperation.counterop:type_name -> ApbCounterUpdate
	6,  // 17: ApbUpdateOperation.setop:type_name -> ApbSetUpdate
	8,  // 18: ApbUpdateOperation.regop:type_name -> ApbRegUpdate
	12, // 19: ApbUpdateOperation.mapop:type_name -> ApbMapUpdate
	18, // 20: ApbUpdateOperation.resetop:type_name -> ApbCrdtReset
	16, // 21: ApbUpdateOperation.flagop:type_name -> ApbFlagUpdate
	28, // 22: ApbUpdateOperation.maxminop:type_name -> ApbMaxMinUpdate
	20, // 23: ApbUpdateOperation.topkrmvop:type_name -> ApbTopkRmvUpdate
	21, // 24: ApbUpdateOperation.topkop:type_name -> ApbTopkUpdate
	24, // 25: ApbUpdateOperation.leaderboardop:type_name -> ApbLeaderboardUpdate
	26, // 26: ApbUpdateOperation.avgop:type_name -> ApbAverageUpdate
	33, // 27: ApbUpdateObjects.updates:type_name -> ApbUpdateOp
	30, // 28: ApbStartTransaction.properties:type_name -> ApbTxnProperties
	36, // 29: ApbStaticUpdateObjects.transaction:type_name -> ApbStartTransaction
	33, // 30: ApbStaticUpdateObjects.updates:type_name -> ApbUpdateOp
	36, // 31: ApbStaticReadObjects.transaction:type_name -> ApbStartTransaction
	31, // 32: ApbStaticReadObjects.objects:type_name -> ApbBoundObject
	5,  // 33: ApbReadObjectResp.counter:type_name -> ApbGetCounterResp
	7,  // 34: ApbReadObjectResp.set:type_name -> ApbGetSetResp
	9,  // 35: ApbReadObjectResp.reg:type_name -> ApbGetRegResp
	10, // 36: ApbReadObjectResp.mvreg:type_name -> ApbGetMVRegResp
	14, // 37: ApbReadObjectResp.map:type_name -> ApbGetMapResp
	17, // 38: ApbReadObjectResp.flag:type_name -> ApbGetFlagResp
	29, // 39: ApbReadObjectResp.maxmin:type_name -> ApbGetMaxMinResp
	22, // 40: ApbReadObjectResp.topk:type_name -> ApbGetTopkResp
	25, // 41: ApbReadObjectResp.leadb:type_name -> ApbGetLeaderboardResp
	27, // 42: ApbReadObjectResp.avg:type_name -> ApbGetAverageResp
	67, // 43: ApbReadObjectResp.partread:type_name -> ApbPartialReadResp
	42, // 44: ApbReadObjectsResp.objects:type_name -> ApbReadObjectResp
	43, // 45: ApbStaticReadObjectsResp.objects:type_name -> ApbReadObjectsResp
	44, // 46: ApbStaticReadObjectsResp.committime:type_name -> ApbCommitResp
	31, // 47: ApbRead.fullreads:type_name -> ApbBoundObject
	52, // 48: ApbRead.partialreads:type_name -> ApbPartialRead
	31, // 49: ApbStaticRead.fullreads:type_name -> ApbBoundObject
	52, // 50: ApbStaticRead.partialreads:type_name -> ApbPartialRead
	36, // 51: ApbStaticRead.transaction:type_name -> ApbStartTransaction
	31, // 52: ApbPartialRead.object:type_name -> ApbBoundObject
	1,  // 53: ApbPartialRead.readtype:type_name -> READ_type
	53, // 54: ApbPartialRead.args:type_name -> ApbPartialReadArgs
	54, // 55: ApbPartialReadArgs.set:type_name -> ApbSetPartialRead
	55, // 56: ApbPartialReadArgs.map:type_name -> ApbMapPartialRead
	56, // 57: ApbPartialReadArgs.topk:type_name -> ApbTopkPartialRead
	57, // 58: ApbPartialReadArgs.avg:type_name -> ApbAvgPartialRead
	58, // 59: ApbSetPartialRead.lookup:type_name -> ApbSetLookupRead
	59, // 60: ApbMapPartialRead.getvalue:type_name -> ApbMapGetValueRead
	60, // 61: ApbMapPartialRead.haskey:type_name -> ApbMapHasKeyRead
	61, // 62: ApbMapPartialRead.getkeys:type_name -> ApbMapGetKeysRead
	62, // 63: ApbMapPartialRead.getvalues:type_name -> ApbMapGetValuesRead
	64, // 64: ApbTopkPartialRead.getn:type_name -> ApbTopkGetNRead
	65, // 65: ApbTopkPartialRead.getabovevalue:type_name -> ApbTopkAboveValueRead
	66, // 66: ApbAvgPartialRead.getfull:type_name -> ApbAvgFullRead
	63, // 67: ApbMapGetValueRead.args:type_name -> ApbMapEmbPartialArgs
	63, // 68: ApbMapGetValuesRead.args:type_name -> ApbMapEmbPartialArgs
	0,  // 69: ApbMapEmbPartialArgs.type:type_name -> CRDT_type
	1,  // 70: ApbMapEmbPartialArgs.readtype:type_name -> READ_type
	53, // 71: ApbMapEmbPartialArgs.args:type_name -> ApbPartialReadArgs
	68, // 72: ApbPartialReadResp.set:type_name -> ApbSetPartialReadResp
	69, // 73: ApbPartialReadResp.map:type_name -> ApbMapPartialReadResp
	71, // 74: ApbPartialReadResp.topk:type_name -> ApbTopkPartialReadResp
	70, // 75: ApbPartialReadResp.avg:type_name -> ApbAvgPartialReadResp
	72, // 76: ApbSetPartialReadResp.lookup:type_name -> ApbSetLookupReadResp
	73, // 77: ApbMapPartialReadResp.getvalue:type_name -> ApbMapGetValueResp
	74, // 78: ApbMapPartialReadResp.haskey:type_name -> ApbMapHasKeyReadResp
	75, // 79: ApbMapPartialReadResp.getkeys:type_name -> ApbMapGetKeysReadResp
	76, // 80: ApbMapPartialReadResp.getvalues:type_name -> ApbMapGetValuesResp
	77, // 81: ApbAvgPartialReadResp.getfull:type_name -> ApbAvgGetFullReadResp
	22, // 82: ApbTopkPartialReadResp.pairs:type_name -> ApbGetTopkResp
	42, // 83: ApbMapGetValueResp.value:type_name -> ApbReadObjectResp
	0,  // 84: ApbMapGetValueResp.crdttype:type_name -> CRDT_type
	1,  // 85: ApbMapGetValueResp.parttype:type_name -> READ_type
	73, // 86: ApbMapGetValuesResp.values:type_name -> ApbMapGetValueResp
	87, // [87:87] is the sub-list for method output_type
	87, // [87:87] is the sub-list for method input_type
	87, // [87:87] is the sub-list for extension type_name
	87, // [87:87] is the sub-list for extension extendee
	0,  // [0:87] is the sub-list for field type_name
}

func init() { file_antidote_proto_init() }
func file_antidote_proto_init() {
	if File_antidote_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_antidote_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbErrorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbCounterUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbGetCounterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbSetUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbGetSetResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbRegUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbGetRegResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbGetMVRegResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapNestedUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbGetMapResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbFlagUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbGetFlagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbCrdtReset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbOperationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbTopkRmvUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbTopkUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbGetTopkResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbIntPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbLeaderboardUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbGetLeaderboardResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbAverageUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbGetAverageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMaxMinUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbGetMaxMinResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbTxnProperties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbBoundObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbReadObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbUpdateOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbUpdateOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbUpdateObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbStartTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbAbortTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbCommitTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbStaticUpdateObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbStaticReadObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbStartTransactionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbReadObjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbReadObjectsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbCommitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbStaticReadObjectsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbConnectReplica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbConnectReplicaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbResetServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbResetServerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbStaticRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbPartialRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbPartialReadArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbSetPartialRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapPartialRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbTopkPartialRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbAvgPartialRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbSetLookupRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapGetValueRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapHasKeyRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapGetKeysRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapGetValuesRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapEmbPartialArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbTopkGetNRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbTopkAboveValueRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbAvgFullRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbPartialReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbSetPartialReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapPartialReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbAvgPartialReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbTopkPartialReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbSetLookupReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapGetValueResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapHasKeyReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapGetKeysReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbMapGetValuesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_antidote_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbAvgGetFullReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_antidote_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   75,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_antidote_proto_goTypes,
		DependencyIndexes: file_antidote_proto_depIdxs,
		EnumInfos:         file_antidote_proto_enumTypes,
		MessageInfos:      file_antidote_proto_msgTypes,
	}.Build()
	File_antidote_proto = out.File
	file_antidote_proto_rawDesc = nil
	file_antidote_proto_goTypes = nil
	file_antidote_proto_depIdxs = nil
}
