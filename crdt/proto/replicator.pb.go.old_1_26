// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: replicator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoStableClock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID  *int32 `protobuf:"varint,1,req,name=senderID" json:"senderID,omitempty"`
	ReplicaTs *int64 `protobuf:"varint,2,req,name=replicaTs" json:"replicaTs,omitempty"`
}

func (x *ProtoStableClock) Reset() {
	*x = ProtoStableClock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoStableClock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoStableClock) ProtoMessage() {}

func (x *ProtoStableClock) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoStableClock.ProtoReflect.Descriptor instead.
func (*ProtoStableClock) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoStableClock) GetSenderID() int32 {
	if x != nil && x.SenderID != nil {
		return *x.SenderID
	}
	return 0
}

func (x *ProtoStableClock) GetReplicaTs() int64 {
	if x != nil && x.ReplicaTs != nil {
		return *x.ReplicaTs
	}
	return 0
}

type ProtoReplicatePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID    *int32          `protobuf:"varint,1,req,name=senderID" json:"senderID,omitempty"`
	Txn         *ProtoRemoteTxn `protobuf:"bytes,2,req,name=txn" json:"txn,omitempty"`
	PartitionID *int64          `protobuf:"varint,3,req,name=partitionID" json:"partitionID,omitempty"`
	TxnID       *int32          `protobuf:"varint,4,req,name=txnID" json:"txnID,omitempty"` //Note: this ID is not the actual txnID, just an ID used to distinguish different txns
}

func (x *ProtoReplicatePart) Reset() {
	*x = ProtoReplicatePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoReplicatePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoReplicatePart) ProtoMessage() {}

func (x *ProtoReplicatePart) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoReplicatePart.ProtoReflect.Descriptor instead.
func (*ProtoReplicatePart) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoReplicatePart) GetSenderID() int32 {
	if x != nil && x.SenderID != nil {
		return *x.SenderID
	}
	return 0
}

func (x *ProtoReplicatePart) GetTxn() *ProtoRemoteTxn {
	if x != nil {
		return x.Txn
	}
	return nil
}

func (x *ProtoReplicatePart) GetPartitionID() int64 {
	if x != nil && x.PartitionID != nil {
		return *x.PartitionID
	}
	return 0
}

func (x *ProtoReplicatePart) GetTxnID() int32 {
	if x != nil && x.TxnID != nil {
		return *x.TxnID
	}
	return 0
}

type ProtoReplicateGroupTxn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID *int32               `protobuf:"varint,1,req,name=senderID" json:"senderID,omitempty"`
	Txns     []*ProtoReplicateTxn `protobuf:"bytes,2,rep,name=txns" json:"txns,omitempty"`
	MinTxnID *int32               `protobuf:"varint,3,req,name=minTxnID" json:"minTxnID,omitempty"`
	MaxTxnID *int32               `protobuf:"varint,4,req,name=maxTxnID" json:"maxTxnID,omitempty"`
}

func (x *ProtoReplicateGroupTxn) Reset() {
	*x = ProtoReplicateGroupTxn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoReplicateGroupTxn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoReplicateGroupTxn) ProtoMessage() {}

func (x *ProtoReplicateGroupTxn) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoReplicateGroupTxn.ProtoReflect.Descriptor instead.
func (*ProtoReplicateGroupTxn) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoReplicateGroupTxn) GetSenderID() int32 {
	if x != nil && x.SenderID != nil {
		return *x.SenderID
	}
	return 0
}

func (x *ProtoReplicateGroupTxn) GetTxns() []*ProtoReplicateTxn {
	if x != nil {
		return x.Txns
	}
	return nil
}

func (x *ProtoReplicateGroupTxn) GetMinTxnID() int32 {
	if x != nil && x.MinTxnID != nil {
		return *x.MinTxnID
	}
	return 0
}

func (x *ProtoReplicateGroupTxn) GetMaxTxnID() int32 {
	if x != nil && x.MaxTxnID != nil {
		return *x.MaxTxnID
	}
	return 0
}

type ProtoReplicateTxn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderID  *int32               `protobuf:"varint,1,req,name=senderID" json:"senderID,omitempty"`
	Timestamp []byte               `protobuf:"bytes,2,req,name=timestamp" json:"timestamp,omitempty"`
	Part      []*ProtoNewRemoteTxn `protobuf:"bytes,3,rep,name=part" json:"part,omitempty"` //One per partition in the txn
	TxnID     *int32               `protobuf:"varint,4,req,name=txnID" json:"txnID,omitempty"`
}

func (x *ProtoReplicateTxn) Reset() {
	*x = ProtoReplicateTxn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoReplicateTxn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoReplicateTxn) ProtoMessage() {}

func (x *ProtoReplicateTxn) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoReplicateTxn.ProtoReflect.Descriptor instead.
func (*ProtoReplicateTxn) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoReplicateTxn) GetSenderID() int32 {
	if x != nil && x.SenderID != nil {
		return *x.SenderID
	}
	return 0
}

func (x *ProtoReplicateTxn) GetTimestamp() []byte {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ProtoReplicateTxn) GetPart() []*ProtoNewRemoteTxn {
	if x != nil {
		return x.Part
	}
	return nil
}

func (x *ProtoReplicateTxn) GetTxnID() int32 {
	if x != nil && x.TxnID != nil {
		return *x.TxnID
	}
	return 0
}

type ProtoNewRemoteTxn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Upds        []*ProtoDownstreamUpd `protobuf:"bytes,1,rep,name=upds" json:"upds,omitempty"`
	PartitionID *int64                `protobuf:"varint,2,req,name=partitionID" json:"partitionID,omitempty"`
}

func (x *ProtoNewRemoteTxn) Reset() {
	*x = ProtoNewRemoteTxn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoNewRemoteTxn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoNewRemoteTxn) ProtoMessage() {}

func (x *ProtoNewRemoteTxn) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoNewRemoteTxn.ProtoReflect.Descriptor instead.
func (*ProtoNewRemoteTxn) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoNewRemoteTxn) GetUpds() []*ProtoDownstreamUpd {
	if x != nil {
		return x.Upds
	}
	return nil
}

func (x *ProtoNewRemoteTxn) GetPartitionID() int64 {
	if x != nil && x.PartitionID != nil {
		return *x.PartitionID
	}
	return 0
}

type ProtoRemoteTxn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp []byte                `protobuf:"bytes,1,req,name=timestamp" json:"timestamp,omitempty"`
	Upds      []*ProtoDownstreamUpd `protobuf:"bytes,2,rep,name=upds" json:"upds,omitempty"`
}

func (x *ProtoRemoteTxn) Reset() {
	*x = ProtoRemoteTxn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRemoteTxn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRemoteTxn) ProtoMessage() {}

func (x *ProtoRemoteTxn) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRemoteTxn.ProtoReflect.Descriptor instead.
func (*ProtoRemoteTxn) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoRemoteTxn) GetTimestamp() []byte {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ProtoRemoteTxn) GetUpds() []*ProtoDownstreamUpd {
	if x != nil {
		return x.Upds
	}
	return nil
}

type ProtoDownstreamUpd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyParams *ApbBoundObject    `protobuf:"bytes,1,req,name=keyParams" json:"keyParams,omitempty"`
	Op        *ProtoOpDownstream `protobuf:"bytes,2,req,name=op" json:"op,omitempty"`
}

func (x *ProtoDownstreamUpd) Reset() {
	*x = ProtoDownstreamUpd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDownstreamUpd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDownstreamUpd) ProtoMessage() {}

func (x *ProtoDownstreamUpd) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDownstreamUpd.ProtoReflect.Descriptor instead.
func (*ProtoDownstreamUpd) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoDownstreamUpd) GetKeyParams() *ApbBoundObject {
	if x != nil {
		return x.KeyParams
	}
	return nil
}

func (x *ProtoDownstreamUpd) GetOp() *ProtoOpDownstream {
	if x != nil {
		return x.Op
	}
	return nil
}

type ProtoOpDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CounterOp      *ProtoCounterDownstream      `protobuf:"bytes,1,opt,name=counterOp" json:"counterOp,omitempty"`
	SetOp          *ProtoSetDownstream          `protobuf:"bytes,2,opt,name=setOp" json:"setOp,omitempty"`
	TopkrmvOp      *ProtoTopKRmvDownstream      `protobuf:"bytes,3,opt,name=topkrmvOp" json:"topkrmvOp,omitempty"`
	LwwregOp       *ProtoLWWRegisterDownstream  `protobuf:"bytes,4,opt,name=lwwregOp" json:"lwwregOp,omitempty"`
	OrmapOp        *ProtoORMapDownstream        `protobuf:"bytes,5,opt,name=ormapOp" json:"ormapOp,omitempty"`
	AvgOp          *ProtoAvgDownstream          `protobuf:"bytes,6,opt,name=avgOp" json:"avgOp,omitempty"`
	MaxminOp       *ProtoMaxMinDownstream       `protobuf:"bytes,7,opt,name=maxminOp" json:"maxminOp,omitempty"`
	RwembmapOp     *ProtoRWEmbMapDownstream     `protobuf:"bytes,8,opt,name=rwembmapOp" json:"rwembmapOp,omitempty"`
	TopsumOp       *ProtoTopSumDownstream       `protobuf:"bytes,9,opt,name=topsumOp" json:"topsumOp,omitempty"`
	FlagOp         *ProtoFlagDownstream         `protobuf:"bytes,10,opt,name=flagOp" json:"flagOp,omitempty"`
	BcounterOp     *ProtoBCounterDownstream     `protobuf:"bytes,11,opt,name=bcounterOp" json:"bcounterOp,omitempty"`
	TopkOp         *ProtoTopKDownstream         `protobuf:"bytes,12,opt,name=topkOp" json:"topkOp,omitempty"`
	CounterfloatOp *ProtoCounterFloatDownstream `protobuf:"bytes,13,opt,name=counterfloatOp" json:"counterfloatOp,omitempty"`
	TopkinitOp     *ProtoTopKInitDownstream     `protobuf:"bytes,14,opt,name=topkinitOp" json:"topkinitOp,omitempty"`
	ResetOp        *ProtoResetDownstream        `protobuf:"bytes,15,opt,name=resetOp" json:"resetOp,omitempty"`
}

func (x *ProtoOpDownstream) Reset() {
	*x = ProtoOpDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOpDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOpDownstream) ProtoMessage() {}

func (x *ProtoOpDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOpDownstream.ProtoReflect.Descriptor instead.
func (*ProtoOpDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{7}
}

func (x *ProtoOpDownstream) GetCounterOp() *ProtoCounterDownstream {
	if x != nil {
		return x.CounterOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetSetOp() *ProtoSetDownstream {
	if x != nil {
		return x.SetOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetTopkrmvOp() *ProtoTopKRmvDownstream {
	if x != nil {
		return x.TopkrmvOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetLwwregOp() *ProtoLWWRegisterDownstream {
	if x != nil {
		return x.LwwregOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetOrmapOp() *ProtoORMapDownstream {
	if x != nil {
		return x.OrmapOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetAvgOp() *ProtoAvgDownstream {
	if x != nil {
		return x.AvgOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetMaxminOp() *ProtoMaxMinDownstream {
	if x != nil {
		return x.MaxminOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetRwembmapOp() *ProtoRWEmbMapDownstream {
	if x != nil {
		return x.RwembmapOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetTopsumOp() *ProtoTopSumDownstream {
	if x != nil {
		return x.TopsumOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetFlagOp() *ProtoFlagDownstream {
	if x != nil {
		return x.FlagOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetBcounterOp() *ProtoBCounterDownstream {
	if x != nil {
		return x.BcounterOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetTopkOp() *ProtoTopKDownstream {
	if x != nil {
		return x.TopkOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetCounterfloatOp() *ProtoCounterFloatDownstream {
	if x != nil {
		return x.CounterfloatOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetTopkinitOp() *ProtoTopKInitDownstream {
	if x != nil {
		return x.TopkinitOp
	}
	return nil
}

func (x *ProtoOpDownstream) GetResetOp() *ProtoResetDownstream {
	if x != nil {
		return x.ResetOp
	}
	return nil
}

type ProtoCounterDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInc  *bool  `protobuf:"varint,1,req,name=isInc" json:"isInc,omitempty"`
	Change *int32 `protobuf:"varint,2,req,name=change" json:"change,omitempty"`
}

func (x *ProtoCounterDownstream) Reset() {
	*x = ProtoCounterDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCounterDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCounterDownstream) ProtoMessage() {}

func (x *ProtoCounterDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCounterDownstream.ProtoReflect.Descriptor instead.
func (*ProtoCounterDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{8}
}

func (x *ProtoCounterDownstream) GetIsInc() bool {
	if x != nil && x.IsInc != nil {
		return *x.IsInc
	}
	return false
}

func (x *ProtoCounterDownstream) GetChange() int32 {
	if x != nil && x.Change != nil {
		return *x.Change
	}
	return 0
}

type ProtoCounterFloatDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInc  *bool    `protobuf:"varint,1,req,name=isInc" json:"isInc,omitempty"`
	Change *float64 `protobuf:"fixed64,2,req,name=change" json:"change,omitempty"`
}

func (x *ProtoCounterFloatDownstream) Reset() {
	*x = ProtoCounterFloatDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCounterFloatDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCounterFloatDownstream) ProtoMessage() {}

func (x *ProtoCounterFloatDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCounterFloatDownstream.ProtoReflect.Descriptor instead.
func (*ProtoCounterFloatDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{9}
}

func (x *ProtoCounterFloatDownstream) GetIsInc() bool {
	if x != nil && x.IsInc != nil {
		return *x.IsInc
	}
	return false
}

func (x *ProtoCounterFloatDownstream) GetChange() float64 {
	if x != nil && x.Change != nil {
		return *x.Change
	}
	return 0
}

type ProtoLWWRegisterDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     []byte `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
	Ts        *int64 `protobuf:"varint,2,req,name=ts" json:"ts,omitempty"`
	ReplicaID *int32 `protobuf:"varint,3,req,name=replicaID" json:"replicaID,omitempty"`
}

func (x *ProtoLWWRegisterDownstream) Reset() {
	*x = ProtoLWWRegisterDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoLWWRegisterDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoLWWRegisterDownstream) ProtoMessage() {}

func (x *ProtoLWWRegisterDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoLWWRegisterDownstream.ProtoReflect.Descriptor instead.
func (*ProtoLWWRegisterDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{10}
}

func (x *ProtoLWWRegisterDownstream) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ProtoLWWRegisterDownstream) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

func (x *ProtoLWWRegisterDownstream) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

type ProtoSetDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adds []*ProtoValueUnique  `protobuf:"bytes,1,rep,name=adds" json:"adds,omitempty"` //key -> unique
	Rems []*ProtoValueUniques `protobuf:"bytes,2,rep,name=rems" json:"rems,omitempty"` //key -> set/array of uniques
}

func (x *ProtoSetDownstream) Reset() {
	*x = ProtoSetDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoSetDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoSetDownstream) ProtoMessage() {}

func (x *ProtoSetDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoSetDownstream.ProtoReflect.Descriptor instead.
func (*ProtoSetDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{11}
}

func (x *ProtoSetDownstream) GetAdds() []*ProtoValueUnique {
	if x != nil {
		return x.Adds
	}
	return nil
}

func (x *ProtoSetDownstream) GetRems() []*ProtoValueUniques {
	if x != nil {
		return x.Rems
	}
	return nil
}

type ProtoORMapDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adds []*ProtoKeyValueUnique `protobuf:"bytes,1,rep,name=adds" json:"adds,omitempty"` //key -> (element, unique)
	Rems []*ProtoORMapRemove    `protobuf:"bytes,2,rep,name=rems" json:"rems,omitempty"`
}

func (x *ProtoORMapDownstream) Reset() {
	*x = ProtoORMapDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoORMapDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoORMapDownstream) ProtoMessage() {}

func (x *ProtoORMapDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoORMapDownstream.ProtoReflect.Descriptor instead.
func (*ProtoORMapDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{12}
}

func (x *ProtoORMapDownstream) GetAdds() []*ProtoKeyValueUnique {
	if x != nil {
		return x.Adds
	}
	return nil
}

func (x *ProtoORMapDownstream) GetRems() []*ProtoORMapRemove {
	if x != nil {
		return x.Rems
	}
	return nil
}

type ProtoTopKRmvDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adds []*ProtoTopKElement `protobuf:"bytes,1,rep,name=adds" json:"adds,omitempty"`
	Rems *ProtoTopKRmvRemove `protobuf:"bytes,2,opt,name=rems" json:"rems,omitempty"`
}

func (x *ProtoTopKRmvDownstream) Reset() {
	*x = ProtoTopKRmvDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopKRmvDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopKRmvDownstream) ProtoMessage() {}

func (x *ProtoTopKRmvDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopKRmvDownstream.ProtoReflect.Descriptor instead.
func (*ProtoTopKRmvDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{13}
}

func (x *ProtoTopKRmvDownstream) GetAdds() []*ProtoTopKElement {
	if x != nil {
		return x.Adds
	}
	return nil
}

func (x *ProtoTopKRmvDownstream) GetRems() *ProtoTopKRmvRemove {
	if x != nil {
		return x.Rems
	}
	return nil
}

type ProtoTopKDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adds []*ProtoTopKScore `protobuf:"bytes,1,rep,name=adds" json:"adds,omitempty"`
}

func (x *ProtoTopKDownstream) Reset() {
	*x = ProtoTopKDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopKDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopKDownstream) ProtoMessage() {}

func (x *ProtoTopKDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopKDownstream.ProtoReflect.Descriptor instead.
func (*ProtoTopKDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{14}
}

func (x *ProtoTopKDownstream) GetAdds() []*ProtoTopKScore {
	if x != nil {
		return x.Adds
	}
	return nil
}

type ProtoTopKRmvRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vcs [][]byte `protobuf:"bytes,1,rep,name=vcs" json:"vcs,omitempty"` //If client-generated remove: only 1 entry. If topk-generated due to add: 1 entry per id.
	Ids []int32  `protobuf:"varint,2,rep,name=ids" json:"ids,omitempty"`
}

func (x *ProtoTopKRmvRemove) Reset() {
	*x = ProtoTopKRmvRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopKRmvRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopKRmvRemove) ProtoMessage() {}

func (x *ProtoTopKRmvRemove) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopKRmvRemove.ProtoReflect.Descriptor instead.
func (*ProtoTopKRmvRemove) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{15}
}

func (x *ProtoTopKRmvRemove) GetVcs() [][]byte {
	if x != nil {
		return x.Vcs
	}
	return nil
}

func (x *ProtoTopKRmvRemove) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ProtoTopKInitDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopSize *uint32 `protobuf:"varint,1,req,name=topSize" json:"topSize,omitempty"`
}

func (x *ProtoTopKInitDownstream) Reset() {
	*x = ProtoTopKInitDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopKInitDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopKInitDownstream) ProtoMessage() {}

func (x *ProtoTopKInitDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopKInitDownstream.ProtoReflect.Descriptor instead.
func (*ProtoTopKInitDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{16}
}

func (x *ProtoTopKInitDownstream) GetTopSize() uint32 {
	if x != nil && x.TopSize != nil {
		return *x.TopSize
	}
	return 0
}

type ProtoAvgDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SumValue *int64 `protobuf:"varint,1,req,name=sumValue" json:"sumValue,omitempty"`
	NAdds    *int64 `protobuf:"varint,2,req,name=nAdds" json:"nAdds,omitempty"`
}

func (x *ProtoAvgDownstream) Reset() {
	*x = ProtoAvgDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAvgDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAvgDownstream) ProtoMessage() {}

func (x *ProtoAvgDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAvgDownstream.ProtoReflect.Descriptor instead.
func (*ProtoAvgDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{17}
}

func (x *ProtoAvgDownstream) GetSumValue() int64 {
	if x != nil && x.SumValue != nil {
		return *x.SumValue
	}
	return 0
}

func (x *ProtoAvgDownstream) GetNAdds() int64 {
	if x != nil && x.NAdds != nil {
		return *x.NAdds
	}
	return 0
}

type ProtoMaxMinDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Max *ProtoMaxDownstream `protobuf:"bytes,1,opt,name=max" json:"max,omitempty"`
	Min *ProtoMinDownstream `protobuf:"bytes,2,opt,name=min" json:"min,omitempty"`
}

func (x *ProtoMaxMinDownstream) Reset() {
	*x = ProtoMaxMinDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMaxMinDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMaxMinDownstream) ProtoMessage() {}

func (x *ProtoMaxMinDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMaxMinDownstream.ProtoReflect.Descriptor instead.
func (*ProtoMaxMinDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{18}
}

func (x *ProtoMaxMinDownstream) GetMax() *ProtoMaxDownstream {
	if x != nil {
		return x.Max
	}
	return nil
}

func (x *ProtoMaxMinDownstream) GetMin() *ProtoMinDownstream {
	if x != nil {
		return x.Min
	}
	return nil
}

type ProtoMaxDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *int64 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *ProtoMaxDownstream) Reset() {
	*x = ProtoMaxDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMaxDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMaxDownstream) ProtoMessage() {}

func (x *ProtoMaxDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMaxDownstream.ProtoReflect.Descriptor instead.
func (*ProtoMaxDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{19}
}

func (x *ProtoMaxDownstream) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type ProtoMinDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *int64 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *ProtoMinDownstream) Reset() {
	*x = ProtoMinDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMinDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMinDownstream) ProtoMessage() {}

func (x *ProtoMinDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMinDownstream.ProtoReflect.Descriptor instead.
func (*ProtoMinDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{20}
}

func (x *ProtoMinDownstream) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type ProtoValueUnique struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  []byte  `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
	Unique *uint64 `protobuf:"varint,2,req,name=unique" json:"unique,omitempty"`
}

func (x *ProtoValueUnique) Reset() {
	*x = ProtoValueUnique{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoValueUnique) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoValueUnique) ProtoMessage() {}

func (x *ProtoValueUnique) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoValueUnique.ProtoReflect.Descriptor instead.
func (*ProtoValueUnique) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{21}
}

func (x *ProtoValueUnique) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ProtoValueUnique) GetUnique() uint64 {
	if x != nil && x.Unique != nil {
		return *x.Unique
	}
	return 0
}

type ProtoValueUniques struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   []byte   `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
	Uniques []uint64 `protobuf:"varint,2,rep,name=uniques" json:"uniques,omitempty"`
}

func (x *ProtoValueUniques) Reset() {
	*x = ProtoValueUniques{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoValueUniques) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoValueUniques) ProtoMessage() {}

func (x *ProtoValueUniques) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoValueUniques.ProtoReflect.Descriptor instead.
func (*ProtoValueUniques) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{22}
}

func (x *ProtoValueUniques) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ProtoValueUniques) GetUniques() []uint64 {
	if x != nil {
		return x.Uniques
	}
	return nil
}

type ProtoKeyValueUnique struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     []byte  `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Element []byte  `protobuf:"bytes,2,req,name=element" json:"element,omitempty"`
	Unique  *uint64 `protobuf:"varint,3,req,name=unique" json:"unique,omitempty"`
}

func (x *ProtoKeyValueUnique) Reset() {
	*x = ProtoKeyValueUnique{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoKeyValueUnique) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoKeyValueUnique) ProtoMessage() {}

func (x *ProtoKeyValueUnique) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoKeyValueUnique.ProtoReflect.Descriptor instead.
func (*ProtoKeyValueUnique) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{23}
}

func (x *ProtoKeyValueUnique) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ProtoKeyValueUnique) GetElement() []byte {
	if x != nil {
		return x.Element
	}
	return nil
}

func (x *ProtoKeyValueUnique) GetUnique() uint64 {
	if x != nil && x.Unique != nil {
		return *x.Unique
	}
	return 0
}

type ProtoORMapRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte               `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Elems []*ProtoValueUniques `protobuf:"bytes,2,rep,name=elems" json:"elems,omitempty"`
}

func (x *ProtoORMapRemove) Reset() {
	*x = ProtoORMapRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoORMapRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoORMapRemove) ProtoMessage() {}

func (x *ProtoORMapRemove) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoORMapRemove.ProtoReflect.Descriptor instead.
func (*ProtoORMapRemove) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{24}
}

func (x *ProtoORMapRemove) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ProtoORMapRemove) GetElems() []*ProtoValueUniques {
	if x != nil {
		return x.Elems
	}
	return nil
}

type ProtoTopKElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Score     *int32 `protobuf:"varint,2,req,name=score" json:"score,omitempty"`
	Ts        *int64 `protobuf:"varint,3,req,name=ts" json:"ts,omitempty"`
	ReplicaID *int32 `protobuf:"varint,4,req,name=replicaID" json:"replicaID,omitempty"`
	Data      []byte `protobuf:"bytes,5,opt,name=data" json:"data,omitempty"`
}

func (x *ProtoTopKElement) Reset() {
	*x = ProtoTopKElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopKElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopKElement) ProtoMessage() {}

func (x *ProtoTopKElement) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopKElement.ProtoReflect.Descriptor instead.
func (*ProtoTopKElement) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{25}
}

func (x *ProtoTopKElement) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ProtoTopKElement) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *ProtoTopKElement) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

func (x *ProtoTopKElement) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *ProtoTopKElement) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProtoTopKScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Score *int32 `protobuf:"varint,2,req,name=score" json:"score,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (x *ProtoTopKScore) Reset() {
	*x = ProtoTopKScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopKScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopKScore) ProtoMessage() {}

func (x *ProtoTopKScore) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopKScore.ProtoReflect.Descriptor instead.
func (*ProtoTopKScore) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{26}
}

func (x *ProtoTopKScore) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ProtoTopKScore) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *ProtoTopKScore) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProtoTopKIdVc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Vc []byte `protobuf:"bytes,2,req,name=vc" json:"vc,omitempty"`
}

func (x *ProtoTopKIdVc) Reset() {
	*x = ProtoTopKIdVc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopKIdVc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopKIdVc) ProtoMessage() {}

func (x *ProtoTopKIdVc) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopKIdVc.ProtoReflect.Descriptor instead.
func (*ProtoTopKIdVc) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{27}
}

func (x *ProtoTopKIdVc) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ProtoTopKIdVc) GetVc() []byte {
	if x != nil {
		return x.Vc
	}
	return nil
}

type ProtoRWEmbMapDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adds *ProtoRWEmbMapUpdates `protobuf:"bytes,1,opt,name=adds" json:"adds,omitempty"`
	Rems *ProtoRWEmbMapRemoves `protobuf:"bytes,2,opt,name=rems" json:"rems,omitempty"`
}

func (x *ProtoRWEmbMapDownstream) Reset() {
	*x = ProtoRWEmbMapDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRWEmbMapDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRWEmbMapDownstream) ProtoMessage() {}

func (x *ProtoRWEmbMapDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRWEmbMapDownstream.ProtoReflect.Descriptor instead.
func (*ProtoRWEmbMapDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{28}
}

func (x *ProtoRWEmbMapDownstream) GetAdds() *ProtoRWEmbMapUpdates {
	if x != nil {
		return x.Adds
	}
	return nil
}

func (x *ProtoRWEmbMapDownstream) GetRems() *ProtoRWEmbMapRemoves {
	if x != nil {
		return x.Rems
	}
	return nil
}

type ProtoRWEmbMapUpdates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Upds      []*ProtoEmbMapUpd   `protobuf:"bytes,1,rep,name=upds" json:"upds,omitempty"`
	Vc        []*ProtoStableClock `protobuf:"bytes,2,rep,name=vc" json:"vc,omitempty"`
	ReplicaID *int32              `protobuf:"varint,3,req,name=replicaID" json:"replicaID,omitempty"`
	IsArray   *bool               `protobuf:"varint,4,opt,name=isArray" json:"isArray,omitempty"` //If not present, it's assumed to be false.
}

func (x *ProtoRWEmbMapUpdates) Reset() {
	*x = ProtoRWEmbMapUpdates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRWEmbMapUpdates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRWEmbMapUpdates) ProtoMessage() {}

func (x *ProtoRWEmbMapUpdates) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRWEmbMapUpdates.ProtoReflect.Descriptor instead.
func (*ProtoRWEmbMapUpdates) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{29}
}

func (x *ProtoRWEmbMapUpdates) GetUpds() []*ProtoEmbMapUpd {
	if x != nil {
		return x.Upds
	}
	return nil
}

func (x *ProtoRWEmbMapUpdates) GetVc() []*ProtoStableClock {
	if x != nil {
		return x.Vc
	}
	return nil
}

func (x *ProtoRWEmbMapUpdates) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *ProtoRWEmbMapUpdates) GetIsArray() bool {
	if x != nil && x.IsArray != nil {
		return *x.IsArray
	}
	return false
}

type ProtoRWEmbMapRemoves struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys      []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
	Ts        *int64   `protobuf:"varint,2,req,name=ts" json:"ts,omitempty"`
	ReplicaID *int32   `protobuf:"varint,3,req,name=replicaID" json:"replicaID,omitempty"`
}

func (x *ProtoRWEmbMapRemoves) Reset() {
	*x = ProtoRWEmbMapRemoves{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRWEmbMapRemoves) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRWEmbMapRemoves) ProtoMessage() {}

func (x *ProtoRWEmbMapRemoves) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRWEmbMapRemoves.ProtoReflect.Descriptor instead.
func (*ProtoRWEmbMapRemoves) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{30}
}

func (x *ProtoRWEmbMapRemoves) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ProtoRWEmbMapRemoves) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

func (x *ProtoRWEmbMapRemoves) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

type ProtoEmbMapUpd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  []byte             `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Type *CRDTType          `protobuf:"varint,2,req,name=type,enum=CRDTType" json:"type,omitempty"`
	Upd  *ProtoOpDownstream `protobuf:"bytes,3,req,name=upd" json:"upd,omitempty"`
}

func (x *ProtoEmbMapUpd) Reset() {
	*x = ProtoEmbMapUpd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoEmbMapUpd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoEmbMapUpd) ProtoMessage() {}

func (x *ProtoEmbMapUpd) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoEmbMapUpd.ProtoReflect.Descriptor instead.
func (*ProtoEmbMapUpd) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{31}
}

func (x *ProtoEmbMapUpd) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ProtoEmbMapUpd) GetType() CRDTType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return CRDTType_COUNTER
}

func (x *ProtoEmbMapUpd) GetUpd() *ProtoOpDownstream {
	if x != nil {
		return x.Upd
	}
	return nil
}

type ProtoTopSumElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Score *int32 `protobuf:"varint,2,req,name=score" json:"score,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (x *ProtoTopSumElement) Reset() {
	*x = ProtoTopSumElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopSumElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopSumElement) ProtoMessage() {}

func (x *ProtoTopSumElement) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopSumElement.ProtoReflect.Descriptor instead.
func (*ProtoTopSumElement) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{32}
}

func (x *ProtoTopSumElement) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ProtoTopSumElement) GetScore() int32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *ProtoTopSumElement) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProtoTopSumDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elems      []*ProtoTopSumElement `protobuf:"bytes,1,rep,name=elems" json:"elems,omitempty"`
	IsPositive *bool                 `protobuf:"varint,2,req,name=isPositive" json:"isPositive,omitempty"`
}

func (x *ProtoTopSumDownstream) Reset() {
	*x = ProtoTopSumDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopSumDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopSumDownstream) ProtoMessage() {}

func (x *ProtoTopSumDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopSumDownstream.ProtoReflect.Descriptor instead.
func (*ProtoTopSumDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{33}
}

func (x *ProtoTopSumDownstream) GetElems() []*ProtoTopSumElement {
	if x != nil {
		return x.Elems
	}
	return nil
}

func (x *ProtoTopSumDownstream) GetIsPositive() bool {
	if x != nil && x.IsPositive != nil {
		return *x.IsPositive
	}
	return false
}

type ProtoFlagDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableLWW  *ProtoEnableLWWDownstream  `protobuf:"bytes,1,opt,name=enableLWW" json:"enableLWW,omitempty"`
	DisableLWW *ProtoDisableLWWDownstream `protobuf:"bytes,2,opt,name=disableLWW" json:"disableLWW,omitempty"`
	EnableEW   *ProtoEnableEWDownstream   `protobuf:"bytes,3,opt,name=enableEW" json:"enableEW,omitempty"`
	DisableEW  *ProtoDisableEWDownstream  `protobuf:"bytes,4,opt,name=disableEW" json:"disableEW,omitempty"`
	EnableDW   *ProtoEnableDWDownstream   `protobuf:"bytes,5,opt,name=enableDW" json:"enableDW,omitempty"`
	DisableDW  *ProtoDisableDWDownstream  `protobuf:"bytes,6,opt,name=disableDW" json:"disableDW,omitempty"`
}

func (x *ProtoFlagDownstream) Reset() {
	*x = ProtoFlagDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoFlagDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFlagDownstream) ProtoMessage() {}

func (x *ProtoFlagDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFlagDownstream.ProtoReflect.Descriptor instead.
func (*ProtoFlagDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{34}
}

func (x *ProtoFlagDownstream) GetEnableLWW() *ProtoEnableLWWDownstream {
	if x != nil {
		return x.EnableLWW
	}
	return nil
}

func (x *ProtoFlagDownstream) GetDisableLWW() *ProtoDisableLWWDownstream {
	if x != nil {
		return x.DisableLWW
	}
	return nil
}

func (x *ProtoFlagDownstream) GetEnableEW() *ProtoEnableEWDownstream {
	if x != nil {
		return x.EnableEW
	}
	return nil
}

func (x *ProtoFlagDownstream) GetDisableEW() *ProtoDisableEWDownstream {
	if x != nil {
		return x.DisableEW
	}
	return nil
}

func (x *ProtoFlagDownstream) GetEnableDW() *ProtoEnableDWDownstream {
	if x != nil {
		return x.EnableDW
	}
	return nil
}

func (x *ProtoFlagDownstream) GetDisableDW() *ProtoDisableDWDownstream {
	if x != nil {
		return x.DisableDW
	}
	return nil
}

type ProtoEnableLWWDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts        *int64 `protobuf:"varint,1,req,name=ts" json:"ts,omitempty"`
	ReplicaID *int32 `protobuf:"varint,2,req,name=replicaID" json:"replicaID,omitempty"`
}

func (x *ProtoEnableLWWDownstream) Reset() {
	*x = ProtoEnableLWWDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoEnableLWWDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoEnableLWWDownstream) ProtoMessage() {}

func (x *ProtoEnableLWWDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoEnableLWWDownstream.ProtoReflect.Descriptor instead.
func (*ProtoEnableLWWDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{35}
}

func (x *ProtoEnableLWWDownstream) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

func (x *ProtoEnableLWWDownstream) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

type ProtoDisableLWWDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts        *int64 `protobuf:"varint,1,req,name=ts" json:"ts,omitempty"`
	ReplicaID *int32 `protobuf:"varint,2,req,name=replicaID" json:"replicaID,omitempty"`
}

func (x *ProtoDisableLWWDownstream) Reset() {
	*x = ProtoDisableLWWDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDisableLWWDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDisableLWWDownstream) ProtoMessage() {}

func (x *ProtoDisableLWWDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDisableLWWDownstream.ProtoReflect.Descriptor instead.
func (*ProtoDisableLWWDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{36}
}

func (x *ProtoDisableLWWDownstream) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

func (x *ProtoDisableLWWDownstream) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

type ProtoEnableEWDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unique *uint64 `protobuf:"varint,1,req,name=unique" json:"unique,omitempty"`
}

func (x *ProtoEnableEWDownstream) Reset() {
	*x = ProtoEnableEWDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoEnableEWDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoEnableEWDownstream) ProtoMessage() {}

func (x *ProtoEnableEWDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoEnableEWDownstream.ProtoReflect.Descriptor instead.
func (*ProtoEnableEWDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{37}
}

func (x *ProtoEnableEWDownstream) GetUnique() uint64 {
	if x != nil && x.Unique != nil {
		return *x.Unique
	}
	return 0
}

type ProtoDisableEWDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeenUniques []uint64 `protobuf:"varint,1,rep,name=seenUniques" json:"seenUniques,omitempty"`
}

func (x *ProtoDisableEWDownstream) Reset() {
	*x = ProtoDisableEWDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDisableEWDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDisableEWDownstream) ProtoMessage() {}

func (x *ProtoDisableEWDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDisableEWDownstream.ProtoReflect.Descriptor instead.
func (*ProtoDisableEWDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{38}
}

func (x *ProtoDisableEWDownstream) GetSeenUniques() []uint64 {
	if x != nil {
		return x.SeenUniques
	}
	return nil
}

type ProtoEnableDWDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeenUniques []uint64 `protobuf:"varint,1,rep,name=seenUniques" json:"seenUniques,omitempty"`
}

func (x *ProtoEnableDWDownstream) Reset() {
	*x = ProtoEnableDWDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoEnableDWDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoEnableDWDownstream) ProtoMessage() {}

func (x *ProtoEnableDWDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoEnableDWDownstream.ProtoReflect.Descriptor instead.
func (*ProtoEnableDWDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{39}
}

func (x *ProtoEnableDWDownstream) GetSeenUniques() []uint64 {
	if x != nil {
		return x.SeenUniques
	}
	return nil
}

type ProtoDisableDWDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unique *uint64 `protobuf:"varint,1,req,name=unique" json:"unique,omitempty"`
}

func (x *ProtoDisableDWDownstream) Reset() {
	*x = ProtoDisableDWDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDisableDWDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDisableDWDownstream) ProtoMessage() {}

func (x *ProtoDisableDWDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDisableDWDownstream.ProtoReflect.Descriptor instead.
func (*ProtoDisableDWDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{40}
}

func (x *ProtoDisableDWDownstream) GetUnique() uint64 {
	if x != nil && x.Unique != nil {
		return *x.Unique
	}
	return 0
}

type ProtoBCounterDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SetBounds *ProtoSetBoundCounterDownstream `protobuf:"bytes,1,opt,name=setBounds" json:"setBounds,omitempty"`
	Transfer  *ProtoTransferCounterDownstream `protobuf:"bytes,2,opt,name=transfer" json:"transfer,omitempty"`
	Inc       *ProtoIncBCounterDownstream     `protobuf:"bytes,3,opt,name=inc" json:"inc,omitempty"`
	Dec       *ProtoDecBCounterDownstream     `protobuf:"bytes,4,opt,name=dec" json:"dec,omitempty"`
}

func (x *ProtoBCounterDownstream) Reset() {
	*x = ProtoBCounterDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBCounterDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBCounterDownstream) ProtoMessage() {}

func (x *ProtoBCounterDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBCounterDownstream.ProtoReflect.Descriptor instead.
func (*ProtoBCounterDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{41}
}

func (x *ProtoBCounterDownstream) GetSetBounds() *ProtoSetBoundCounterDownstream {
	if x != nil {
		return x.SetBounds
	}
	return nil
}

func (x *ProtoBCounterDownstream) GetTransfer() *ProtoTransferCounterDownstream {
	if x != nil {
		return x.Transfer
	}
	return nil
}

func (x *ProtoBCounterDownstream) GetInc() *ProtoIncBCounterDownstream {
	if x != nil {
		return x.Inc
	}
	return nil
}

func (x *ProtoBCounterDownstream) GetDec() *ProtoDecBCounterDownstream {
	if x != nil {
		return x.Dec
	}
	return nil
}

type ProtoSetBoundCounterDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  *int32 `protobuf:"varint,1,req,name=limit" json:"limit,omitempty"`
	CompEq *bool  `protobuf:"varint,2,req,name=compEq" json:"compEq,omitempty"`
	Value  *int32 `protobuf:"varint,3,req,name=value" json:"value,omitempty"`
}

func (x *ProtoSetBoundCounterDownstream) Reset() {
	*x = ProtoSetBoundCounterDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoSetBoundCounterDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoSetBoundCounterDownstream) ProtoMessage() {}

func (x *ProtoSetBoundCounterDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoSetBoundCounterDownstream.ProtoReflect.Descriptor instead.
func (*ProtoSetBoundCounterDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{42}
}

func (x *ProtoSetBoundCounterDownstream) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ProtoSetBoundCounterDownstream) GetCompEq() bool {
	if x != nil && x.CompEq != nil {
		return *x.CompEq
	}
	return false
}

func (x *ProtoSetBoundCounterDownstream) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type ProtoTransferCounterDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferValue *int32 `protobuf:"varint,1,req,name=transferValue" json:"transferValue,omitempty"`
	FromID        *int32 `protobuf:"varint,2,req,name=fromID" json:"fromID,omitempty"`
	ToID          *int32 `protobuf:"varint,3,req,name=toID" json:"toID,omitempty"`
}

func (x *ProtoTransferCounterDownstream) Reset() {
	*x = ProtoTransferCounterDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTransferCounterDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTransferCounterDownstream) ProtoMessage() {}

func (x *ProtoTransferCounterDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTransferCounterDownstream.ProtoReflect.Descriptor instead.
func (*ProtoTransferCounterDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{43}
}

func (x *ProtoTransferCounterDownstream) GetTransferValue() int32 {
	if x != nil && x.TransferValue != nil {
		return *x.TransferValue
	}
	return 0
}

func (x *ProtoTransferCounterDownstream) GetFromID() int32 {
	if x != nil && x.FromID != nil {
		return *x.FromID
	}
	return 0
}

func (x *ProtoTransferCounterDownstream) GetToID() int32 {
	if x != nil && x.ToID != nil {
		return *x.ToID
	}
	return 0
}

type ProtoIncBCounterDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Change    *int32 `protobuf:"varint,1,req,name=change" json:"change,omitempty"`
	ReplicaID *int32 `protobuf:"varint,2,req,name=replicaID" json:"replicaID,omitempty"`
}

func (x *ProtoIncBCounterDownstream) Reset() {
	*x = ProtoIncBCounterDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoIncBCounterDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoIncBCounterDownstream) ProtoMessage() {}

func (x *ProtoIncBCounterDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoIncBCounterDownstream.ProtoReflect.Descriptor instead.
func (*ProtoIncBCounterDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{44}
}

func (x *ProtoIncBCounterDownstream) GetChange() int32 {
	if x != nil && x.Change != nil {
		return *x.Change
	}
	return 0
}

func (x *ProtoIncBCounterDownstream) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

type ProtoDecBCounterDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Change    *int32 `protobuf:"varint,1,req,name=change" json:"change,omitempty"`
	ReplicaID *int32 `protobuf:"varint,2,req,name=replicaID" json:"replicaID,omitempty"`
}

func (x *ProtoDecBCounterDownstream) Reset() {
	*x = ProtoDecBCounterDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDecBCounterDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDecBCounterDownstream) ProtoMessage() {}

func (x *ProtoDecBCounterDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDecBCounterDownstream.ProtoReflect.Descriptor instead.
func (*ProtoDecBCounterDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{45}
}

func (x *ProtoDecBCounterDownstream) GetChange() int32 {
	if x != nil && x.Change != nil {
		return *x.Change
	}
	return 0
}

func (x *ProtoDecBCounterDownstream) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

type ProtoResetDownstream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProtoResetDownstream) Reset() {
	*x = ProtoResetDownstream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoResetDownstream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoResetDownstream) ProtoMessage() {}

func (x *ProtoResetDownstream) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoResetDownstream.ProtoReflect.Descriptor instead.
func (*ProtoResetDownstream) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{46}
}

type ProtoRemoteID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID *int32   `protobuf:"varint,1,req,name=replicaID" json:"replicaID,omitempty"`
	MyBuckets []string `protobuf:"bytes,2,rep,name=myBuckets" json:"myBuckets,omitempty"`
	MyIP      *string  `protobuf:"bytes,3,req,name=myIP" json:"myIP,omitempty"`
}

func (x *ProtoRemoteID) Reset() {
	*x = ProtoRemoteID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRemoteID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRemoteID) ProtoMessage() {}

func (x *ProtoRemoteID) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRemoteID.ProtoReflect.Descriptor instead.
func (*ProtoRemoteID) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{47}
}

func (x *ProtoRemoteID) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *ProtoRemoteID) GetMyBuckets() []string {
	if x != nil {
		return x.MyBuckets
	}
	return nil
}

func (x *ProtoRemoteID) GetMyIP() string {
	if x != nil && x.MyIP != nil {
		return *x.MyIP
	}
	return ""
}

type ProtoJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets   []string `protobuf:"bytes,1,rep,name=buckets" json:"buckets,omitempty"`
	ReplicaID *int32   `protobuf:"varint,2,req,name=replicaID" json:"replicaID,omitempty"`
	ReplicaIP *string  `protobuf:"bytes,3,req,name=replicaIP" json:"replicaIP,omitempty"` //required int32 connID = 4;  //ConnID in the sender side for this replica. This information is needed later for requesting buckets.
}

func (x *ProtoJoin) Reset() {
	*x = ProtoJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoJoin) ProtoMessage() {}

func (x *ProtoJoin) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoJoin.ProtoReflect.Descriptor instead.
func (*ProtoJoin) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{48}
}

func (x *ProtoJoin) GetBuckets() []string {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *ProtoJoin) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *ProtoJoin) GetReplicaIP() string {
	if x != nil && x.ReplicaIP != nil {
		return *x.ReplicaIP
	}
	return ""
}

type ProtoReplyJoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []string `protobuf:"bytes,1,rep,name=buckets" json:"buckets,omitempty"`
	// repeated ProtoClock partsClk = 2;
	PartsClk  [][]byte `protobuf:"bytes,2,rep,name=partsClk" json:"partsClk,omitempty"`
	ReplicaID *int32   `protobuf:"varint,3,req,name=replicaID" json:"replicaID,omitempty"`
	// required int32 connID = 4;  //Used to know which connection to request the buckets from.
	ReplicaIP *string `protobuf:"bytes,4,req,name=replicaIP" json:"replicaIP,omitempty"` //Used to know which connection to request the buckets from.
}

func (x *ProtoReplyJoin) Reset() {
	*x = ProtoReplyJoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoReplyJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoReplyJoin) ProtoMessage() {}

func (x *ProtoReplyJoin) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoReplyJoin.ProtoReflect.Descriptor instead.
func (*ProtoReplyJoin) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{49}
}

func (x *ProtoReplyJoin) GetBuckets() []string {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *ProtoReplyJoin) GetPartsClk() [][]byte {
	if x != nil {
		return x.PartsClk
	}
	return nil
}

func (x *ProtoReplyJoin) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *ProtoReplyJoin) GetReplicaIP() string {
	if x != nil && x.ReplicaIP != nil {
		return *x.ReplicaIP
	}
	return ""
}

type ProtoRequestBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buckets []string `protobuf:"bytes,1,rep,name=buckets" json:"buckets,omitempty"`
	// repeated ProtoClock partsClk = 2;
	// repeated bytes partsClk = 2;
	ReplicaID *int32  `protobuf:"varint,2,req,name=replicaID" json:"replicaID,omitempty"`
	ReplicaIP *string `protobuf:"bytes,3,req,name=replicaIP" json:"replicaIP,omitempty"` //Used to know which connection to send the buckets to
}

func (x *ProtoRequestBucket) Reset() {
	*x = ProtoRequestBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRequestBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRequestBucket) ProtoMessage() {}

func (x *ProtoRequestBucket) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRequestBucket.ProtoReflect.Descriptor instead.
func (*ProtoRequestBucket) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{50}
}

func (x *ProtoRequestBucket) GetBuckets() []string {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *ProtoRequestBucket) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *ProtoRequestBucket) GetReplicaIP() string {
	if x != nil && x.ReplicaIP != nil {
		return *x.ReplicaIP
	}
	return ""
}

// This contains CRDTs for all the buckets requested, not just one bucket.
type ProtoReplyBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID *int32            `protobuf:"varint,1,req,name=replicaID" json:"replicaID,omitempty"`
	Clk       []byte            `protobuf:"bytes,2,req,name=clk" json:"clk,omitempty"`
	Parts     []*ProtoPartition `protobuf:"bytes,3,rep,name=parts" json:"parts,omitempty"`
}

func (x *ProtoReplyBucket) Reset() {
	*x = ProtoReplyBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoReplyBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoReplyBucket) ProtoMessage() {}

func (x *ProtoReplyBucket) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoReplyBucket.ProtoReflect.Descriptor instead.
func (*ProtoReplyBucket) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{51}
}

func (x *ProtoReplyBucket) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *ProtoReplyBucket) GetClk() []byte {
	if x != nil {
		return x.Clk
	}
	return nil
}

func (x *ProtoReplyBucket) GetParts() []*ProtoPartition {
	if x != nil {
		return x.Parts
	}
	return nil
}

type ProtoPartition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	States []*ProtoCRDT `protobuf:"bytes,1,rep,name=states" json:"states,omitempty"`
}

func (x *ProtoPartition) Reset() {
	*x = ProtoPartition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPartition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPartition) ProtoMessage() {}

func (x *ProtoPartition) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPartition.ProtoReflect.Descriptor instead.
func (*ProtoPartition) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{52}
}

func (x *ProtoPartition) GetStates() []*ProtoCRDT {
	if x != nil {
		return x.States
	}
	return nil
}

type ProtoCRDT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyHash *uint64     `protobuf:"varint,1,req,name=keyHash" json:"keyHash,omitempty"`
	Type    *CRDTType   `protobuf:"varint,2,req,name=type,enum=CRDTType" json:"type,omitempty"`
	State   *ProtoState `protobuf:"bytes,3,req,name=state" json:"state,omitempty"`
}

func (x *ProtoCRDT) Reset() {
	*x = ProtoCRDT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCRDT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCRDT) ProtoMessage() {}

func (x *ProtoCRDT) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCRDT.ProtoReflect.Descriptor instead.
func (*ProtoCRDT) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{53}
}

func (x *ProtoCRDT) GetKeyHash() uint64 {
	if x != nil && x.KeyHash != nil {
		return *x.KeyHash
	}
	return 0
}

func (x *ProtoCRDT) GetType() CRDTType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return CRDTType_COUNTER
}

func (x *ProtoCRDT) GetState() *ProtoState {
	if x != nil {
		return x.State
	}
	return nil
}

// TODO: Clock for genericInversibleCRDT initialization? And replicaID.
type ProtoState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Counter      *ProtoCounterState        `protobuf:"bytes,1,opt,name=counter" json:"counter,omitempty"`
	Lwwreg       *ProtoLWWRegState         `protobuf:"bytes,2,opt,name=lwwreg" json:"lwwreg,omitempty"`
	Awset        *ProtoAWSetState          `protobuf:"bytes,3,opt,name=awset" json:"awset,omitempty"`
	Ormap        *ProtoORMapState          `protobuf:"bytes,4,opt,name=ormap" json:"ormap,omitempty"`
	Embmap       *ProtoEmbMapState         `protobuf:"bytes,5,opt,name=embmap" json:"embmap,omitempty"`
	Maxmin       *ProtoMaxMinState         `protobuf:"bytes,6,opt,name=maxmin" json:"maxmin,omitempty"`
	Topkrmv      *ProtoTopKRmvState        `protobuf:"bytes,7,opt,name=topkrmv" json:"topkrmv,omitempty"`
	Avg          *ProtoAvgState            `protobuf:"bytes,8,opt,name=avg" json:"avg,omitempty"`
	Topsum       *ProtoTopSumState         `protobuf:"bytes,9,opt,name=topsum" json:"topsum,omitempty"`
	Flag         *ProtoFlagState           `protobuf:"bytes,10,opt,name=flag" json:"flag,omitempty"`
	Bcounter     *ProtoBoundedCounterState `protobuf:"bytes,11,opt,name=bcounter" json:"bcounter,omitempty"`
	Topk         *ProtoTopKState           `protobuf:"bytes,12,opt,name=topk" json:"topk,omitempty"`
	Counterfloat *ProtoCounterFloatState   `protobuf:"bytes,13,opt,name=counterfloat" json:"counterfloat,omitempty"`
}

func (x *ProtoState) Reset() {
	*x = ProtoState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoState) ProtoMessage() {}

func (x *ProtoState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoState.ProtoReflect.Descriptor instead.
func (*ProtoState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{54}
}

func (x *ProtoState) GetCounter() *ProtoCounterState {
	if x != nil {
		return x.Counter
	}
	return nil
}

func (x *ProtoState) GetLwwreg() *ProtoLWWRegState {
	if x != nil {
		return x.Lwwreg
	}
	return nil
}

func (x *ProtoState) GetAwset() *ProtoAWSetState {
	if x != nil {
		return x.Awset
	}
	return nil
}

func (x *ProtoState) GetOrmap() *ProtoORMapState {
	if x != nil {
		return x.Ormap
	}
	return nil
}

func (x *ProtoState) GetEmbmap() *ProtoEmbMapState {
	if x != nil {
		return x.Embmap
	}
	return nil
}

func (x *ProtoState) GetMaxmin() *ProtoMaxMinState {
	if x != nil {
		return x.Maxmin
	}
	return nil
}

func (x *ProtoState) GetTopkrmv() *ProtoTopKRmvState {
	if x != nil {
		return x.Topkrmv
	}
	return nil
}

func (x *ProtoState) GetAvg() *ProtoAvgState {
	if x != nil {
		return x.Avg
	}
	return nil
}

func (x *ProtoState) GetTopsum() *ProtoTopSumState {
	if x != nil {
		return x.Topsum
	}
	return nil
}

func (x *ProtoState) GetFlag() *ProtoFlagState {
	if x != nil {
		return x.Flag
	}
	return nil
}

func (x *ProtoState) GetBcounter() *ProtoBoundedCounterState {
	if x != nil {
		return x.Bcounter
	}
	return nil
}

func (x *ProtoState) GetTopk() *ProtoTopKState {
	if x != nil {
		return x.Topk
	}
	return nil
}

func (x *ProtoState) GetCounterfloat() *ProtoCounterFloatState {
	if x != nil {
		return x.Counterfloat
	}
	return nil
}

type ProtoReplyEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProtoReplyEmpty) Reset() {
	*x = ProtoReplyEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoReplyEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoReplyEmpty) ProtoMessage() {}

func (x *ProtoReplyEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoReplyEmpty.ProtoReflect.Descriptor instead.
func (*ProtoReplyEmpty) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{55}
}

// *****STATES*****
type ProtoCounterState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *int32 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *ProtoCounterState) Reset() {
	*x = ProtoCounterState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCounterState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCounterState) ProtoMessage() {}

func (x *ProtoCounterState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCounterState.ProtoReflect.Descriptor instead.
func (*ProtoCounterState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{56}
}

func (x *ProtoCounterState) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type ProtoCounterFloatState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *float64 `protobuf:"fixed64,1,req,name=value" json:"value,omitempty"`
}

func (x *ProtoCounterFloatState) Reset() {
	*x = ProtoCounterFloatState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCounterFloatState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCounterFloatState) ProtoMessage() {}

func (x *ProtoCounterFloatState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCounterFloatState.ProtoReflect.Descriptor instead.
func (*ProtoCounterFloatState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{57}
}

func (x *ProtoCounterFloatState) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type ProtoLWWRegState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     []byte `protobuf:"bytes,1,req,name=value" json:"value,omitempty"`
	Ts        *int64 `protobuf:"varint,2,req,name=ts" json:"ts,omitempty"`
	ReplicaID *int32 `protobuf:"varint,3,req,name=replicaID" json:"replicaID,omitempty"`
}

func (x *ProtoLWWRegState) Reset() {
	*x = ProtoLWWRegState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoLWWRegState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoLWWRegState) ProtoMessage() {}

func (x *ProtoLWWRegState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoLWWRegState.ProtoReflect.Descriptor instead.
func (*ProtoLWWRegState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{58}
}

func (x *ProtoLWWRegState) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ProtoLWWRegState) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

func (x *ProtoLWWRegState) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

type ProtoAWSetState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elems []*ProtoValueUniques `protobuf:"bytes,1,rep,name=elems" json:"elems,omitempty"`
}

func (x *ProtoAWSetState) Reset() {
	*x = ProtoAWSetState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAWSetState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAWSetState) ProtoMessage() {}

func (x *ProtoAWSetState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAWSetState.ProtoReflect.Descriptor instead.
func (*ProtoAWSetState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{59}
}

func (x *ProtoAWSetState) GetElems() []*ProtoValueUniques {
	if x != nil {
		return x.Elems
	}
	return nil
}

type ProtoORMapState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*ProtoORMapRemove `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
}

func (x *ProtoORMapState) Reset() {
	*x = ProtoORMapState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoORMapState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoORMapState) ProtoMessage() {}

func (x *ProtoORMapState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoORMapState.ProtoReflect.Descriptor instead.
func (*ProtoORMapState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{60}
}

func (x *ProtoORMapState) GetEntries() []*ProtoORMapRemove {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ProtoEmbMapState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Crdts   []*ProtoEmbMapEntry  `protobuf:"bytes,1,rep,name=crdts" json:"crdts,omitempty"`
	Removes []*ProtoEmbMapRemove `protobuf:"bytes,2,rep,name=removes" json:"removes,omitempty"`
	// required ProtoClock rmvClock = 3;
	RmvClock []byte `protobuf:"bytes,3,req,name=rmvClock" json:"rmvClock,omitempty"`
}

func (x *ProtoEmbMapState) Reset() {
	*x = ProtoEmbMapState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoEmbMapState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoEmbMapState) ProtoMessage() {}

func (x *ProtoEmbMapState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoEmbMapState.ProtoReflect.Descriptor instead.
func (*ProtoEmbMapState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{61}
}

func (x *ProtoEmbMapState) GetCrdts() []*ProtoEmbMapEntry {
	if x != nil {
		return x.Crdts
	}
	return nil
}

func (x *ProtoEmbMapState) GetRemoves() []*ProtoEmbMapRemove {
	if x != nil {
		return x.Removes
	}
	return nil
}

func (x *ProtoEmbMapState) GetRmvClock() []byte {
	if x != nil {
		return x.RmvClock
	}
	return nil
}

type ProtoEmbMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string     `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Type  *CRDTType   `protobuf:"varint,2,req,name=type,enum=CRDTType" json:"type,omitempty"`
	State *ProtoState `protobuf:"bytes,3,req,name=state" json:"state,omitempty"`
}

func (x *ProtoEmbMapEntry) Reset() {
	*x = ProtoEmbMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoEmbMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoEmbMapEntry) ProtoMessage() {}

func (x *ProtoEmbMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoEmbMapEntry.ProtoReflect.Descriptor instead.
func (*ProtoEmbMapEntry) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{62}
}

func (x *ProtoEmbMapEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *ProtoEmbMapEntry) GetType() CRDTType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return CRDTType_COUNTER
}

func (x *ProtoEmbMapEntry) GetState() *ProtoState {
	if x != nil {
		return x.State
	}
	return nil
}

type ProtoEmbMapRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	// TODO: Marks?
	Clks []*ProtoStableClock `protobuf:"bytes,2,rep,name=clks" json:"clks,omitempty"`
}

func (x *ProtoEmbMapRemove) Reset() {
	*x = ProtoEmbMapRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoEmbMapRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoEmbMapRemove) ProtoMessage() {}

func (x *ProtoEmbMapRemove) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoEmbMapRemove.ProtoReflect.Descriptor instead.
func (*ProtoEmbMapRemove) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{63}
}

func (x *ProtoEmbMapRemove) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *ProtoEmbMapRemove) GetClks() []*ProtoStableClock {
	if x != nil {
		return x.Clks
	}
	return nil
}

type ProtoMaxMinState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *int64 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
}

func (x *ProtoMaxMinState) Reset() {
	*x = ProtoMaxMinState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMaxMinState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMaxMinState) ProtoMessage() {}

func (x *ProtoMaxMinState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMaxMinState.ProtoReflect.Descriptor instead.
func (*ProtoMaxMinState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{64}
}

func (x *ProtoMaxMinState) GetValue() int64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type ProtoAvgState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sum   *int64 `protobuf:"varint,1,req,name=sum" json:"sum,omitempty"`
	NAdds *int64 `protobuf:"varint,2,req,name=nAdds" json:"nAdds,omitempty"`
}

func (x *ProtoAvgState) Reset() {
	*x = ProtoAvgState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAvgState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAvgState) ProtoMessage() {}

func (x *ProtoAvgState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAvgState.ProtoReflect.Descriptor instead.
func (*ProtoAvgState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{65}
}

func (x *ProtoAvgState) GetSum() int64 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

func (x *ProtoAvgState) GetNAdds() int64 {
	if x != nil && x.NAdds != nil {
		return *x.NAdds
	}
	return 0
}

// TODO: This one could be changed to just include the list of elements and maxElems,
// and then have everything else be calculated on the moment.
type ProtoTopKRmvState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elems []*ProtoTopKElement `protobuf:"bytes,1,rep,name=elems" json:"elems,omitempty"`
	Rems  []*ProtoTopKIdVc    `protobuf:"bytes,2,rep,name=rems" json:"rems,omitempty"`
	// notTop maybe deserves its own msg? Since the key will be repeated.
	NotTop   []*ProtoTopKElement `protobuf:"bytes,3,rep,name=notTop" json:"notTop,omitempty"`
	Smallest *ProtoTopKElement   `protobuf:"bytes,4,opt,name=smallest" json:"smallest,omitempty"`
	MaxElems *int32              `protobuf:"varint,5,req,name=maxElems" json:"maxElems,omitempty"`
	Vc       []byte              `protobuf:"bytes,6,req,name=vc" json:"vc,omitempty"`
}

func (x *ProtoTopKRmvState) Reset() {
	*x = ProtoTopKRmvState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopKRmvState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopKRmvState) ProtoMessage() {}

func (x *ProtoTopKRmvState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopKRmvState.ProtoReflect.Descriptor instead.
func (*ProtoTopKRmvState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{66}
}

func (x *ProtoTopKRmvState) GetElems() []*ProtoTopKElement {
	if x != nil {
		return x.Elems
	}
	return nil
}

func (x *ProtoTopKRmvState) GetRems() []*ProtoTopKIdVc {
	if x != nil {
		return x.Rems
	}
	return nil
}

func (x *ProtoTopKRmvState) GetNotTop() []*ProtoTopKElement {
	if x != nil {
		return x.NotTop
	}
	return nil
}

func (x *ProtoTopKRmvState) GetSmallest() *ProtoTopKElement {
	if x != nil {
		return x.Smallest
	}
	return nil
}

func (x *ProtoTopKRmvState) GetMaxElems() int32 {
	if x != nil && x.MaxElems != nil {
		return *x.MaxElems
	}
	return 0
}

func (x *ProtoTopKRmvState) GetVc() []byte {
	if x != nil {
		return x.Vc
	}
	return nil
}

// TODO: Same improvement as in TopKState.
type ProtoTopSumState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elems []*ProtoTopSumElement `protobuf:"bytes,1,rep,name=elems" json:"elems,omitempty"`
	// note: this actually corresponds to notInTop - notPropagated (value-wise)
	NotTop   []*ProtoTopSumElement `protobuf:"bytes,2,rep,name=notTop" json:"notTop,omitempty"`
	Smallest *ProtoTopSumElement   `protobuf:"bytes,3,opt,name=smallest" json:"smallest,omitempty"`
	MaxElems *int32                `protobuf:"varint,4,req,name=maxElems" json:"maxElems,omitempty"` //Note: notPropagated isn't included.
}

func (x *ProtoTopSumState) Reset() {
	*x = ProtoTopSumState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopSumState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopSumState) ProtoMessage() {}

func (x *ProtoTopSumState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopSumState.ProtoReflect.Descriptor instead.
func (*ProtoTopSumState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{67}
}

func (x *ProtoTopSumState) GetElems() []*ProtoTopSumElement {
	if x != nil {
		return x.Elems
	}
	return nil
}

func (x *ProtoTopSumState) GetNotTop() []*ProtoTopSumElement {
	if x != nil {
		return x.NotTop
	}
	return nil
}

func (x *ProtoTopSumState) GetSmallest() *ProtoTopSumElement {
	if x != nil {
		return x.Smallest
	}
	return nil
}

func (x *ProtoTopSumState) GetMaxElems() int32 {
	if x != nil && x.MaxElems != nil {
		return *x.MaxElems
	}
	return 0
}

type ProtoTopKState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Elems           []*ProtoTopKScore `protobuf:"bytes,1,rep,name=elems" json:"elems,omitempty"`
	Smallest        *ProtoTopKScore   `protobuf:"bytes,2,opt,name=smallest" json:"smallest,omitempty"`
	MaxElems        *int32            `protobuf:"varint,3,req,name=maxElems" json:"maxElems,omitempty"`
	KeepTiedEntries *bool             `protobuf:"varint,4,req,name=keepTiedEntries" json:"keepTiedEntries,omitempty"`
	Tied            []*ProtoTopKScore `protobuf:"bytes,5,rep,name=tied" json:"tied,omitempty"`
}

func (x *ProtoTopKState) Reset() {
	*x = ProtoTopKState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTopKState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTopKState) ProtoMessage() {}

func (x *ProtoTopKState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTopKState.ProtoReflect.Descriptor instead.
func (*ProtoTopKState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{68}
}

func (x *ProtoTopKState) GetElems() []*ProtoTopKScore {
	if x != nil {
		return x.Elems
	}
	return nil
}

func (x *ProtoTopKState) GetSmallest() *ProtoTopKScore {
	if x != nil {
		return x.Smallest
	}
	return nil
}

func (x *ProtoTopKState) GetMaxElems() int32 {
	if x != nil && x.MaxElems != nil {
		return *x.MaxElems
	}
	return 0
}

func (x *ProtoTopKState) GetKeepTiedEntries() bool {
	if x != nil && x.KeepTiedEntries != nil {
		return *x.KeepTiedEntries
	}
	return false
}

func (x *ProtoTopKState) GetTied() []*ProtoTopKScore {
	if x != nil {
		return x.Tied
	}
	return nil
}

type ProtoFlagState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lww *ProtoFlagLWWState `protobuf:"bytes,1,opt,name=lww" json:"lww,omitempty"`
	Ew  *ProtoFlagEWState  `protobuf:"bytes,2,opt,name=ew" json:"ew,omitempty"`
	Dw  *ProtoFlagDWState  `protobuf:"bytes,3,opt,name=dw" json:"dw,omitempty"`
}

func (x *ProtoFlagState) Reset() {
	*x = ProtoFlagState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoFlagState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFlagState) ProtoMessage() {}

func (x *ProtoFlagState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFlagState.ProtoReflect.Descriptor instead.
func (*ProtoFlagState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{69}
}

func (x *ProtoFlagState) GetLww() *ProtoFlagLWWState {
	if x != nil {
		return x.Lww
	}
	return nil
}

func (x *ProtoFlagState) GetEw() *ProtoFlagEWState {
	if x != nil {
		return x.Ew
	}
	return nil
}

func (x *ProtoFlagState) GetDw() *ProtoFlagDWState {
	if x != nil {
		return x.Dw
	}
	return nil
}

type ProtoFlagLWWState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag      *bool  `protobuf:"varint,1,req,name=flag" json:"flag,omitempty"`
	Ts        *int64 `protobuf:"varint,2,req,name=ts" json:"ts,omitempty"`
	ReplicaID *int32 `protobuf:"varint,3,req,name=replicaID" json:"replicaID,omitempty"`
}

func (x *ProtoFlagLWWState) Reset() {
	*x = ProtoFlagLWWState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoFlagLWWState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFlagLWWState) ProtoMessage() {}

func (x *ProtoFlagLWWState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFlagLWWState.ProtoReflect.Descriptor instead.
func (*ProtoFlagLWWState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{70}
}

func (x *ProtoFlagLWWState) GetFlag() bool {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return false
}

func (x *ProtoFlagLWWState) GetTs() int64 {
	if x != nil && x.Ts != nil {
		return *x.Ts
	}
	return 0
}

func (x *ProtoFlagLWWState) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

type ProtoFlagEWState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uniques []uint64 `protobuf:"varint,1,rep,name=uniques" json:"uniques,omitempty"`
}

func (x *ProtoFlagEWState) Reset() {
	*x = ProtoFlagEWState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoFlagEWState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFlagEWState) ProtoMessage() {}

func (x *ProtoFlagEWState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFlagEWState.ProtoReflect.Descriptor instead.
func (*ProtoFlagEWState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{71}
}

func (x *ProtoFlagEWState) GetUniques() []uint64 {
	if x != nil {
		return x.Uniques
	}
	return nil
}

type ProtoFlagDWState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uniques []uint64 `protobuf:"varint,1,rep,name=uniques" json:"uniques,omitempty"`
}

func (x *ProtoFlagDWState) Reset() {
	*x = ProtoFlagDWState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoFlagDWState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFlagDWState) ProtoMessage() {}

func (x *ProtoFlagDWState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFlagDWState.ProtoReflect.Descriptor instead.
func (*ProtoFlagDWState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{72}
}

func (x *ProtoFlagDWState) GetUniques() []uint64 {
	if x != nil {
		return x.Uniques
	}
	return nil
}

type ProtoBoundedCounterState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions map[int32]int32 `protobuf:"bytes,1,rep,name=permissions" json:"permissions,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Decs        map[int32]int32 `protobuf:"bytes,2,rep,name=decs" json:"decs,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	Limit       *int32          `protobuf:"varint,3,req,name=limit" json:"limit,omitempty"`
	Value       *int32          `protobuf:"varint,4,req,name=value" json:"value,omitempty"`
}

func (x *ProtoBoundedCounterState) Reset() {
	*x = ProtoBoundedCounterState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_replicator_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBoundedCounterState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBoundedCounterState) ProtoMessage() {}

func (x *ProtoBoundedCounterState) ProtoReflect() protoreflect.Message {
	mi := &file_replicator_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBoundedCounterState.ProtoReflect.Descriptor instead.
func (*ProtoBoundedCounterState) Descriptor() ([]byte, []int) {
	return file_replicator_proto_rawDescGZIP(), []int{73}
}

func (x *ProtoBoundedCounterState) GetPermissions() map[int32]int32 {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *ProtoBoundedCounterState) GetDecs() map[int32]int32 {
	if x != nil {
		return x.Decs
	}
	return nil
}

func (x *ProtoBoundedCounterState) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ProtoBoundedCounterState) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

var File_replicator_proto protoreflect.FileDescriptor

var file_replicator_proto_rawDesc = []byte{
	0x0a, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0e, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x54, 0x73, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x54, 0x73,
	0x22, 0x8b, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x21, 0x0a, 0x03, 0x74, 0x78, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x78,
	0x6e, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x78, 0x6e, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x74, 0x78, 0x6e, 0x49, 0x44, 0x22, 0x94,
	0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x78, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x78, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x54, 0x78, 0x6e, 0x52, 0x04, 0x74, 0x78, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x69, 0x6e, 0x54, 0x78, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x69, 0x6e, 0x54, 0x78, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x54, 0x78, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x54, 0x78, 0x6e, 0x49, 0x44, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54, 0x78, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4e, 0x65, 0x77, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x54, 0x78, 0x6e, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x78, 0x6e, 0x49, 0x44, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x74, 0x78,
	0x6e, 0x49, 0x44, 0x22, 0x5e, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4e, 0x65, 0x77, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x78, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x70, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x6f,
	0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x52, 0x04, 0x75, 0x70, 0x64,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x54, 0x78, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x70, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x55, 0x70, 0x64, 0x52, 0x04, 0x75, 0x70, 0x64, 0x73, 0x22, 0x67, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55,
	0x70, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x22, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x02, 0x6f, 0x70, 0x22, 0xaa, 0x06, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f,
	0x70, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x35, 0x0a, 0x09, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77,
	0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x4f, 0x70, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x65, 0x74, 0x4f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x73, 0x65, 0x74, 0x4f, 0x70, 0x12, 0x35, 0x0a,
	0x09, 0x74, 0x6f, 0x70, 0x6b, 0x72, 0x6d, 0x76, 0x4f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x52, 0x6d, 0x76, 0x44,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x6b, 0x72,
	0x6d, 0x76, 0x4f, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x6c, 0x77, 0x77, 0x72, 0x65, 0x67, 0x4f, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x57,
	0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x08, 0x6c, 0x77, 0x77, 0x72, 0x65, 0x67, 0x4f, 0x70, 0x12, 0x2f, 0x0a,
	0x07, 0x6f, 0x72, 0x6d, 0x61, 0x70, 0x4f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x07, 0x6f, 0x72, 0x6d, 0x61, 0x70, 0x4f, 0x70, 0x12, 0x29,
	0x0a, 0x05, 0x61, 0x76, 0x67, 0x4f, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x76, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x05, 0x61, 0x76, 0x67, 0x4f, 0x70, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x6d, 0x69, 0x6e, 0x4f, 0x70, 0x12, 0x38, 0x0a,
	0x0a, 0x72, 0x77, 0x65, 0x6d, 0x62, 0x6d, 0x61, 0x70, 0x4f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x57, 0x45, 0x6d, 0x62, 0x4d, 0x61,
	0x70, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0a, 0x72, 0x77, 0x65,
	0x6d, 0x62, 0x6d, 0x61, 0x70, 0x4f, 0x70, 0x12, 0x32, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x73, 0x75,
	0x6d, 0x4f, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x54, 0x6f, 0x70, 0x53, 0x75, 0x6d, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x73, 0x75, 0x6d, 0x4f, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x66,
	0x6c, 0x61, 0x67, 0x4f, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x46, 0x6c, 0x61, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x06, 0x66, 0x6c, 0x61, 0x67, 0x4f, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x62, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77,
	0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0a, 0x62, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x4f, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x6b, 0x4f, 0x70, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x44,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x6b, 0x4f,
	0x70, 0x12, 0x44, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x4f, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x44, 0x6f, 0x77,
	0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x4f, 0x70, 0x12, 0x38, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x6b, 0x69,
	0x6e, 0x69, 0x74, 0x4f, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0a, 0x74, 0x6f, 0x70, 0x6b, 0x69, 0x6e, 0x69, 0x74, 0x4f,
	0x70, 0x12, 0x2f, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4f, 0x70, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x07, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x4f, 0x70, 0x22, 0x46, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x49, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x49,
	0x6e, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x1b, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x44,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x49,
	0x6e, 0x63, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x49, 0x6e, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x01, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x22, 0x63, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x53, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x25, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x52, 0x04, 0x61, 0x64, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x73, 0x52, 0x04, 0x72, 0x65, 0x6d, 0x73, 0x22, 0x67,
	0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x44, 0x6f, 0x77, 0x6e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x28, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x52, 0x04, 0x61, 0x64, 0x64, 0x73,
	0x12, 0x25, 0x0a, 0x04, 0x72, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x04, 0x72, 0x65, 0x6d, 0x73, 0x22, 0x68, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x6f, 0x70, 0x4b, 0x52, 0x6d, 0x76, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x04, 0x61, 0x64, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x72, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f,
	0x70, 0x4b, 0x52, 0x6d, 0x76, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x04, 0x72, 0x65, 0x6d,
	0x73, 0x22, 0x3a, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x44, 0x6f,
	0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f,
	0x70, 0x4b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x61, 0x64, 0x64, 0x73, 0x22, 0x38, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x52, 0x6d, 0x76, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x03, 0x76, 0x63, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x6f, 0x70, 0x4b, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x46, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x76, 0x67, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x41, 0x64, 0x64, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x6e,
	0x41, 0x64, 0x64, 0x73, 0x22, 0x65, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x78,
	0x4d, 0x69, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x25, 0x0a,
	0x03, 0x6d, 0x61, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4d, 0x61, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x03, 0x6d, 0x61, 0x78, 0x12, 0x25, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x69, 0x6e, 0x44, 0x6f, 0x77, 0x6e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x22, 0x2a, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4d, 0x69, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x43, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x22, 0x4e, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x52,
	0x4d, 0x61, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x65,
	0x6c, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x73, 0x52, 0x05,
	0x65, 0x6c, 0x65, 0x6d, 0x73, 0x22, 0x7a, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f,
	0x70, 0x4b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x4a, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a,
	0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x49, 0x64, 0x56, 0x63, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x76, 0x63, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x02, 0x76, 0x63, 0x22, 0x6f,
	0x0a, 0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x57, 0x45, 0x6d, 0x62, 0x4d, 0x61, 0x70, 0x44,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x64, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x57, 0x45, 0x6d, 0x62, 0x4d, 0x61, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x72, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x57, 0x45, 0x6d, 0x62, 0x4d,
	0x61, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x52, 0x04, 0x72, 0x65, 0x6d, 0x73, 0x22,
	0x96, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x57, 0x45, 0x6d, 0x62, 0x4d, 0x61,
	0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x75, 0x70, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6d,
	0x62, 0x4d, 0x61, 0x70, 0x55, 0x70, 0x64, 0x52, 0x04, 0x75, 0x70, 0x64, 0x73, 0x12, 0x21, 0x0a,
	0x02, 0x76, 0x63, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x02, 0x76, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0x58, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x57, 0x45, 0x6d, 0x62, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x02, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x49, 0x44, 0x22, 0x68, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6d, 0x62, 0x4d, 0x61,
	0x70, 0x55, 0x70, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x43, 0x52, 0x44, 0x54, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x75, 0x70, 0x64, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x70, 0x44, 0x6f, 0x77,
	0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x03, 0x75, 0x70, 0x64, 0x22, 0x4e, 0x0a, 0x12,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x53, 0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x62, 0x0a, 0x15,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x53, 0x75, 0x6d, 0x44, 0x6f, 0x77, 0x6e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x29, 0x0a, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x53,
	0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x22, 0xe8, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x6c, 0x61, 0x67, 0x44, 0x6f,
	0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x37, 0x0a, 0x09, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x4c, 0x57, 0x57, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x57, 0x57, 0x44, 0x6f, 0x77, 0x6e,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x57,
	0x57, 0x12, 0x3a, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x57, 0x57, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x4c, 0x57, 0x57, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x57, 0x57, 0x12, 0x34, 0x0a,
	0x08, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x57, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x57, 0x44,
	0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x45, 0x57, 0x12, 0x37, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x57,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x57, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x09, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x57, 0x12, 0x34, 0x0a, 0x08,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x57, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x57, 0x44, 0x6f,
	0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x08, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x57, 0x12, 0x37, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x57, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x44, 0x57, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x09, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x57, 0x22, 0x48, 0x0a, 0x18, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x57, 0x57, 0x44, 0x6f, 0x77,
	0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x57, 0x57, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02,
	0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44,
	0x22, 0x31, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x57, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x22, 0x3c, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x45, 0x57, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x65, 0x6e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x65, 0x65, 0x6e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x73, 0x22, 0x3b, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x57, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x20, 0x0a, 0x0b,
	0x73, 0x65, 0x65, 0x6e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x0b, 0x73, 0x65, 0x65, 0x6e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x73, 0x22, 0x32,
	0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x57,
	0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x3d,
	0x0a, 0x09, 0x73, 0x65, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x09, 0x73, 0x65, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x3b, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x03, 0x69, 0x6e,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49,
	0x6e, 0x63, 0x42, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x03, 0x69, 0x6e, 0x63, 0x12, 0x2d, 0x0a, 0x03, 0x64, 0x65, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x65,
	0x63, 0x42, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x03, 0x64, 0x65, 0x63, 0x22, 0x64, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x53, 0x65, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x70, 0x45, 0x71, 0x18, 0x02, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x70, 0x45, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x72,
	0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x6f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x74, 0x6f,
	0x49, 0x44, 0x22, 0x52, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x6e, 0x63, 0x42, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44,
	0x65, 0x63, 0x42, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52,
	0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x22, 0x5f, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x79, 0x49, 0x50, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x79, 0x49, 0x50, 0x22, 0x61, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x49, 0x50, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x49, 0x50, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6c, 0x6b, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6c, 0x6b, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x50, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x50, 0x22, 0x6a, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x49, 0x50, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x50, 0x22, 0x69, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x6b,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x03, 0x63, 0x6c, 0x6b, 0x12, 0x25, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x74, 0x73, 0x22, 0x34, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x52, 0x44, 0x54,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x68, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x43, 0x52, 0x44, 0x54, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x43, 0x52, 0x44, 0x54, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0xc4, 0x04, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x06, 0x6c, 0x77, 0x77, 0x72, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x06, 0x6c, 0x77, 0x77, 0x72, 0x65, 0x67, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x77,
	0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x41, 0x57, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x61, 0x77, 0x73,
	0x65, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x6f, 0x72, 0x6d, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x6f, 0x72, 0x6d, 0x61, 0x70, 0x12, 0x29, 0x0a, 0x06, 0x65, 0x6d,
	0x62, 0x6d, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x45, 0x6d, 0x62, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x65,
	0x6d, 0x62, 0x6d, 0x61, 0x70, 0x12, 0x29, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x6d, 0x69, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x78,
	0x4d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x6d, 0x69, 0x6e,
	0x12, 0x2c, 0x0a, 0x07, 0x74, 0x6f, 0x70, 0x6b, 0x72, 0x6d, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x52, 0x6d, 0x76,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x6b, 0x72, 0x6d, 0x76, 0x12, 0x20,
	0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x41, 0x76, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x03, 0x61, 0x76, 0x67,
	0x12, 0x29, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x73, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x53, 0x75, 0x6d, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x73, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x46, 0x6c, 0x61, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67,
	0x12, 0x35, 0x0a, 0x08, 0x62, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x62,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70,
	0x4b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x6b, 0x12, 0x3b, 0x0a, 0x0c,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x29, 0x0a, 0x11,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x56, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4c, 0x57, 0x57, 0x52, 0x65, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x74,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x22,
	0x3b, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x57, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x73, 0x52, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x22, 0x3e, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2b, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x52, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a,
	0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6d, 0x62, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x27, 0x0a, 0x05, 0x63, 0x72, 0x64, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6d, 0x62, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x63, 0x72, 0x64, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x45, 0x6d, 0x62, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6d, 0x76, 0x43,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x6d, 0x76, 0x43,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x67, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6d, 0x62,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x43, 0x52, 0x44, 0x54, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4c, 0x0a,
	0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x45, 0x6d, 0x62, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x6c, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x63, 0x6c, 0x6b, 0x73, 0x22, 0x28, 0x0a, 0x10, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x76,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x41, 0x64, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x41, 0x64, 0x64, 0x73, 0x22, 0xe6,
	0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x52, 0x6d, 0x76, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x22, 0x0a,
	0x04, 0x72, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x49, 0x64, 0x56, 0x63, 0x52, 0x04, 0x72, 0x65, 0x6d,
	0x73, 0x12, 0x29, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x54, 0x6f, 0x70, 0x12, 0x2d, 0x0a, 0x08,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x45, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x45, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x63, 0x18, 0x06, 0x20,
	0x02, 0x28, 0x0c, 0x52, 0x02, 0x76, 0x63, 0x22, 0xb7, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x54, 0x6f, 0x70, 0x53, 0x75, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x53, 0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x54, 0x6f,
	0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54,
	0x6f, 0x70, 0x53, 0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x6e, 0x6f,
	0x74, 0x54, 0x6f, 0x70, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f,
	0x70, 0x53, 0x75, 0x6d, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x6d, 0x61,
	0x6c, 0x6c, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x45, 0x6c, 0x65, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x45, 0x6c, 0x65, 0x6d,
	0x73, 0x22, 0xcf, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x65, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x2b, 0x0a, 0x08, 0x73,
	0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x08,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x45,
	0x6c, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x45,
	0x6c, 0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x54, 0x69, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0f, 0x6b,
	0x65, 0x65, 0x70, 0x54, 0x69, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x23,
	0x0a, 0x04, 0x74, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x54, 0x6f, 0x70, 0x4b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x74,
	0x69, 0x65, 0x64, 0x22, 0x7c, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x6c, 0x61, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x6c, 0x77, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x6c, 0x61, 0x67, 0x4c, 0x57,
	0x57, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x03, 0x6c, 0x77, 0x77, 0x12, 0x21, 0x0a, 0x02, 0x65,
	0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46,
	0x6c, 0x61, 0x67, 0x45, 0x57, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x02, 0x65, 0x77, 0x12, 0x21,
	0x0a, 0x02, 0x64, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x46, 0x6c, 0x61, 0x67, 0x44, 0x57, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x02, 0x64,
	0x77, 0x22, 0x55, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x6c, 0x61, 0x67, 0x4c, 0x57,
	0x57, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x22, 0x2c, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x46, 0x6c, 0x61, 0x67, 0x45, 0x57, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46,
	0x6c, 0x61, 0x67, 0x44, 0x57, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x73, 0x22, 0xc6, 0x02, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x37, 0x0a, 0x04, 0x64, 0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x64, 0x65, 0x63, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x65, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x15, 0x5a,
	0x13, 0x70, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x42, 0x2f, 0x63, 0x72, 0x64, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_replicator_proto_rawDescOnce sync.Once
	file_replicator_proto_rawDescData = file_replicator_proto_rawDesc
)

func file_replicator_proto_rawDescGZIP() []byte {
	file_replicator_proto_rawDescOnce.Do(func() {
		file_replicator_proto_rawDescData = protoimpl.X.CompressGZIP(file_replicator_proto_rawDescData)
	})
	return file_replicator_proto_rawDescData
}

var file_replicator_proto_msgTypes = make([]protoimpl.MessageInfo, 76)
var file_replicator_proto_goTypes = []interface{}{
	(*ProtoStableClock)(nil),               // 0: ProtoStableClock
	(*ProtoReplicatePart)(nil),             // 1: ProtoReplicatePart
	(*ProtoReplicateGroupTxn)(nil),         // 2: ProtoReplicateGroupTxn
	(*ProtoReplicateTxn)(nil),              // 3: ProtoReplicateTxn
	(*ProtoNewRemoteTxn)(nil),              // 4: ProtoNewRemoteTxn
	(*ProtoRemoteTxn)(nil),                 // 5: ProtoRemoteTxn
	(*ProtoDownstreamUpd)(nil),             // 6: ProtoDownstreamUpd
	(*ProtoOpDownstream)(nil),              // 7: ProtoOpDownstream
	(*ProtoCounterDownstream)(nil),         // 8: ProtoCounterDownstream
	(*ProtoCounterFloatDownstream)(nil),    // 9: ProtoCounterFloatDownstream
	(*ProtoLWWRegisterDownstream)(nil),     // 10: ProtoLWWRegisterDownstream
	(*ProtoSetDownstream)(nil),             // 11: ProtoSetDownstream
	(*ProtoORMapDownstream)(nil),           // 12: ProtoORMapDownstream
	(*ProtoTopKRmvDownstream)(nil),         // 13: ProtoTopKRmvDownstream
	(*ProtoTopKDownstream)(nil),            // 14: ProtoTopKDownstream
	(*ProtoTopKRmvRemove)(nil),             // 15: ProtoTopKRmvRemove
	(*ProtoTopKInitDownstream)(nil),        // 16: ProtoTopKInitDownstream
	(*ProtoAvgDownstream)(nil),             // 17: ProtoAvgDownstream
	(*ProtoMaxMinDownstream)(nil),          // 18: ProtoMaxMinDownstream
	(*ProtoMaxDownstream)(nil),             // 19: ProtoMaxDownstream
	(*ProtoMinDownstream)(nil),             // 20: ProtoMinDownstream
	(*ProtoValueUnique)(nil),               // 21: ProtoValueUnique
	(*ProtoValueUniques)(nil),              // 22: ProtoValueUniques
	(*ProtoKeyValueUnique)(nil),            // 23: ProtoKeyValueUnique
	(*ProtoORMapRemove)(nil),               // 24: ProtoORMapRemove
	(*ProtoTopKElement)(nil),               // 25: ProtoTopKElement
	(*ProtoTopKScore)(nil),                 // 26: ProtoTopKScore
	(*ProtoTopKIdVc)(nil),                  // 27: ProtoTopKIdVc
	(*ProtoRWEmbMapDownstream)(nil),        // 28: ProtoRWEmbMapDownstream
	(*ProtoRWEmbMapUpdates)(nil),           // 29: ProtoRWEmbMapUpdates
	(*ProtoRWEmbMapRemoves)(nil),           // 30: ProtoRWEmbMapRemoves
	(*ProtoEmbMapUpd)(nil),                 // 31: ProtoEmbMapUpd
	(*ProtoTopSumElement)(nil),             // 32: ProtoTopSumElement
	(*ProtoTopSumDownstream)(nil),          // 33: ProtoTopSumDownstream
	(*ProtoFlagDownstream)(nil),            // 34: ProtoFlagDownstream
	(*ProtoEnableLWWDownstream)(nil),       // 35: ProtoEnableLWWDownstream
	(*ProtoDisableLWWDownstream)(nil),      // 36: ProtoDisableLWWDownstream
	(*ProtoEnableEWDownstream)(nil),        // 37: ProtoEnableEWDownstream
	(*ProtoDisableEWDownstream)(nil),       // 38: ProtoDisableEWDownstream
	(*ProtoEnableDWDownstream)(nil),        // 39: ProtoEnableDWDownstream
	(*ProtoDisableDWDownstream)(nil),       // 40: ProtoDisableDWDownstream
	(*ProtoBCounterDownstream)(nil),        // 41: ProtoBCounterDownstream
	(*ProtoSetBoundCounterDownstream)(nil), // 42: ProtoSetBoundCounterDownstream
	(*ProtoTransferCounterDownstream)(nil), // 43: ProtoTransferCounterDownstream
	(*ProtoIncBCounterDownstream)(nil),     // 44: ProtoIncBCounterDownstream
	(*ProtoDecBCounterDownstream)(nil),     // 45: ProtoDecBCounterDownstream
	(*ProtoResetDownstream)(nil),           // 46: ProtoResetDownstream
	(*ProtoRemoteID)(nil),                  // 47: ProtoRemoteID
	(*ProtoJoin)(nil),                      // 48: ProtoJoin
	(*ProtoReplyJoin)(nil),                 // 49: ProtoReplyJoin
	(*ProtoRequestBucket)(nil),             // 50: ProtoRequestBucket
	(*ProtoReplyBucket)(nil),               // 51: ProtoReplyBucket
	(*ProtoPartition)(nil),                 // 52: ProtoPartition
	(*ProtoCRDT)(nil),                      // 53: ProtoCRDT
	(*ProtoState)(nil),                     // 54: ProtoState
	(*ProtoReplyEmpty)(nil),                // 55: ProtoReplyEmpty
	(*ProtoCounterState)(nil),              // 56: ProtoCounterState
	(*ProtoCounterFloatState)(nil),         // 57: ProtoCounterFloatState
	(*ProtoLWWRegState)(nil),               // 58: ProtoLWWRegState
	(*ProtoAWSetState)(nil),                // 59: ProtoAWSetState
	(*ProtoORMapState)(nil),                // 60: ProtoORMapState
	(*ProtoEmbMapState)(nil),               // 61: ProtoEmbMapState
	(*ProtoEmbMapEntry)(nil),               // 62: ProtoEmbMapEntry
	(*ProtoEmbMapRemove)(nil),              // 63: ProtoEmbMapRemove
	(*ProtoMaxMinState)(nil),               // 64: ProtoMaxMinState
	(*ProtoAvgState)(nil),                  // 65: ProtoAvgState
	(*ProtoTopKRmvState)(nil),              // 66: ProtoTopKRmvState
	(*ProtoTopSumState)(nil),               // 67: ProtoTopSumState
	(*ProtoTopKState)(nil),                 // 68: ProtoTopKState
	(*ProtoFlagState)(nil),                 // 69: ProtoFlagState
	(*ProtoFlagLWWState)(nil),              // 70: ProtoFlagLWWState
	(*ProtoFlagEWState)(nil),               // 71: ProtoFlagEWState
	(*ProtoFlagDWState)(nil),               // 72: ProtoFlagDWState
	(*ProtoBoundedCounterState)(nil),       // 73: ProtoBoundedCounterState
	nil,                                    // 74: ProtoBoundedCounterState.PermissionsEntry
	nil,                                    // 75: ProtoBoundedCounterState.DecsEntry
	(*ApbBoundObject)(nil),                 // 76: ApbBoundObject
	(CRDTType)(0),                          // 77: CRDT_type
}
var file_replicator_proto_depIdxs = []int32{
	5,  // 0: ProtoReplicatePart.txn:type_name -> ProtoRemoteTxn
	3,  // 1: ProtoReplicateGroupTxn.txns:type_name -> ProtoReplicateTxn
	4,  // 2: ProtoReplicateTxn.part:type_name -> ProtoNewRemoteTxn
	6,  // 3: ProtoNewRemoteTxn.upds:type_name -> ProtoDownstreamUpd
	6,  // 4: ProtoRemoteTxn.upds:type_name -> ProtoDownstreamUpd
	76, // 5: ProtoDownstreamUpd.keyParams:type_name -> ApbBoundObject
	7,  // 6: ProtoDownstreamUpd.op:type_name -> ProtoOpDownstream
	8,  // 7: ProtoOpDownstream.counterOp:type_name -> ProtoCounterDownstream
	11, // 8: ProtoOpDownstream.setOp:type_name -> ProtoSetDownstream
	13, // 9: ProtoOpDownstream.topkrmvOp:type_name -> ProtoTopKRmvDownstream
	10, // 10: ProtoOpDownstream.lwwregOp:type_name -> ProtoLWWRegisterDownstream
	12, // 11: ProtoOpDownstream.ormapOp:type_name -> ProtoORMapDownstream
	17, // 12: ProtoOpDownstream.avgOp:type_name -> ProtoAvgDownstream
	18, // 13: ProtoOpDownstream.maxminOp:type_name -> ProtoMaxMinDownstream
	28, // 14: ProtoOpDownstream.rwembmapOp:type_name -> ProtoRWEmbMapDownstream
	33, // 15: ProtoOpDownstream.topsumOp:type_name -> ProtoTopSumDownstream
	34, // 16: ProtoOpDownstream.flagOp:type_name -> ProtoFlagDownstream
	41, // 17: ProtoOpDownstream.bcounterOp:type_name -> ProtoBCounterDownstream
	14, // 18: ProtoOpDownstream.topkOp:type_name -> ProtoTopKDownstream
	9,  // 19: ProtoOpDownstream.counterfloatOp:type_name -> ProtoCounterFloatDownstream
	16, // 20: ProtoOpDownstream.topkinitOp:type_name -> ProtoTopKInitDownstream
	46, // 21: ProtoOpDownstream.resetOp:type_name -> ProtoResetDownstream
	21, // 22: ProtoSetDownstream.adds:type_name -> ProtoValueUnique
	22, // 23: ProtoSetDownstream.rems:type_name -> ProtoValueUniques
	23, // 24: ProtoORMapDownstream.adds:type_name -> ProtoKeyValueUnique
	24, // 25: ProtoORMapDownstream.rems:type_name -> ProtoORMapRemove
	25, // 26: ProtoTopKRmvDownstream.adds:type_name -> ProtoTopKElement
	15, // 27: ProtoTopKRmvDownstream.rems:type_name -> ProtoTopKRmvRemove
	26, // 28: ProtoTopKDownstream.adds:type_name -> ProtoTopKScore
	19, // 29: ProtoMaxMinDownstream.max:type_name -> ProtoMaxDownstream
	20, // 30: ProtoMaxMinDownstream.min:type_name -> ProtoMinDownstream
	22, // 31: ProtoORMapRemove.elems:type_name -> ProtoValueUniques
	29, // 32: ProtoRWEmbMapDownstream.adds:type_name -> ProtoRWEmbMapUpdates
	30, // 33: ProtoRWEmbMapDownstream.rems:type_name -> ProtoRWEmbMapRemoves
	31, // 34: ProtoRWEmbMapUpdates.upds:type_name -> ProtoEmbMapUpd
	0,  // 35: ProtoRWEmbMapUpdates.vc:type_name -> ProtoStableClock
	77, // 36: ProtoEmbMapUpd.type:type_name -> CRDT_type
	7,  // 37: ProtoEmbMapUpd.upd:type_name -> ProtoOpDownstream
	32, // 38: ProtoTopSumDownstream.elems:type_name -> ProtoTopSumElement
	35, // 39: ProtoFlagDownstream.enableLWW:type_name -> ProtoEnableLWWDownstream
	36, // 40: ProtoFlagDownstream.disableLWW:type_name -> ProtoDisableLWWDownstream
	37, // 41: ProtoFlagDownstream.enableEW:type_name -> ProtoEnableEWDownstream
	38, // 42: ProtoFlagDownstream.disableEW:type_name -> ProtoDisableEWDownstream
	39, // 43: ProtoFlagDownstream.enableDW:type_name -> ProtoEnableDWDownstream
	40, // 44: ProtoFlagDownstream.disableDW:type_name -> ProtoDisableDWDownstream
	42, // 45: ProtoBCounterDownstream.setBounds:type_name -> ProtoSetBoundCounterDownstream
	43, // 46: ProtoBCounterDownstream.transfer:type_name -> ProtoTransferCounterDownstream
	44, // 47: ProtoBCounterDownstream.inc:type_name -> ProtoIncBCounterDownstream
	45, // 48: ProtoBCounterDownstream.dec:type_name -> ProtoDecBCounterDownstream
	52, // 49: ProtoReplyBucket.parts:type_name -> ProtoPartition
	53, // 50: ProtoPartition.states:type_name -> ProtoCRDT
	77, // 51: ProtoCRDT.type:type_name -> CRDT_type
	54, // 52: ProtoCRDT.state:type_name -> ProtoState
	56, // 53: ProtoState.counter:type_name -> ProtoCounterState
	58, // 54: ProtoState.lwwreg:type_name -> ProtoLWWRegState
	59, // 55: ProtoState.awset:type_name -> ProtoAWSetState
	60, // 56: ProtoState.ormap:type_name -> ProtoORMapState
	61, // 57: ProtoState.embmap:type_name -> ProtoEmbMapState
	64, // 58: ProtoState.maxmin:type_name -> ProtoMaxMinState
	66, // 59: ProtoState.topkrmv:type_name -> ProtoTopKRmvState
	65, // 60: ProtoState.avg:type_name -> ProtoAvgState
	67, // 61: ProtoState.topsum:type_name -> ProtoTopSumState
	69, // 62: ProtoState.flag:type_name -> ProtoFlagState
	73, // 63: ProtoState.bcounter:type_name -> ProtoBoundedCounterState
	68, // 64: ProtoState.topk:type_name -> ProtoTopKState
	57, // 65: ProtoState.counterfloat:type_name -> ProtoCounterFloatState
	22, // 66: ProtoAWSetState.elems:type_name -> ProtoValueUniques
	24, // 67: ProtoORMapState.entries:type_name -> ProtoORMapRemove
	62, // 68: ProtoEmbMapState.crdts:type_name -> ProtoEmbMapEntry
	63, // 69: ProtoEmbMapState.removes:type_name -> ProtoEmbMapRemove
	77, // 70: ProtoEmbMapEntry.type:type_name -> CRDT_type
	54, // 71: ProtoEmbMapEntry.state:type_name -> ProtoState
	0,  // 72: ProtoEmbMapRemove.clks:type_name -> ProtoStableClock
	25, // 73: ProtoTopKRmvState.elems:type_name -> ProtoTopKElement
	27, // 74: ProtoTopKRmvState.rems:type_name -> ProtoTopKIdVc
	25, // 75: ProtoTopKRmvState.notTop:type_name -> ProtoTopKElement
	25, // 76: ProtoTopKRmvState.smallest:type_name -> ProtoTopKElement
	32, // 77: ProtoTopSumState.elems:type_name -> ProtoTopSumElement
	32, // 78: ProtoTopSumState.notTop:type_name -> ProtoTopSumElement
	32, // 79: ProtoTopSumState.smallest:type_name -> ProtoTopSumElement
	26, // 80: ProtoTopKState.elems:type_name -> ProtoTopKScore
	26, // 81: ProtoTopKState.smallest:type_name -> ProtoTopKScore
	26, // 82: ProtoTopKState.tied:type_name -> ProtoTopKScore
	70, // 83: ProtoFlagState.lww:type_name -> ProtoFlagLWWState
	71, // 84: ProtoFlagState.ew:type_name -> ProtoFlagEWState
	72, // 85: ProtoFlagState.dw:type_name -> ProtoFlagDWState
	74, // 86: ProtoBoundedCounterState.permissions:type_name -> ProtoBoundedCounterState.PermissionsEntry
	75, // 87: ProtoBoundedCounterState.decs:type_name -> ProtoBoundedCounterState.DecsEntry
	88, // [88:88] is the sub-list for method output_type
	88, // [88:88] is the sub-list for method input_type
	88, // [88:88] is the sub-list for extension type_name
	88, // [88:88] is the sub-list for extension extendee
	0,  // [0:88] is the sub-list for field type_name
}

func init() { file_replicator_proto_init() }
func file_replicator_proto_init() {
	if File_replicator_proto != nil {
		return
	}
	file_antidote_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_replicator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoStableClock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoReplicatePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoReplicateGroupTxn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoReplicateTxn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoNewRemoteTxn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRemoteTxn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDownstreamUpd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoOpDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCounterDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCounterFloatDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoLWWRegisterDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoSetDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoORMapDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopKRmvDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopKDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopKRmvRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopKInitDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAvgDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMaxMinDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMaxDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMinDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoValueUnique); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoValueUniques); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoKeyValueUnique); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoORMapRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopKElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopKScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopKIdVc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRWEmbMapDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRWEmbMapUpdates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRWEmbMapRemoves); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoEmbMapUpd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopSumElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopSumDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoFlagDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoEnableLWWDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDisableLWWDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoEnableEWDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDisableEWDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoEnableDWDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDisableDWDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBCounterDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoSetBoundCounterDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTransferCounterDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoIncBCounterDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDecBCounterDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoResetDownstream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRemoteID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoReplyJoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRequestBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoReplyBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPartition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCRDT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoReplyEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCounterState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCounterFloatState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoLWWRegState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAWSetState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoORMapState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoEmbMapState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoEmbMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoEmbMapRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMaxMinState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAvgState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopKRmvState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopSumState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTopKState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoFlagState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoFlagLWWState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoFlagEWState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoFlagDWState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_replicator_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBoundedCounterState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_replicator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   76,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_replicator_proto_goTypes,
		DependencyIndexes: file_replicator_proto_depIdxs,
		MessageInfos:      file_replicator_proto_msgTypes,
	}.Build()
	File_replicator_proto = out.File
	file_replicator_proto_rawDesc = nil
	file_replicator_proto_goTypes = nil
	file_replicator_proto_depIdxs = nil
}
