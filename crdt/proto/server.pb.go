// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.12
// source: server.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WrapperType int32

const (
	WrapperType_STATIC_READ_OBJS   WrapperType = 1
	WrapperType_STATIC_READ        WrapperType = 2
	WrapperType_STATIC_UPDATE      WrapperType = 3
	WrapperType_START_TXN          WrapperType = 4
	WrapperType_READ_OBJS          WrapperType = 5
	WrapperType_READ               WrapperType = 6
	WrapperType_UPD                WrapperType = 7
	WrapperType_COMMIT             WrapperType = 8
	WrapperType_ABORT              WrapperType = 9
	WrapperType_BC_PERMS_REQ       WrapperType = 10
	WrapperType_STATIC_SINGLE_READ WrapperType = 11
)

// Enum value maps for WrapperType.
var (
	WrapperType_name = map[int32]string{
		1:  "STATIC_READ_OBJS",
		2:  "STATIC_READ",
		3:  "STATIC_UPDATE",
		4:  "START_TXN",
		5:  "READ_OBJS",
		6:  "READ",
		7:  "UPD",
		8:  "COMMIT",
		9:  "ABORT",
		10: "BC_PERMS_REQ",
		11: "STATIC_SINGLE_READ",
	}
	WrapperType_value = map[string]int32{
		"STATIC_READ_OBJS":   1,
		"STATIC_READ":        2,
		"STATIC_UPDATE":      3,
		"START_TXN":          4,
		"READ_OBJS":          5,
		"READ":               6,
		"UPD":                7,
		"COMMIT":             8,
		"ABORT":              9,
		"BC_PERMS_REQ":       10,
		"STATIC_SINGLE_READ": 11,
	}
)

func (x WrapperType) Enum() *WrapperType {
	p := new(WrapperType)
	*p = x
	return p
}

func (x WrapperType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WrapperType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[0].Descriptor()
}

func (WrapperType) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[0]
}

func (x WrapperType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WrapperType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WrapperType(num)
	return nil
}

// Deprecated: Use WrapperType.Descriptor instead.
func (WrapperType) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

type ApbServerConn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApbServerConn) Reset() {
	*x = ApbServerConn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbServerConn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbServerConn) ProtoMessage() {}

func (x *ApbServerConn) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbServerConn.ProtoReflect.Descriptor instead.
func (*ApbServerConn) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

type ApbServerConnReplicaID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID *int32   `protobuf:"varint,1,req,name=replicaID" json:"replicaID,omitempty"`
	MyBuckets []string `protobuf:"bytes,2,rep,name=myBuckets" json:"myBuckets,omitempty"`
	MyIP      *string  `protobuf:"bytes,3,req,name=myIP" json:"myIP,omitempty"`
}

func (x *ApbServerConnReplicaID) Reset() {
	*x = ApbServerConnReplicaID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApbServerConnReplicaID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApbServerConnReplicaID) ProtoMessage() {}

func (x *ApbServerConnReplicaID) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApbServerConnReplicaID.ProtoReflect.Descriptor instead.
func (*ApbServerConnReplicaID) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

func (x *ApbServerConnReplicaID) GetReplicaID() int32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *ApbServerConnReplicaID) GetMyBuckets() []string {
	if x != nil {
		return x.MyBuckets
	}
	return nil
}

func (x *ApbServerConnReplicaID) GetMyIP() string {
	if x != nil && x.MyIP != nil {
		return *x.MyIP
	}
	return ""
}

type S2SWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID       *int32                  `protobuf:"varint,1,req,name=clientID" json:"clientID,omitempty"`
	MsgID          *WrapperType            `protobuf:"varint,12,req,name=msgID,enum=WrapperType" json:"msgID,omitempty"`
	StaticReadObjs *ApbStaticReadObjects   `protobuf:"bytes,2,opt,name=staticReadObjs" json:"staticReadObjs,omitempty"`
	StaticRead     *ApbStaticRead          `protobuf:"bytes,3,opt,name=staticRead" json:"staticRead,omitempty"`
	StaticUpd      *ApbStaticUpdateObjects `protobuf:"bytes,4,opt,name=staticUpd" json:"staticUpd,omitempty"`
	StartTxn       *ApbStartTransaction    `protobuf:"bytes,5,opt,name=startTxn" json:"startTxn,omitempty"`
	ReadObjs       *ApbReadObjects         `protobuf:"bytes,6,opt,name=readObjs" json:"readObjs,omitempty"`
	Read           *ApbRead                `protobuf:"bytes,7,opt,name=read" json:"read,omitempty"`
	Upd            *ApbUpdateObjects       `protobuf:"bytes,8,opt,name=upd" json:"upd,omitempty"`
	CommitTxn      *ApbCommitTransaction   `protobuf:"bytes,9,opt,name=commitTxn" json:"commitTxn,omitempty"`
	AbortTxn       *ApbAbortTransaction    `protobuf:"bytes,10,opt,name=abortTxn" json:"abortTxn,omitempty"`
	BcPermsReq     *ProtoBCPermissionsReq  `protobuf:"bytes,11,opt,name=bcPermsReq" json:"bcPermsReq,omitempty"`
	SingleRead     *S2SSingleRead          `protobuf:"bytes,13,opt,name=singleRead" json:"singleRead,omitempty"`
}

func (x *S2SWrapper) Reset() {
	*x = S2SWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2SWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2SWrapper) ProtoMessage() {}

func (x *S2SWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2SWrapper.ProtoReflect.Descriptor instead.
func (*S2SWrapper) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

func (x *S2SWrapper) GetClientID() int32 {
	if x != nil && x.ClientID != nil {
		return *x.ClientID
	}
	return 0
}

func (x *S2SWrapper) GetMsgID() WrapperType {
	if x != nil && x.MsgID != nil {
		return *x.MsgID
	}
	return WrapperType_STATIC_READ_OBJS
}

func (x *S2SWrapper) GetStaticReadObjs() *ApbStaticReadObjects {
	if x != nil {
		return x.StaticReadObjs
	}
	return nil
}

func (x *S2SWrapper) GetStaticRead() *ApbStaticRead {
	if x != nil {
		return x.StaticRead
	}
	return nil
}

func (x *S2SWrapper) GetStaticUpd() *ApbStaticUpdateObjects {
	if x != nil {
		return x.StaticUpd
	}
	return nil
}

func (x *S2SWrapper) GetStartTxn() *ApbStartTransaction {
	if x != nil {
		return x.StartTxn
	}
	return nil
}

func (x *S2SWrapper) GetReadObjs() *ApbReadObjects {
	if x != nil {
		return x.ReadObjs
	}
	return nil
}

func (x *S2SWrapper) GetRead() *ApbRead {
	if x != nil {
		return x.Read
	}
	return nil
}

func (x *S2SWrapper) GetUpd() *ApbUpdateObjects {
	if x != nil {
		return x.Upd
	}
	return nil
}

func (x *S2SWrapper) GetCommitTxn() *ApbCommitTransaction {
	if x != nil {
		return x.CommitTxn
	}
	return nil
}

func (x *S2SWrapper) GetAbortTxn() *ApbAbortTransaction {
	if x != nil {
		return x.AbortTxn
	}
	return nil
}

func (x *S2SWrapper) GetBcPermsReq() *ProtoBCPermissionsReq {
	if x != nil {
		return x.BcPermsReq
	}
	return nil
}

func (x *S2SWrapper) GetSingleRead() *S2SSingleRead {
	if x != nil {
		return x.SingleRead
	}
	return nil
}

type S2SWrapperReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID       *int32                    `protobuf:"varint,1,req,name=clientID" json:"clientID,omitempty"`
	MsgID          *WrapperType              `protobuf:"varint,12,req,name=msgID,enum=WrapperType" json:"msgID,omitempty"`
	StaticReadObjs *ApbStaticReadObjectsResp `protobuf:"bytes,2,opt,name=staticReadObjs" json:"staticReadObjs,omitempty"`
	StartTxn       *ApbStartTransactionResp  `protobuf:"bytes,3,opt,name=startTxn" json:"startTxn,omitempty"`
	ReadObjs       *ApbReadObjectsResp       `protobuf:"bytes,4,opt,name=readObjs" json:"readObjs,omitempty"`
	Upd            *ApbOperationResp         `protobuf:"bytes,5,opt,name=upd" json:"upd,omitempty"`
	CommitTxn      *ApbCommitResp            `protobuf:"bytes,6,opt,name=commitTxn" json:"commitTxn,omitempty"`
	SingleRead     *S2SSingleReadResp        `protobuf:"bytes,7,opt,name=singleRead" json:"singleRead,omitempty"`
}

func (x *S2SWrapperReply) Reset() {
	*x = S2SWrapperReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2SWrapperReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2SWrapperReply) ProtoMessage() {}

func (x *S2SWrapperReply) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2SWrapperReply.ProtoReflect.Descriptor instead.
func (*S2SWrapperReply) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

func (x *S2SWrapperReply) GetClientID() int32 {
	if x != nil && x.ClientID != nil {
		return *x.ClientID
	}
	return 0
}

func (x *S2SWrapperReply) GetMsgID() WrapperType {
	if x != nil && x.MsgID != nil {
		return *x.MsgID
	}
	return WrapperType_STATIC_READ_OBJS
}

func (x *S2SWrapperReply) GetStaticReadObjs() *ApbStaticReadObjectsResp {
	if x != nil {
		return x.StaticReadObjs
	}
	return nil
}

func (x *S2SWrapperReply) GetStartTxn() *ApbStartTransactionResp {
	if x != nil {
		return x.StartTxn
	}
	return nil
}

func (x *S2SWrapperReply) GetReadObjs() *ApbReadObjectsResp {
	if x != nil {
		return x.ReadObjs
	}
	return nil
}

func (x *S2SWrapperReply) GetUpd() *ApbOperationResp {
	if x != nil {
		return x.Upd
	}
	return nil
}

func (x *S2SWrapperReply) GetCommitTxn() *ApbCommitResp {
	if x != nil {
		return x.CommitTxn
	}
	return nil
}

func (x *S2SWrapperReply) GetSingleRead() *S2SSingleReadResp {
	if x != nil {
		return x.SingleRead
	}
	return nil
}

type ProtoBCPermissionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartReqs     []*ProtoBCPermissionsPartReq `protobuf:"bytes,1,rep,name=partReqs" json:"partReqs,omitempty"`
	ReqReplicaID *int32                       `protobuf:"varint,2,req,name=reqReplicaID" json:"reqReplicaID,omitempty"`
}

func (x *ProtoBCPermissionsReq) Reset() {
	*x = ProtoBCPermissionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBCPermissionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBCPermissionsReq) ProtoMessage() {}

func (x *ProtoBCPermissionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBCPermissionsReq.ProtoReflect.Descriptor instead.
func (*ProtoBCPermissionsReq) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoBCPermissionsReq) GetPartReqs() []*ProtoBCPermissionsPartReq {
	if x != nil {
		return x.PartReqs
	}
	return nil
}

func (x *ProtoBCPermissionsReq) GetReqReplicaID() int32 {
	if x != nil && x.ReqReplicaID != nil {
		return *x.ReqReplicaID
	}
	return 0
}

type ProtoBCPermissionsPartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pairs []*ProtoBCPermissionsPair `protobuf:"bytes,1,rep,name=pairs" json:"pairs,omitempty"`
}

func (x *ProtoBCPermissionsPartReq) Reset() {
	*x = ProtoBCPermissionsPartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBCPermissionsPartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBCPermissionsPartReq) ProtoMessage() {}

func (x *ProtoBCPermissionsPartReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBCPermissionsPartReq.ProtoReflect.Descriptor instead.
func (*ProtoBCPermissionsPartReq) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoBCPermissionsPartReq) GetPairs() []*ProtoBCPermissionsPair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type ProtoBCPermissionsPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyParams *ApbBoundObject `protobuf:"bytes,1,req,name=keyParams" json:"keyParams,omitempty"`
	Value     *int32          `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
}

func (x *ProtoBCPermissionsPair) Reset() {
	*x = ProtoBCPermissionsPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBCPermissionsPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBCPermissionsPair) ProtoMessage() {}

func (x *ProtoBCPermissionsPair) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBCPermissionsPair.ProtoReflect.Descriptor instead.
func (*ProtoBCPermissionsPair) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoBCPermissionsPair) GetKeyParams() *ApbBoundObject {
	if x != nil {
		return x.KeyParams
	}
	return nil
}

func (x *ProtoBCPermissionsPair) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type S2SSingleRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyParams *ApbBoundObject     `protobuf:"bytes,1,req,name=keyParams" json:"keyParams,omitempty"`
	Readtype  *READType           `protobuf:"varint,2,opt,name=readtype,enum=READType" json:"readtype,omitempty"` //Must be set if partRead is also set.
	PartRead  *ApbPartialReadArgs `protobuf:"bytes,3,opt,name=partRead" json:"partRead,omitempty"`
}

func (x *S2SSingleRead) Reset() {
	*x = S2SSingleRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2SSingleRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2SSingleRead) ProtoMessage() {}

func (x *S2SSingleRead) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2SSingleRead.ProtoReflect.Descriptor instead.
func (*S2SSingleRead) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{7}
}

func (x *S2SSingleRead) GetKeyParams() *ApbBoundObject {
	if x != nil {
		return x.KeyParams
	}
	return nil
}

func (x *S2SSingleRead) GetReadtype() READType {
	if x != nil && x.Readtype != nil {
		return *x.Readtype
	}
	return READType_FULL
}

func (x *S2SSingleRead) GetPartRead() *ApbPartialReadArgs {
	if x != nil {
		return x.PartRead
	}
	return nil
}

type S2SSingleReadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clk  []byte             `protobuf:"bytes,1,opt,name=clk" json:"clk,omitempty"`
	Resp *ApbReadObjectResp `protobuf:"bytes,2,req,name=resp" json:"resp,omitempty"`
}

func (x *S2SSingleReadResp) Reset() {
	*x = S2SSingleReadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2SSingleReadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2SSingleReadResp) ProtoMessage() {}

func (x *S2SSingleReadResp) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2SSingleReadResp.ProtoReflect.Descriptor instead.
func (*S2SSingleReadResp) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{8}
}

func (x *S2SSingleReadResp) GetClk() []byte {
	if x != nil {
		return x.Clk
	}
	return nil
}

func (x *S2SSingleReadResp) GetResp() *ApbReadObjectResp {
	if x != nil {
		return x.Resp
	}
	return nil
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e,
	0x61, 0x6e, 0x74, 0x69, 0x64, 0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f,
	0x0a, 0x0d, 0x41, 0x70, 0x62, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x22,
	0x68, 0x0a, 0x16, 0x41, 0x70, 0x62, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x79, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x79, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x79, 0x49, 0x50, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x79, 0x49, 0x50, 0x22, 0xe3, 0x04, 0x0a, 0x0a, 0x53, 0x32,
	0x53, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x0c, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x41, 0x70, 0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x61, 0x64,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52,
	0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x52, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x70,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x61, 0x64, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x52, 0x65, 0x61, 0x64, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x55, 0x70, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x70, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x55, 0x70, 0x64, 0x12, 0x30,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x78, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x41, 0x70, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x78, 0x6e,
	0x12, 0x2b, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x73, 0x12, 0x1c, 0x0a,
	0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x70,
	0x62, 0x52, 0x65, 0x61, 0x64, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x23, 0x0a, 0x03, 0x75,
	0x70, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x70, 0x62, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x03, 0x75, 0x70, 0x64,
	0x12, 0x33, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x78, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x41, 0x70, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x54, 0x78, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x54, 0x78,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x70, 0x62, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x61,
	0x62, 0x6f, 0x72, 0x74, 0x54, 0x78, 0x6e, 0x12, 0x36, 0x0a, 0x0a, 0x62, 0x63, 0x50, 0x65, 0x72,
	0x6d, 0x73, 0x52, 0x65, 0x71, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x43, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x52, 0x0a, 0x62, 0x63, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x2e, 0x0a, 0x0a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x32, 0x53, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x0a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x22,
	0x82, 0x03, 0x0a, 0x0f, 0x53, 0x32, 0x53, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x6d, 0x73,
	0x67, 0x49, 0x44, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x61,
	0x64, 0x4f, 0x62, 0x6a, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x70,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x65,
	0x61, 0x64, 0x4f, 0x62, 0x6a, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x78, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x70, 0x62, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x78, 0x6e, 0x12, 0x2f, 0x0a, 0x08,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x41, 0x70, 0x62, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x73, 0x12, 0x23, 0x0a,
	0x03, 0x75, 0x70, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x70, 0x62,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x03, 0x75,
	0x70, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x78, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x41, 0x70, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x78, 0x6e,
	0x12, 0x32, 0x0a, 0x0a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x32, 0x53, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x52, 0x65, 0x61, 0x64, 0x22, 0x73, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x43, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x43, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x71,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x22, 0x4a, 0x0a, 0x19, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x43, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x50,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x43, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x69, 0x72, 0x52, 0x05,
	0x70, 0x61, 0x69, 0x72, 0x73, 0x22, 0x5d, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x43,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x69, 0x72, 0x12,
	0x2d, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x53, 0x32, 0x53, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x62, 0x42,
	0x6f, 0x75, 0x6e, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x09, 0x6b, 0x65, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x41, 0x70, 0x62, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x72, 0x67, 0x73, 0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x52, 0x65, 0x61, 0x64, 0x22, 0x4d,
	0x0a, 0x11, 0x53, 0x32, 0x53, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6c, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x63, 0x6c, 0x6b, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x70, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x70, 0x62, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x52, 0x04, 0x72, 0x65, 0x73, 0x70, 0x2a, 0xb9, 0x01,
	0x0a, 0x0b, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x10, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x4f, 0x42, 0x4a,
	0x53, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x52, 0x45,
	0x41, 0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x5f, 0x54, 0x58, 0x4e, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x4f,
	0x42, 0x4a, 0x53, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41, 0x44, 0x10, 0x06, 0x12,
	0x07, 0x0a, 0x03, 0x55, 0x50, 0x44, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d,
	0x49, 0x54, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x10, 0x09, 0x12,
	0x10, 0x0a, 0x0c, 0x42, 0x43, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0x0a, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x53, 0x49, 0x4e, 0x47,
	0x4c, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x0b, 0x42, 0x15, 0x5a, 0x13, 0x70, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x42, 0x2f, 0x63, 0x72, 0x64, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_server_proto_goTypes = []interface{}{
	(WrapperType)(0),                  // 0: wrapperType
	(*ApbServerConn)(nil),             // 1: ApbServerConn
	(*ApbServerConnReplicaID)(nil),    // 2: ApbServerConnReplicaID
	(*S2SWrapper)(nil),                // 3: S2SWrapper
	(*S2SWrapperReply)(nil),           // 4: S2SWrapperReply
	(*ProtoBCPermissionsReq)(nil),     // 5: ProtoBCPermissionsReq
	(*ProtoBCPermissionsPartReq)(nil), // 6: ProtoBCPermissionsPartReq
	(*ProtoBCPermissionsPair)(nil),    // 7: ProtoBCPermissionsPair
	(*S2SSingleRead)(nil),             // 8: S2SSingleRead
	(*S2SSingleReadResp)(nil),         // 9: S2SSingleReadResp
	(*ApbStaticReadObjects)(nil),      // 10: ApbStaticReadObjects
	(*ApbStaticRead)(nil),             // 11: ApbStaticRead
	(*ApbStaticUpdateObjects)(nil),    // 12: ApbStaticUpdateObjects
	(*ApbStartTransaction)(nil),       // 13: ApbStartTransaction
	(*ApbReadObjects)(nil),            // 14: ApbReadObjects
	(*ApbRead)(nil),                   // 15: ApbRead
	(*ApbUpdateObjects)(nil),          // 16: ApbUpdateObjects
	(*ApbCommitTransaction)(nil),      // 17: ApbCommitTransaction
	(*ApbAbortTransaction)(nil),       // 18: ApbAbortTransaction
	(*ApbStaticReadObjectsResp)(nil),  // 19: ApbStaticReadObjectsResp
	(*ApbStartTransactionResp)(nil),   // 20: ApbStartTransactionResp
	(*ApbReadObjectsResp)(nil),        // 21: ApbReadObjectsResp
	(*ApbOperationResp)(nil),          // 22: ApbOperationResp
	(*ApbCommitResp)(nil),             // 23: ApbCommitResp
	(*ApbBoundObject)(nil),            // 24: ApbBoundObject
	(READType)(0),                     // 25: READ_type
	(*ApbPartialReadArgs)(nil),        // 26: ApbPartialReadArgs
	(*ApbReadObjectResp)(nil),         // 27: ApbReadObjectResp
}
var file_server_proto_depIdxs = []int32{
	0,  // 0: S2SWrapper.msgID:type_name -> wrapperType
	10, // 1: S2SWrapper.staticReadObjs:type_name -> ApbStaticReadObjects
	11, // 2: S2SWrapper.staticRead:type_name -> ApbStaticRead
	12, // 3: S2SWrapper.staticUpd:type_name -> ApbStaticUpdateObjects
	13, // 4: S2SWrapper.startTxn:type_name -> ApbStartTransaction
	14, // 5: S2SWrapper.readObjs:type_name -> ApbReadObjects
	15, // 6: S2SWrapper.read:type_name -> ApbRead
	16, // 7: S2SWrapper.upd:type_name -> ApbUpdateObjects
	17, // 8: S2SWrapper.commitTxn:type_name -> ApbCommitTransaction
	18, // 9: S2SWrapper.abortTxn:type_name -> ApbAbortTransaction
	5,  // 10: S2SWrapper.bcPermsReq:type_name -> ProtoBCPermissionsReq
	8,  // 11: S2SWrapper.singleRead:type_name -> S2SSingleRead
	0,  // 12: S2SWrapperReply.msgID:type_name -> wrapperType
	19, // 13: S2SWrapperReply.staticReadObjs:type_name -> ApbStaticReadObjectsResp
	20, // 14: S2SWrapperReply.startTxn:type_name -> ApbStartTransactionResp
	21, // 15: S2SWrapperReply.readObjs:type_name -> ApbReadObjectsResp
	22, // 16: S2SWrapperReply.upd:type_name -> ApbOperationResp
	23, // 17: S2SWrapperReply.commitTxn:type_name -> ApbCommitResp
	9,  // 18: S2SWrapperReply.singleRead:type_name -> S2SSingleReadResp
	6,  // 19: ProtoBCPermissionsReq.partReqs:type_name -> ProtoBCPermissionsPartReq
	7,  // 20: ProtoBCPermissionsPartReq.pairs:type_name -> ProtoBCPermissionsPair
	24, // 21: ProtoBCPermissionsPair.keyParams:type_name -> ApbBoundObject
	24, // 22: S2SSingleRead.keyParams:type_name -> ApbBoundObject
	25, // 23: S2SSingleRead.readtype:type_name -> READ_type
	26, // 24: S2SSingleRead.partRead:type_name -> ApbPartialReadArgs
	27, // 25: S2SSingleReadResp.resp:type_name -> ApbReadObjectResp
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	file_antidote_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbServerConn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApbServerConnReplicaID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2SWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2SWrapperReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBCPermissionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBCPermissionsPartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBCPermissionsPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2SSingleRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2SSingleReadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		EnumInfos:         file_server_proto_enumTypes,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}
